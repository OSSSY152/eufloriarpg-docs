### YamlMime:ManagedReference
items:
- uid: Clay.Game.Mod.Entities.Entity
  commentId: T:Clay.Game.Mod.Entities.Entity
  id: Entity
  parent: Clay.Game.Mod.Entities
  children:
  - Clay.Game.Mod.Entities.Entity.#ctor
  - Clay.Game.Mod.Entities.Entity._canDie
  - Clay.Game.Mod.Entities.Entity._collisionRadius
  - Clay.Game.Mod.Entities.Entity._contactDamageAmount
  - Clay.Game.Mod.Entities.Entity._damagedFx
  - Clay.Game.Mod.Entities.Entity._deathSfx
  - Clay.Game.Mod.Entities.Entity._destroyedFx
  - Clay.Game.Mod.Entities.Entity._detonator
  - Clay.Game.Mod.Entities.Entity._entityAvatar
  - Clay.Game.Mod.Entities.Entity._entityFlags
  - Clay.Game.Mod.Entities.Entity._entityWorldObject
  - Clay.Game.Mod.Entities.Entity._eufloripediaKey
  - Clay.Game.Mod.Entities.Entity._explosive
  - Clay.Game.Mod.Entities.Entity._fieldOfView
  - Clay.Game.Mod.Entities.Entity._freezeFx
  - Clay.Game.Mod.Entities.Entity._hardPoint1
  - Clay.Game.Mod.Entities.Entity._hardPoint2
  - Clay.Game.Mod.Entities.Entity._hardPoint3
  - Clay.Game.Mod.Entities.Entity._hardPoint4
  - Clay.Game.Mod.Entities.Entity._hardPoint5
  - Clay.Game.Mod.Entities.Entity._hardPoint6
  - Clay.Game.Mod.Entities.Entity._hardPoint7
  - Clay.Game.Mod.Entities.Entity._healthPowerRule
  - Clay.Game.Mod.Entities.Entity._healthRegenRate
  - Clay.Game.Mod.Entities.Entity._maxGroupSize
  - Clay.Game.Mod.Entities.Entity._maxSpeedInterpolator
  - Clay.Game.Mod.Entities.Entity._onActivateHandlers
  - Clay.Game.Mod.Entities.Entity._onAnimateHandlers
  - Clay.Game.Mod.Entities.Entity._onCleanUpHandlers
  - Clay.Game.Mod.Entities.Entity._onDeathHandlers
  - Clay.Game.Mod.Entities.Entity._onUpdateHandlers
  - Clay.Game.Mod.Entities.Entity._scale
  - Clay.Game.Mod.Entities.Entity._sicknessFx
  - Clay.Game.Mod.Entities.Entity._speechBubblePreScaleRadius
  - Clay.Game.Mod.Entities.Entity._speedPowerRule
  - Clay.Game.Mod.Entities.Entity._sprite
  - Clay.Game.Mod.Entities.Entity._stasisFx
  - Clay.Game.Mod.Entities.Entity._stateMachine
  - Clay.Game.Mod.Entities.Entity._targets
  - Clay.Game.Mod.Entities.Entity._terraformEnergyPowerRule
  - Clay.Game.Mod.Entities.Entity._thinkTimer
  - Clay.Game.Mod.Entities.Entity._uiPreScaleRadius
  - Clay.Game.Mod.Entities.Entity._useSpriteWithAvatar
  - Clay.Game.Mod.Entities.Entity._viewRangePowerRule
  - Clay.Game.Mod.Entities.Entity._weakenedFx
  - Clay.Game.Mod.Entities.Entity._worldObjectAvatar
  - Clay.Game.Mod.Entities.Entity.Activate(Attributes,UnityEngine.Vector2,System.Single,Colony,Team)
  - Clay.Game.Mod.Entities.Entity.Activate(UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.Activate(UnityEngine.Vector2,Colony)
  - Clay.Game.Mod.Entities.Entity.AddOverlay(System.String,System.Int32)
  - Clay.Game.Mod.Entities.Entity.AddWeapon(HardPoint)
  - Clay.Game.Mod.Entities.Entity.AddWeapon(System.String,HardPoint)
  - Clay.Game.Mod.Entities.Entity.AddWeapon(System.String,System.String)
  - Clay.Game.Mod.Entities.Entity.AddWeaponToIndex(System.String,System.Int32)
  - Clay.Game.Mod.Entities.Entity.aiGroup
  - Clay.Game.Mod.Entities.Entity.alpha
  - Clay.Game.Mod.Entities.Entity.AttackedBy(Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.attributeRecoveryRate
  - Clay.Game.Mod.Entities.Entity.attributes
  - Clay.Game.Mod.Entities.Entity.audioPosition
  - Clay.Game.Mod.Entities.Entity.audioRange
  - Clay.Game.Mod.Entities.Entity.autoSpawnedPosition
  - Clay.Game.Mod.Entities.Entity.beamParticleProbability
  - Clay.Game.Mod.Entities.Entity.boundingRegionDirty
  - Clay.Game.Mod.Entities.Entity.CallHandlers(System.String[])
  - Clay.Game.Mod.Entities.Entity.CallHandlers(System.String[],System.Object[])
  - Clay.Game.Mod.Entities.Entity.CanAttack
  - Clay.Game.Mod.Entities.Entity.canResurrect
  - Clay.Game.Mod.Entities.Entity.canRotate
  - Clay.Game.Mod.Entities.Entity.CleanUpLevel
  - Clay.Game.Mod.Entities.Entity.CleanUpScripts
  - Clay.Game.Mod.Entities.Entity.ClearSpriteDef
  - Clay.Game.Mod.Entities.Entity.clipRadius
  - Clay.Game.Mod.Entities.Entity.clipRegion
  - Clay.Game.Mod.Entities.Entity.CloneConfiguration(Tuna.Mob)
  - Clay.Game.Mod.Entities.Entity.collidedWithDoor
  - Clay.Game.Mod.Entities.Entity.collidedWithDoorInfo
  - Clay.Game.Mod.Entities.Entity.collidedWithScenery
  - Clay.Game.Mod.Entities.Entity.collidedWithSceneryInfo
  - Clay.Game.Mod.Entities.Entity.collisionQuadTreeNode
  - Clay.Game.Mod.Entities.Entity.collisionRegion
  - Clay.Game.Mod.Entities.Entity.collisionResponseMinSpeed
  - Clay.Game.Mod.Entities.Entity.collisionResponseSpeedMultiplier
  - Clay.Game.Mod.Entities.Entity.colours
  - Clay.Game.Mod.Entities.Entity.CommonCleanUp
  - Clay.Game.Mod.Entities.Entity.cosHalfFieldOfView
  - Clay.Game.Mod.Entities.Entity.CreateInventoryManager
  - Clay.Game.Mod.Entities.Entity.CreateInventoryManager(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Clay.Game.Mod.Entities.Entity.CreateRadarTarget(RadarTypes,System.String)
  - Clay.Game.Mod.Entities.Entity.CreateRenderList
  - Clay.Game.Mod.Entities.Entity.csdata
  - Clay.Game.Mod.Entities.Entity.customisedAttributes
  - Clay.Game.Mod.Entities.Entity.DAMAGE_FLASH_ALPHA
  - Clay.Game.Mod.Entities.Entity.DAMAGE_FLASH_DURATION
  - Clay.Game.Mod.Entities.Entity.DamagedBy(Clay.Game.Mod.Entities.Entity,System.Single,Weapon,System.Boolean,System.Boolean)
  - Clay.Game.Mod.Entities.Entity.damageParticleCountMultiRange
  - Clay.Game.Mod.Entities.Entity.damageProportionForMaxParticles
  - Clay.Game.Mod.Entities.Entity.data
  - Clay.Game.Mod.Entities.Entity.Die(System.Boolean,System.Boolean,System.Boolean)
  - Clay.Game.Mod.Entities.Entity.DieQuietly
  - Clay.Game.Mod.Entities.Entity.DoorCollisionHandler(Door)
  - Clay.Game.Mod.Entities.Entity.doorCollisionsEnabled
  - Clay.Game.Mod.Entities.Entity.DoPhysics(System.Single)
  - Clay.Game.Mod.Entities.Entity.DropDeathEnergy
  - Clay.Game.Mod.Entities.Entity.EarlyRender
  - Clay.Game.Mod.Entities.Entity.editHelpers
  - Clay.Game.Mod.Entities.Entity.EditorHealthChanged
  - Clay.Game.Mod.Entities.Entity.EditorSpriteNameChanged
  - Clay.Game.Mod.Entities.Entity.EnterFreeze(System.Single)
  - Clay.Game.Mod.Entities.Entity.EnterSickness(System.Single)
  - Clay.Game.Mod.Entities.Entity.EnterStasis(System.Single)
  - Clay.Game.Mod.Entities.Entity.EntityFixedUpdate(System.Single)
  - Clay.Game.Mod.Entities.Entity.entityRenderCount
  - Clay.Game.Mod.Entities.Entity.Explode
  - Clay.Game.Mod.Entities.Entity.explodeOnDeath
  - Clay.Game.Mod.Entities.Entity.ExplodeOnTarget(Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.ExplodeOnTargetBranch(FloraBranch,UnityEngine.Vector2,UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.Find(System.String)
  - Clay.Game.Mod.Entities.Entity.FindByInternalUID(System.Int32)
  - Clay.Game.Mod.Entities.Entity.FindByUID(System.String)
  - Clay.Game.Mod.Entities.Entity.FindHardPoint(System.String)
  - Clay.Game.Mod.Entities.Entity.FindHardPointByIndex(System.Int32)
  - Clay.Game.Mod.Entities.Entity.FindNearestEntity(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  - Clay.Game.Mod.Entities.Entity.FindNearestEntityAny(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  - Clay.Game.Mod.Entities.Entity.FindNearestTarget
  - Clay.Game.Mod.Entities.Entity.FindNearestTarget(System.Single)
  - Clay.Game.Mod.Entities.Entity.FindNearestTarget(System.Single,GameUtils.IsEntityTargetValidDelegate)
  - Clay.Game.Mod.Entities.Entity.FindNearestTarget(UnityEngine.Vector3,System.Single)
  - Clay.Game.Mod.Entities.Entity.FindNearestTarget(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  - Clay.Game.Mod.Entities.Entity.FindWeapon(System.String)
  - Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint(HardPoint)
  - Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint(System.String)
  - Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPointIndex(System.Int32)
  - Clay.Game.Mod.Entities.Entity.FixedUpdate(System.Single)
  - Clay.Game.Mod.Entities.Entity.FixedUpdateAllEntityPhysics(System.Single,System.Int32,System.Int32)
  - Clay.Game.Mod.Entities.Entity.FixedUpdatePhysics(System.Single)
  - Clay.Game.Mod.Entities.Entity.FixedUpdateQuadTreeLocators
  - Clay.Game.Mod.Entities.Entity.FloraAttackedBy(Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.FollowEntity(Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.followingEntity
  - Clay.Game.Mod.Entities.Entity.FollowTarget
  - Clay.Game.Mod.Entities.Entity.FrozenBy(Clay.Game.Mod.Entities.Entity,System.Single)
  - Clay.Game.Mod.Entities.Entity.GenerateAllCharacteristics
  - Clay.Game.Mod.Entities.Entity.GenerateCharacteristics
  - Clay.Game.Mod.Entities.Entity.GenerateDependantCharacteristics
  - Clay.Game.Mod.Entities.Entity.GenerateWeaponCharacteristics
  - Clay.Game.Mod.Entities.Entity.GetCommandLine(System.Boolean)
  - Clay.Game.Mod.Entities.Entity.GetRespawnString
  - Clay.Game.Mod.Entities.Entity.HARDPOINT_COUNT
  - Clay.Game.Mod.Entities.Entity.hardPoints
  - Clay.Game.Mod.Entities.Entity.hasFieldOfView
  - Clay.Game.Mod.Entities.Entity.hasHome
  - Clay.Game.Mod.Entities.Entity.Heal
  - Clay.Game.Mod.Entities.Entity.health
  - Clay.Game.Mod.Entities.Entity.healthRatio
  - Clay.Game.Mod.Entities.Entity.HomeDistanceSquared(UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.homePosition
  - Clay.Game.Mod.Entities.Entity.InitialiseApp
  - Clay.Game.Mod.Entities.Entity.InitialiseAttributeMorphing(Attributes,System.Single)
  - Clay.Game.Mod.Entities.Entity.InitialiseLevel
  - Clay.Game.Mod.Entities.Entity.InitialiseScripts(System.Boolean)
  - Clay.Game.Mod.Entities.Entity.InRange(Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.InRange(Clay.Game.Mod.Entities.Entity,System.Single)
  - Clay.Game.Mod.Entities.Entity.InRange(System.Single,System.Single,System.Single)
  - Clay.Game.Mod.Entities.Entity.InRange(UnityEngine.Vector2,System.Single)
  - Clay.Game.Mod.Entities.Entity.inventoryManager
  - Clay.Game.Mod.Entities.Entity.isAlive
  - Clay.Game.Mod.Entities.Entity.isAttractor
  - Clay.Game.Mod.Entities.Entity.isAudioAvailable
  - Clay.Game.Mod.Entities.Entity.isAudioCustomRange
  - Clay.Game.Mod.Entities.Entity.isColonist
  - Clay.Game.Mod.Entities.Entity.isColonyAttackResponse
  - Clay.Game.Mod.Entities.Entity.isContactDamage
  - Clay.Game.Mod.Entities.Entity.IsContactDamageTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.isDamageable
  - Clay.Game.Mod.Entities.Entity.isDamagedByExplosives
  - Clay.Game.Mod.Entities.Entity.isDamagedByFreeze
  - Clay.Game.Mod.Entities.Entity.isDamagedBySickness
  - Clay.Game.Mod.Entities.Entity.isDamagedByStasis
  - Clay.Game.Mod.Entities.Entity.isDamagedBySuppression
  - Clay.Game.Mod.Entities.Entity.isDamagedByWeapons
  - Clay.Game.Mod.Entities.Entity.isDead
  - Clay.Game.Mod.Entities.Entity.isDecorativeEntity
  - Clay.Game.Mod.Entities.Entity.isDetonatorActive
  - Clay.Game.Mod.Entities.Entity.isEnergyDropper
  - Clay.Game.Mod.Entities.Entity.IsEntityVisible(Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.isEquipment
  - Clay.Game.Mod.Entities.Entity.isFlora
  - Clay.Game.Mod.Entities.Entity.IsFloraElementTargetValidCB(FloraElement,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  - Clay.Game.Mod.Entities.Entity.IsFloraTargetValidCB(Clay.Game.Mod.Entities.Flora)
  - Clay.Game.Mod.Entities.Entity.IsFollowTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.isFrozen
  - Clay.Game.Mod.Entities.Entity.IsInFieldOfView(Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.IsInFieldOfView(System.Single,System.Single)
  - Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Rect)
  - Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Vector2,System.Single)
  - Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSight(System.Single,System.Single)
  - Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors(System.Single,System.Single)
  - Clay.Game.Mod.Entities.Entity.IsInLineOfSight(Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.IsInLineOfSight(UnityEngine.Rect)
  - Clay.Game.Mod.Entities.Entity.IsInLineOfSight(UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.IsInLineOfSightIgnoreUnlockedDoors(UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.isInStasis
  - Clay.Game.Mod.Entities.Entity.isInteractive
  - Clay.Game.Mod.Entities.Entity.isInvulnerable
  - Clay.Game.Mod.Entities.Entity.isMine
  - Clay.Game.Mod.Entities.Entity.isMorphingAttributes
  - Clay.Game.Mod.Entities.Entity.IsOnScreen(System.Boolean)
  - Clay.Game.Mod.Entities.Entity.isPlayer
  - Clay.Game.Mod.Entities.Entity.IsPlayerAction
  - Clay.Game.Mod.Entities.Entity.isPreferredTarget
  - Clay.Game.Mod.Entities.Entity.isRepellant
  - Clay.Game.Mod.Entities.Entity.isResurrected
  - Clay.Game.Mod.Entities.Entity.IsSaveable
  - Clay.Game.Mod.Entities.Entity.isSick
  - Clay.Game.Mod.Entities.Entity.IsSicknessTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.isSpawnedByLevel
  - Clay.Game.Mod.Entities.Entity.isSplinePathFinished
  - Clay.Game.Mod.Entities.Entity.isStateLocked
  - Clay.Game.Mod.Entities.Entity.IssueCommand(Clay.Game.CommandTypes,UnityEngine.Vector2,System.Boolean)
  - Clay.Game.Mod.Entities.Entity.isTargetable
  - Clay.Game.Mod.Entities.Entity.isThinking
  - Clay.Game.Mod.Entities.Entity.isThinkingFixedUpdate
  - Clay.Game.Mod.Entities.Entity.lastPosition
  - Clay.Game.Mod.Entities.Entity.LogWeaponDebugInfo(System.Single)
  - Clay.Game.Mod.Entities.Entity.mAttributes
  - Clay.Game.Mod.Entities.Entity.mAutoSpawnedPosition
  - Clay.Game.Mod.Entities.Entity.maxHealth
  - Clay.Game.Mod.Entities.Entity.maxSpeed
  - Clay.Game.Mod.Entities.Entity.mCustomisedSpawnAttributes
  - Clay.Game.Mod.Entities.Entity.mHomePosition
  - Clay.Game.Mod.Entities.Entity.mLastPosition
  - Clay.Game.Mod.Entities.Entity.mMaxSpeed
  - Clay.Game.Mod.Entities.Entity.ModifyHealth(System.Single)
  - Clay.Game.Mod.Entities.Entity.mOnUpdateHandlers
  - Clay.Game.Mod.Entities.Entity.MovementRestricted
  - Clay.Game.Mod.Entities.Entity.MovePosition(System.Single,System.Single)
  - Clay.Game.Mod.Entities.Entity.MovePosition(UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.mPosition
  - Clay.Game.Mod.Entities.Entity.mRotation
  - Clay.Game.Mod.Entities.Entity.MutateAttribute(System.Single,System.Single,System.Single,System.Single)
  - Clay.Game.Mod.Entities.Entity.mVelocity
  - Clay.Game.Mod.Entities.Entity.normalizedFreeze
  - Clay.Game.Mod.Entities.Entity.offScreenAITimerMultiplier
  - Clay.Game.Mod.Entities.Entity.OnEntityDiedOrTrashedListener(System.String,System.Object,System.Object,System.Object)
  - Clay.Game.Mod.Entities.Entity.otherRepawnParams
  - Clay.Game.Mod.Entities.Entity.OutOfHealth
  - Clay.Game.Mod.Entities.Entity.owner
  - Clay.Game.Mod.Entities.Entity.palette
  - Clay.Game.Mod.Entities.Entity.ParentAwakened
  - Clay.Game.Mod.Entities.Entity.ParentColonised
  - Clay.Game.Mod.Entities.Entity.parentColony
  - Clay.Game.Mod.Entities.Entity.parentFlora
  - Clay.Game.Mod.Entities.Entity.ParentFloraDied(System.Boolean)
  - Clay.Game.Mod.Entities.Entity.PingFollowVisual
  - Clay.Game.Mod.Entities.Entity.pitch
  - Clay.Game.Mod.Entities.Entity.PlayOrRetrySfx(System.String)
  - Clay.Game.Mod.Entities.Entity.PlaySfx(System.String)
  - Clay.Game.Mod.Entities.Entity.position
  - Clay.Game.Mod.Entities.Entity.PreferredAiAction
  - Clay.Game.Mod.Entities.Entity.prefersPlayerTarget
  - Clay.Game.Mod.Entities.Entity.ProcessSprites
  - Clay.Game.Mod.Entities.Entity.Prototyped
  - Clay.Game.Mod.Entities.Entity.px
  - Clay.Game.Mod.Entities.Entity.py
  - Clay.Game.Mod.Entities.Entity.quadTreeNode
  - Clay.Game.Mod.Entities.Entity.radarTarget
  - Clay.Game.Mod.Entities.Entity.radius
  - Clay.Game.Mod.Entities.Entity.ReadAIStateConfig(AIState)
  - Clay.Game.Mod.Entities.Entity.ReadProperty(System.Object,System.Reflection.PropertyInfo,Tuna.Setting)
  - Clay.Game.Mod.Entities.Entity.ReadUndefinedSetting(System.Object,Tuna.Setting)
  - Clay.Game.Mod.Entities.Entity.RebuildAIScripts
  - Clay.Game.Mod.Entities.Entity.RebuildAIStateMachine
  - Clay.Game.Mod.Entities.Entity.RebuildAttributes
  - Clay.Game.Mod.Entities.Entity.RebuildPrototype
  - Clay.Game.Mod.Entities.Entity.RebuildSprite
  - Clay.Game.Mod.Entities.Entity.RecalculateExtents
  - Clay.Game.Mod.Entities.Entity.RecalculateSpriteExtents
  - Clay.Game.Mod.Entities.Entity.RecycleConfiguration(Tuna.Mob)
  - Clay.Game.Mod.Entities.Entity.RemoveOverlay(Overlay)
  - Clay.Game.Mod.Entities.Entity.RemoveOverlay(System.String)
  - Clay.Game.Mod.Entities.Entity.RemoveRadarTarget
  - Clay.Game.Mod.Entities.Entity.RemoveSplinePath
  - Clay.Game.Mod.Entities.Entity.RemoveWeapon(System.String)
  - Clay.Game.Mod.Entities.Entity.RemoveWeapon(Weapon)
  - Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(HardPoint)
  - Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String)
  - Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String,HardPoint)
  - Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String,System.String)
  - Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex(System.Int32)
  - Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex(System.String,System.Int32)
  - Clay.Game.Mod.Entities.Entity.Render
  - Clay.Game.Mod.Entities.Entity.RenderDebug
  - Clay.Game.Mod.Entities.Entity.RenderDebugStatString
  - Clay.Game.Mod.Entities.Entity.RenderDebugWeapons
  - Clay.Game.Mod.Entities.Entity.RenderLeaf(FloraLeaf,System.Single,System.Single)
  - Clay.Game.Mod.Entities.Entity.RenderWeapons
  - Clay.Game.Mod.Entities.Entity.requireDoorCollisionTest
  - Clay.Game.Mod.Entities.Entity.requiresLineOfSight
  - Clay.Game.Mod.Entities.Entity.ResetPalette
  - Clay.Game.Mod.Entities.Entity.respawnRule
  - Clay.Game.Mod.Entities.Entity.Resurrect
  - Clay.Game.Mod.Entities.Entity.rotation
  - Clay.Game.Mod.Entities.Entity.scale
  - Clay.Game.Mod.Entities.Entity.SceneryCollisionHandler(DistanceFieldCollisionInfo)
  - Clay.Game.Mod.Entities.Entity.sceneryCollisionsEnabled
  - Clay.Game.Mod.Entities.Entity.seekFriendlyPlayer
  - Clay.Game.Mod.Entities.Entity.seekTargets
  - Clay.Game.Mod.Entities.Entity.sensibleAiPosition
  - Clay.Game.Mod.Entities.Entity.SetAction(PreferredAiAction,UnityEngine.Vector2,System.Boolean,Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.SetAIGroup(AIGroup)
  - Clay.Game.Mod.Entities.Entity.SetAIStateMachineState(System.String)
  - Clay.Game.Mod.Entities.Entity.SetAttributes(Attributes)
  - Clay.Game.Mod.Entities.Entity.SetAttributes(System.Single,System.Single,System.Single)
  - Clay.Game.Mod.Entities.Entity.SetColony(Colony)
  - Clay.Game.Mod.Entities.Entity.SetColony(System.String)
  - Clay.Game.Mod.Entities.Entity.SetFieldOfView(System.Single)
  - Clay.Game.Mod.Entities.Entity.SetHealth(System.Single)
  - Clay.Game.Mod.Entities.Entity.SetHealthRegenRate(System.Single)
  - Clay.Game.Mod.Entities.Entity.SetNameAndUID(System.String,System.String,System.String[])
  - Clay.Game.Mod.Entities.Entity.SetOwner(Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.SetPalette(System.String)
  - Clay.Game.Mod.Entities.Entity.SetPalette(Tuna.Palette)
  - Clay.Game.Mod.Entities.Entity.SetParentColony(Colony)
  - Clay.Game.Mod.Entities.Entity.SetParentFlora(Clay.Game.Mod.Entities.Flora)
  - Clay.Game.Mod.Entities.Entity.SetPitch(System.Single)
  - Clay.Game.Mod.Entities.Entity.SetPlayerAction(System.Boolean)
  - Clay.Game.Mod.Entities.Entity.SetPosition(System.Single,System.Single)
  - Clay.Game.Mod.Entities.Entity.SetPosition(UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.SetRotation(System.Single)
  - Clay.Game.Mod.Entities.Entity.SetScale(System.Single)
  - Clay.Game.Mod.Entities.Entity.SetSpeechBubbleRadius(System.Single)
  - Clay.Game.Mod.Entities.Entity.SetSplinePath(Clay.Game.SplinePath)
  - Clay.Game.Mod.Entities.Entity.SetSplinePath(System.String)
  - Clay.Game.Mod.Entities.Entity.SetSpriteDef(System.String)
  - Clay.Game.Mod.Entities.Entity.SetSpriteDefDelayed(System.String)
  - Clay.Game.Mod.Entities.Entity.SetTeam(System.String)
  - Clay.Game.Mod.Entities.Entity.SetTeam(Team)
  - Clay.Game.Mod.Entities.Entity.SetUIRadius(System.Single)
  - Clay.Game.Mod.Entities.Entity.SetVelocity(System.Single,System.Single)
  - Clay.Game.Mod.Entities.Entity.SetVelocity(UnityEngine.Vector2)
  - Clay.Game.Mod.Entities.Entity.SetViewRange(System.Single)
  - Clay.Game.Mod.Entities.Entity.SetVisiblePitch(System.Single)
  - Clay.Game.Mod.Entities.Entity.SetVisiblePitchForcefully(System.Single)
  - Clay.Game.Mod.Entities.Entity.sicknessRange
  - Clay.Game.Mod.Entities.Entity.sicknessSpeedMultiplier
  - Clay.Game.Mod.Entities.Entity.sInvokeBuffer
  - Clay.Game.Mod.Entities.Entity.sInvokeBuffer2
  - Clay.Game.Mod.Entities.Entity.sInvokeBuffer3
  - Clay.Game.Mod.Entities.Entity.Spawned
  - Clay.Game.Mod.Entities.Entity.SpawnEntity(System.String[],System.Boolean)
  - Clay.Game.Mod.Entities.Entity.SpawnEntityLua(System.String)
  - Clay.Game.Mod.Entities.Entity.spawnHash
  - Clay.Game.Mod.Entities.Entity.speechBubbleRadius
  - Clay.Game.Mod.Entities.Entity.speed
  - Clay.Game.Mod.Entities.Entity.splinePath
  - Clay.Game.Mod.Entities.Entity.splinePathLength
  - Clay.Game.Mod.Entities.Entity.splinePathNearestVertex
  - Clay.Game.Mod.Entities.Entity.splinePathPosition
  - Clay.Game.Mod.Entities.Entity.SpreadSickness(Clay.Game.Mod.Entities.Entity)
  - Clay.Game.Mod.Entities.Entity.spriteDef
  - Clay.Game.Mod.Entities.Entity.spriteInstance
  - Clay.Game.Mod.Entities.Entity.spriteInstanceDirty
  - Clay.Game.Mod.Entities.Entity.spriteName
  - Clay.Game.Mod.Entities.Entity.StartAIStateMachine
  - Clay.Game.Mod.Entities.Entity.stateMachine
  - Clay.Game.Mod.Entities.Entity.stateMachineData
  - Clay.Game.Mod.Entities.Entity.stateName
  - Clay.Game.Mod.Entities.Entity.StatRecord(System.String)
  - Clay.Game.Mod.Entities.Entity.StatRecord(System.String,System.Object[])
  - Clay.Game.Mod.Entities.Entity.StatRecordLine
  - Clay.Game.Mod.Entities.Entity.StatRecordLine(System.String)
  - Clay.Game.Mod.Entities.Entity.StatRecordLine(System.String,System.Object[])
  - Clay.Game.Mod.Entities.Entity.StatsClear
  - Clay.Game.Mod.Entities.Entity.StatsGetString
  - Clay.Game.Mod.Entities.Entity.StopSfx(System.String)
  - Clay.Game.Mod.Entities.Entity.SuppressedBy(Clay.Game.Mod.Entities.Entity,System.Single,System.Boolean,System.Boolean)
  - Clay.Game.Mod.Entities.Entity.TargetablePosition
  - Clay.Game.Mod.Entities.Entity.TargetableRect
  - Clay.Game.Mod.Entities.Entity.targetsEntities
  - Clay.Game.Mod.Entities.Entity.targetsFlora
  - Clay.Game.Mod.Entities.Entity.team
  - Clay.Game.Mod.Entities.Entity.teamName
  - Clay.Game.Mod.Entities.Entity.terraformEnergy
  - Clay.Game.Mod.Entities.Entity.terraformEnergyDropRange
  - Clay.Game.Mod.Entities.Entity.ThreadedUpdateQuadTree
  - Clay.Game.Mod.Entities.Entity.TimedDeath(System.Single)
  - Clay.Game.Mod.Entities.Entity.transform
  - Clay.Game.Mod.Entities.Entity.Trashed
  - Clay.Game.Mod.Entities.Entity.TryAttack(System.Single)
  - Clay.Game.Mod.Entities.Entity.uiRadius
  - Clay.Game.Mod.Entities.Entity.Update(System.Single)
  - Clay.Game.Mod.Entities.Entity.UpdatePersistentEffects(System.Single,System.Boolean)
  - Clay.Game.Mod.Entities.Entity.UpdateQuadTree
  - Clay.Game.Mod.Entities.Entity.useSpawnEntityCommand
  - Clay.Game.Mod.Entities.Entity.ValidateSpawn(System.String[],System.String,Colony,Team,System.Boolean,System.String@,Clay.Game.Mod.Entities.RespawnRules)
  - Clay.Game.Mod.Entities.Entity.velocity
  - Clay.Game.Mod.Entities.Entity.viewRange
  - Clay.Game.Mod.Entities.Entity.visiblePitch
  - Clay.Game.Mod.Entities.Entity.vx
  - Clay.Game.Mod.Entities.Entity.vy
  - Clay.Game.Mod.Entities.Entity.wasAttacked
  - Clay.Game.Mod.Entities.Entity.wasAttackedBy
  - Clay.Game.Mod.Entities.Entity.wasOnScreen
  - Clay.Game.Mod.Entities.Entity.wasSick
  - Clay.Game.Mod.Entities.Entity.WeakenedBy(Clay.Game.Mod.Entities.Entity,System.Single,Weapon,System.Boolean,System.Boolean)
  - Clay.Game.Mod.Entities.Entity.weapons
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: Entity
  fullName: Clay.Game.Mod.Entities.Entity
  type: Class
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Entity
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 62
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: 'public class Entity : Mob, IComparable, IAudioSourceInfo, ITargettable'
    content.vb: >-
      Public Class Entity
          Inherits Mob
          Implements IComparable, IAudioSourceInfo, ITargettable
  inheritance:
  - System.Object
  - Tuna.Mob
  derivedClasses:
  - Clay.Game.Mod.Entities.DataCan
  - Clay.Game.Mod.Entities.DecorativeEntity
  - Clay.Game.Mod.Entities.Flora
  - Clay.Game.Mod.Entities.Pod
  - Clay.Game.Mod.Entities.Projectile
  - Clay.Game.Mod.Entities.Turret
  - Clay.Game.Mod.Entities.Vehicle
  - Clay.Game.Mod.Entities.Vortex
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Clay.Game.Mod.Entities.Entity.terraformEnergyDropRange
  commentId: P:Clay.Game.Mod.Entities.Entity.terraformEnergyDropRange
  id: terraformEnergyDropRange
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: terraformEnergyDropRange
  nameWithType: Entity.terraformEnergyDropRange
  fullName: Clay.Game.Mod.Entities.Entity.terraformEnergyDropRange
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: terraformEnergyDropRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 71
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static float terraformEnergyDropRange { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property terraformEnergyDropRange As Single
  overload: Clay.Game.Mod.Entities.Entity.terraformEnergyDropRange*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.attributeRecoveryRate
  commentId: P:Clay.Game.Mod.Entities.Entity.attributeRecoveryRate
  id: attributeRecoveryRate
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: attributeRecoveryRate
  nameWithType: Entity.attributeRecoveryRate
  fullName: Clay.Game.Mod.Entities.Entity.attributeRecoveryRate
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: attributeRecoveryRate
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 75
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static float attributeRecoveryRate { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property attributeRecoveryRate As Single
  overload: Clay.Game.Mod.Entities.Entity.attributeRecoveryRate*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.collisionResponseMinSpeed
  commentId: P:Clay.Game.Mod.Entities.Entity.collisionResponseMinSpeed
  id: collisionResponseMinSpeed
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: collisionResponseMinSpeed
  nameWithType: Entity.collisionResponseMinSpeed
  fullName: Clay.Game.Mod.Entities.Entity.collisionResponseMinSpeed
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: collisionResponseMinSpeed
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 78
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static float collisionResponseMinSpeed { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property collisionResponseMinSpeed As Single
  overload: Clay.Game.Mod.Entities.Entity.collisionResponseMinSpeed*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.collisionResponseSpeedMultiplier
  commentId: P:Clay.Game.Mod.Entities.Entity.collisionResponseSpeedMultiplier
  id: collisionResponseSpeedMultiplier
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: collisionResponseSpeedMultiplier
  nameWithType: Entity.collisionResponseSpeedMultiplier
  fullName: Clay.Game.Mod.Entities.Entity.collisionResponseSpeedMultiplier
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: collisionResponseSpeedMultiplier
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 81
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static float collisionResponseSpeedMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property collisionResponseSpeedMultiplier As Single
  overload: Clay.Game.Mod.Entities.Entity.collisionResponseSpeedMultiplier*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.damageProportionForMaxParticles
  commentId: P:Clay.Game.Mod.Entities.Entity.damageProportionForMaxParticles
  id: damageProportionForMaxParticles
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: damageProportionForMaxParticles
  nameWithType: Entity.damageProportionForMaxParticles
  fullName: Clay.Game.Mod.Entities.Entity.damageProportionForMaxParticles
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: damageProportionForMaxParticles
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 84
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static float damageProportionForMaxParticles { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property damageProportionForMaxParticles As Single
  overload: Clay.Game.Mod.Entities.Entity.damageProportionForMaxParticles*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.damageParticleCountMultiRange
  commentId: P:Clay.Game.Mod.Entities.Entity.damageParticleCountMultiRange
  id: damageParticleCountMultiRange
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: damageParticleCountMultiRange
  nameWithType: Entity.damageParticleCountMultiRange
  fullName: Clay.Game.Mod.Entities.Entity.damageParticleCountMultiRange
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: damageParticleCountMultiRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 87
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static Vector2 damageParticleCountMultiRange { get; set; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Shared Property damageParticleCountMultiRange As Vector2
  overload: Clay.Game.Mod.Entities.Entity.damageParticleCountMultiRange*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.beamParticleProbability
  commentId: P:Clay.Game.Mod.Entities.Entity.beamParticleProbability
  id: beamParticleProbability
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: beamParticleProbability
  nameWithType: Entity.beamParticleProbability
  fullName: Clay.Game.Mod.Entities.Entity.beamParticleProbability
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: beamParticleProbability
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 90
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static int beamParticleProbability { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property beamParticleProbability As Integer
  overload: Clay.Game.Mod.Entities.Entity.beamParticleProbability*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.sicknessRange
  commentId: P:Clay.Game.Mod.Entities.Entity.sicknessRange
  id: sicknessRange
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: sicknessRange
  nameWithType: Entity.sicknessRange
  fullName: Clay.Game.Mod.Entities.Entity.sicknessRange
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: sicknessRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 93
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static float sicknessRange { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property sicknessRange As Single
  overload: Clay.Game.Mod.Entities.Entity.sicknessRange*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.sicknessSpeedMultiplier
  commentId: P:Clay.Game.Mod.Entities.Entity.sicknessSpeedMultiplier
  id: sicknessSpeedMultiplier
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: sicknessSpeedMultiplier
  nameWithType: Entity.sicknessSpeedMultiplier
  fullName: Clay.Game.Mod.Entities.Entity.sicknessSpeedMultiplier
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: sicknessSpeedMultiplier
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 96
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static float sicknessSpeedMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property sicknessSpeedMultiplier As Single
  overload: Clay.Game.Mod.Entities.Entity.sicknessSpeedMultiplier*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.offScreenAITimerMultiplier
  commentId: P:Clay.Game.Mod.Entities.Entity.offScreenAITimerMultiplier
  id: offScreenAITimerMultiplier
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: offScreenAITimerMultiplier
  nameWithType: Entity.offScreenAITimerMultiplier
  fullName: Clay.Game.Mod.Entities.Entity.offScreenAITimerMultiplier
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: offScreenAITimerMultiplier
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 99
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static float offScreenAITimerMultiplier { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property offScreenAITimerMultiplier As Single
  overload: Clay.Game.Mod.Entities.Entity.offScreenAITimerMultiplier*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity._entityFlags
  commentId: P:Clay.Game.Mod.Entities.Entity._entityFlags
  id: _entityFlags
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _entityFlags
  nameWithType: Entity._entityFlags
  fullName: Clay.Game.Mod.Entities.Entity._entityFlags
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _entityFlags
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 108
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public EntityFlags _entityFlags { get; set; }
    parameters: []
    return:
      type: Clay.Game.Mod.Entities.EntityFlags
    content.vb: Public Property _entityFlags As EntityFlags
  overload: Clay.Game.Mod.Entities.Entity._entityFlags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._sprite
  commentId: P:Clay.Game.Mod.Entities.Entity._sprite
  id: _sprite
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _sprite
  nameWithType: Entity._sprite
  fullName: Clay.Game.Mod.Entities.Entity._sprite
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _sprite
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 111
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _sprite { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _sprite As String
  overload: Clay.Game.Mod.Entities.Entity._sprite*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._speedPowerRule
  commentId: P:Clay.Game.Mod.Entities.Entity._speedPowerRule
  id: _speedPowerRule
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _speedPowerRule
  nameWithType: Entity._speedPowerRule
  fullName: Clay.Game.Mod.Entities.Entity._speedPowerRule
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _speedPowerRule
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 118
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public PowerRule _speedPowerRule { get; set; }
    parameters: []
    return:
      type: Framework.Utils.PowerRule
    content.vb: Public Property _speedPowerRule As PowerRule
  overload: Clay.Game.Mod.Entities.Entity._speedPowerRule*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._viewRangePowerRule
  commentId: P:Clay.Game.Mod.Entities.Entity._viewRangePowerRule
  id: _viewRangePowerRule
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _viewRangePowerRule
  nameWithType: Entity._viewRangePowerRule
  fullName: Clay.Game.Mod.Entities.Entity._viewRangePowerRule
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _viewRangePowerRule
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 121
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public PowerRule _viewRangePowerRule { get; set; }
    parameters: []
    return:
      type: Framework.Utils.PowerRule
    content.vb: Public Property _viewRangePowerRule As PowerRule
  overload: Clay.Game.Mod.Entities.Entity._viewRangePowerRule*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._fieldOfView
  commentId: P:Clay.Game.Mod.Entities.Entity._fieldOfView
  id: _fieldOfView
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _fieldOfView
  nameWithType: Entity._fieldOfView
  fullName: Clay.Game.Mod.Entities.Entity._fieldOfView
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _fieldOfView
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 124
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float _fieldOfView { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property _fieldOfView As Single
  overload: Clay.Game.Mod.Entities.Entity._fieldOfView*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._scale
  commentId: P:Clay.Game.Mod.Entities.Entity._scale
  id: _scale
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _scale
  nameWithType: Entity._scale
  fullName: Clay.Game.Mod.Entities.Entity._scale
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _scale
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 131
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float _scale { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property _scale As Single
  overload: Clay.Game.Mod.Entities.Entity._scale*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._collisionRadius
  commentId: P:Clay.Game.Mod.Entities.Entity._collisionRadius
  id: _collisionRadius
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _collisionRadius
  nameWithType: Entity._collisionRadius
  fullName: Clay.Game.Mod.Entities.Entity._collisionRadius
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _collisionRadius
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 134
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float _collisionRadius { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property _collisionRadius As Single
  overload: Clay.Game.Mod.Entities.Entity._collisionRadius*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._speechBubblePreScaleRadius
  commentId: P:Clay.Game.Mod.Entities.Entity._speechBubblePreScaleRadius
  id: _speechBubblePreScaleRadius
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _speechBubblePreScaleRadius
  nameWithType: Entity._speechBubblePreScaleRadius
  fullName: Clay.Game.Mod.Entities.Entity._speechBubblePreScaleRadius
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _speechBubblePreScaleRadius
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 137
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float _speechBubblePreScaleRadius { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property _speechBubblePreScaleRadius As Single
  overload: Clay.Game.Mod.Entities.Entity._speechBubblePreScaleRadius*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._uiPreScaleRadius
  commentId: P:Clay.Game.Mod.Entities.Entity._uiPreScaleRadius
  id: _uiPreScaleRadius
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _uiPreScaleRadius
  nameWithType: Entity._uiPreScaleRadius
  fullName: Clay.Game.Mod.Entities.Entity._uiPreScaleRadius
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _uiPreScaleRadius
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 140
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float _uiPreScaleRadius { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property _uiPreScaleRadius As Single
  overload: Clay.Game.Mod.Entities.Entity._uiPreScaleRadius*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._stateMachine
  commentId: P:Clay.Game.Mod.Entities.Entity._stateMachine
  id: _stateMachine
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _stateMachine
  nameWithType: Entity._stateMachine
  fullName: Clay.Game.Mod.Entities.Entity._stateMachine
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _stateMachine
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 147
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _stateMachine { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _stateMachine As String
  overload: Clay.Game.Mod.Entities.Entity._stateMachine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._thinkTimer
  commentId: P:Clay.Game.Mod.Entities.Entity._thinkTimer
  id: _thinkTimer
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _thinkTimer
  nameWithType: Entity._thinkTimer
  fullName: Clay.Game.Mod.Entities.Entity._thinkTimer
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _thinkTimer
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 150
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float _thinkTimer { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property _thinkTimer As Single
  overload: Clay.Game.Mod.Entities.Entity._thinkTimer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._targets
  commentId: P:Clay.Game.Mod.Entities.Entity._targets
  id: _targets
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _targets
  nameWithType: Entity._targets
  fullName: Clay.Game.Mod.Entities.Entity._targets
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _targets
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 153
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Targets _targets { get; set; }
    parameters: []
    return:
      type: Targets
    content.vb: Public Property _targets As Targets
  overload: Clay.Game.Mod.Entities.Entity._targets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._maxGroupSize
  commentId: P:Clay.Game.Mod.Entities.Entity._maxGroupSize
  id: _maxGroupSize
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _maxGroupSize
  nameWithType: Entity._maxGroupSize
  fullName: Clay.Game.Mod.Entities.Entity._maxGroupSize
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _maxGroupSize
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 156
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public int _maxGroupSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property _maxGroupSize As Integer
  overload: Clay.Game.Mod.Entities.Entity._maxGroupSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._healthRegenRate
  commentId: P:Clay.Game.Mod.Entities.Entity._healthRegenRate
  id: _healthRegenRate
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _healthRegenRate
  nameWithType: Entity._healthRegenRate
  fullName: Clay.Game.Mod.Entities.Entity._healthRegenRate
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _healthRegenRate
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 164
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float _healthRegenRate { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property _healthRegenRate As Single
  overload: Clay.Game.Mod.Entities.Entity._healthRegenRate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._healthPowerRule
  commentId: P:Clay.Game.Mod.Entities.Entity._healthPowerRule
  id: _healthPowerRule
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _healthPowerRule
  nameWithType: Entity._healthPowerRule
  fullName: Clay.Game.Mod.Entities.Entity._healthPowerRule
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _healthPowerRule
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 167
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public PowerRule _healthPowerRule { get; set; }
    parameters: []
    return:
      type: Framework.Utils.PowerRule
    content.vb: Public Property _healthPowerRule As PowerRule
  overload: Clay.Game.Mod.Entities.Entity._healthPowerRule*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._terraformEnergyPowerRule
  commentId: P:Clay.Game.Mod.Entities.Entity._terraformEnergyPowerRule
  id: _terraformEnergyPowerRule
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _terraformEnergyPowerRule
  nameWithType: Entity._terraformEnergyPowerRule
  fullName: Clay.Game.Mod.Entities.Entity._terraformEnergyPowerRule
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _terraformEnergyPowerRule
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 170
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public PowerRule _terraformEnergyPowerRule { get; set; }
    parameters: []
    return:
      type: Framework.Utils.PowerRule
    content.vb: Public Property _terraformEnergyPowerRule As PowerRule
  overload: Clay.Game.Mod.Entities.Entity._terraformEnergyPowerRule*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._contactDamageAmount
  commentId: P:Clay.Game.Mod.Entities.Entity._contactDamageAmount
  id: _contactDamageAmount
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _contactDamageAmount
  nameWithType: Entity._contactDamageAmount
  fullName: Clay.Game.Mod.Entities.Entity._contactDamageAmount
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _contactDamageAmount
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 177
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  summary: "\nContact damage is applied once every update, and only when entities overlap and are on\nopposing Teams.\n"
  example: []
  syntax:
    content: public float _contactDamageAmount { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property _contactDamageAmount As Single
  overload: Clay.Game.Mod.Entities.Entity._contactDamageAmount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.PreferredAiAction
  commentId: P:Clay.Game.Mod.Entities.Entity.PreferredAiAction
  id: PreferredAiAction
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: PreferredAiAction
  nameWithType: Entity.PreferredAiAction
  fullName: Clay.Game.Mod.Entities.Entity.PreferredAiAction
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: PreferredAiAction
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 180
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public PreferredAiAction PreferredAiAction { get; }
    parameters: []
    return:
      type: PreferredAiAction
    content.vb: Public ReadOnly Property PreferredAiAction As PreferredAiAction
  overload: Clay.Game.Mod.Entities.Entity.PreferredAiAction*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity._explosive
  commentId: P:Clay.Game.Mod.Entities.Entity._explosive
  id: _explosive
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _explosive
  nameWithType: Entity._explosive
  fullName: Clay.Game.Mod.Entities.Entity._explosive
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _explosive
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 186
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Explosive _explosive { get; set; }
    parameters: []
    return:
      type: Explosive
    content.vb: Public Property _explosive As Explosive
  overload: Clay.Game.Mod.Entities.Entity._explosive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._hardPoint1
  commentId: P:Clay.Game.Mod.Entities.Entity._hardPoint1
  id: _hardPoint1
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _hardPoint1
  nameWithType: Entity._hardPoint1
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint1
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _hardPoint1
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 189
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public HardPoint _hardPoint1 { get; set; }
    parameters: []
    return:
      type: HardPoint
    content.vb: Public Property _hardPoint1 As HardPoint
  overload: Clay.Game.Mod.Entities.Entity._hardPoint1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._hardPoint2
  commentId: P:Clay.Game.Mod.Entities.Entity._hardPoint2
  id: _hardPoint2
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _hardPoint2
  nameWithType: Entity._hardPoint2
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint2
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _hardPoint2
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 200
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public HardPoint _hardPoint2 { get; set; }
    parameters: []
    return:
      type: HardPoint
    content.vb: Public Property _hardPoint2 As HardPoint
  overload: Clay.Game.Mod.Entities.Entity._hardPoint2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._hardPoint3
  commentId: P:Clay.Game.Mod.Entities.Entity._hardPoint3
  id: _hardPoint3
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _hardPoint3
  nameWithType: Entity._hardPoint3
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint3
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _hardPoint3
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 211
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public HardPoint _hardPoint3 { get; set; }
    parameters: []
    return:
      type: HardPoint
    content.vb: Public Property _hardPoint3 As HardPoint
  overload: Clay.Game.Mod.Entities.Entity._hardPoint3*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._hardPoint4
  commentId: P:Clay.Game.Mod.Entities.Entity._hardPoint4
  id: _hardPoint4
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _hardPoint4
  nameWithType: Entity._hardPoint4
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint4
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _hardPoint4
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 222
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public HardPoint _hardPoint4 { get; set; }
    parameters: []
    return:
      type: HardPoint
    content.vb: Public Property _hardPoint4 As HardPoint
  overload: Clay.Game.Mod.Entities.Entity._hardPoint4*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._hardPoint5
  commentId: P:Clay.Game.Mod.Entities.Entity._hardPoint5
  id: _hardPoint5
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _hardPoint5
  nameWithType: Entity._hardPoint5
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint5
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _hardPoint5
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 233
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public HardPoint _hardPoint5 { get; set; }
    parameters: []
    return:
      type: HardPoint
    content.vb: Public Property _hardPoint5 As HardPoint
  overload: Clay.Game.Mod.Entities.Entity._hardPoint5*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._hardPoint6
  commentId: P:Clay.Game.Mod.Entities.Entity._hardPoint6
  id: _hardPoint6
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _hardPoint6
  nameWithType: Entity._hardPoint6
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint6
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _hardPoint6
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 244
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public HardPoint _hardPoint6 { get; set; }
    parameters: []
    return:
      type: HardPoint
    content.vb: Public Property _hardPoint6 As HardPoint
  overload: Clay.Game.Mod.Entities.Entity._hardPoint6*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._hardPoint7
  commentId: P:Clay.Game.Mod.Entities.Entity._hardPoint7
  id: _hardPoint7
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _hardPoint7
  nameWithType: Entity._hardPoint7
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint7
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _hardPoint7
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 255
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public HardPoint _hardPoint7 { get; set; }
    parameters: []
    return:
      type: HardPoint
    content.vb: Public Property _hardPoint7 As HardPoint
  overload: Clay.Game.Mod.Entities.Entity._hardPoint7*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._maxSpeedInterpolator
  commentId: P:Clay.Game.Mod.Entities.Entity._maxSpeedInterpolator
  id: _maxSpeedInterpolator
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _maxSpeedInterpolator
  nameWithType: Entity._maxSpeedInterpolator
  fullName: Clay.Game.Mod.Entities.Entity._maxSpeedInterpolator
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _maxSpeedInterpolator
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 266
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public SpeedInterpolator _maxSpeedInterpolator { get; set; }
    parameters: []
    return:
      type: SpeedInterpolator
    content.vb: Public Property _maxSpeedInterpolator As SpeedInterpolator
  overload: Clay.Game.Mod.Entities.Entity._maxSpeedInterpolator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._detonator
  commentId: P:Clay.Game.Mod.Entities.Entity._detonator
  id: _detonator
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _detonator
  nameWithType: Entity._detonator
  fullName: Clay.Game.Mod.Entities.Entity._detonator
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _detonator
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 273
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Detonator _detonator { get; set; }
    parameters: []
    return:
      type: Detonator
    content.vb: Public Property _detonator As Detonator
  overload: Clay.Game.Mod.Entities.Entity._detonator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._damagedFx
  commentId: P:Clay.Game.Mod.Entities.Entity._damagedFx
  id: _damagedFx
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _damagedFx
  nameWithType: Entity._damagedFx
  fullName: Clay.Game.Mod.Entities.Entity._damagedFx
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _damagedFx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 280
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _damagedFx { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _damagedFx As String
  overload: Clay.Game.Mod.Entities.Entity._damagedFx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._weakenedFx
  commentId: P:Clay.Game.Mod.Entities.Entity._weakenedFx
  id: _weakenedFx
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _weakenedFx
  nameWithType: Entity._weakenedFx
  fullName: Clay.Game.Mod.Entities.Entity._weakenedFx
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _weakenedFx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 283
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _weakenedFx { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _weakenedFx As String
  overload: Clay.Game.Mod.Entities.Entity._weakenedFx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._stasisFx
  commentId: P:Clay.Game.Mod.Entities.Entity._stasisFx
  id: _stasisFx
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _stasisFx
  nameWithType: Entity._stasisFx
  fullName: Clay.Game.Mod.Entities.Entity._stasisFx
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _stasisFx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 286
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _stasisFx { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _stasisFx As String
  overload: Clay.Game.Mod.Entities.Entity._stasisFx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._freezeFx
  commentId: P:Clay.Game.Mod.Entities.Entity._freezeFx
  id: _freezeFx
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _freezeFx
  nameWithType: Entity._freezeFx
  fullName: Clay.Game.Mod.Entities.Entity._freezeFx
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _freezeFx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 289
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _freezeFx { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _freezeFx As String
  overload: Clay.Game.Mod.Entities.Entity._freezeFx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._sicknessFx
  commentId: P:Clay.Game.Mod.Entities.Entity._sicknessFx
  id: _sicknessFx
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _sicknessFx
  nameWithType: Entity._sicknessFx
  fullName: Clay.Game.Mod.Entities.Entity._sicknessFx
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _sicknessFx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 292
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _sicknessFx { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _sicknessFx As String
  overload: Clay.Game.Mod.Entities.Entity._sicknessFx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._destroyedFx
  commentId: P:Clay.Game.Mod.Entities.Entity._destroyedFx
  id: _destroyedFx
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _destroyedFx
  nameWithType: Entity._destroyedFx
  fullName: Clay.Game.Mod.Entities.Entity._destroyedFx
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _destroyedFx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 295
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _destroyedFx { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _destroyedFx As String
  overload: Clay.Game.Mod.Entities.Entity._destroyedFx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._deathSfx
  commentId: P:Clay.Game.Mod.Entities.Entity._deathSfx
  id: _deathSfx
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _deathSfx
  nameWithType: Entity._deathSfx
  fullName: Clay.Game.Mod.Entities.Entity._deathSfx
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _deathSfx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 302
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _deathSfx { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _deathSfx As String
  overload: Clay.Game.Mod.Entities.Entity._deathSfx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._onActivateHandlers
  commentId: P:Clay.Game.Mod.Entities.Entity._onActivateHandlers
  id: _onActivateHandlers
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _onActivateHandlers
  nameWithType: Entity._onActivateHandlers
  fullName: Clay.Game.Mod.Entities.Entity._onActivateHandlers
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _onActivateHandlers
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 310
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string[] _onActivateHandlers { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property _onActivateHandlers As String()
  overload: Clay.Game.Mod.Entities.Entity._onActivateHandlers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._onUpdateHandlers
  commentId: P:Clay.Game.Mod.Entities.Entity._onUpdateHandlers
  id: _onUpdateHandlers
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _onUpdateHandlers
  nameWithType: Entity._onUpdateHandlers
  fullName: Clay.Game.Mod.Entities.Entity._onUpdateHandlers
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _onUpdateHandlers
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 313
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string[] _onUpdateHandlers { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property _onUpdateHandlers As String()
  overload: Clay.Game.Mod.Entities.Entity._onUpdateHandlers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._onAnimateHandlers
  commentId: P:Clay.Game.Mod.Entities.Entity._onAnimateHandlers
  id: _onAnimateHandlers
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _onAnimateHandlers
  nameWithType: Entity._onAnimateHandlers
  fullName: Clay.Game.Mod.Entities.Entity._onAnimateHandlers
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _onAnimateHandlers
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 316
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string[] _onAnimateHandlers { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property _onAnimateHandlers As String()
  overload: Clay.Game.Mod.Entities.Entity._onAnimateHandlers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._onDeathHandlers
  commentId: P:Clay.Game.Mod.Entities.Entity._onDeathHandlers
  id: _onDeathHandlers
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _onDeathHandlers
  nameWithType: Entity._onDeathHandlers
  fullName: Clay.Game.Mod.Entities.Entity._onDeathHandlers
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _onDeathHandlers
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 319
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string[] _onDeathHandlers { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property _onDeathHandlers As String()
  overload: Clay.Game.Mod.Entities.Entity._onDeathHandlers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._onCleanUpHandlers
  commentId: P:Clay.Game.Mod.Entities.Entity._onCleanUpHandlers
  id: _onCleanUpHandlers
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _onCleanUpHandlers
  nameWithType: Entity._onCleanUpHandlers
  fullName: Clay.Game.Mod.Entities.Entity._onCleanUpHandlers
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _onCleanUpHandlers
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 322
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string[] _onCleanUpHandlers { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property _onCleanUpHandlers As String()
  overload: Clay.Game.Mod.Entities.Entity._onCleanUpHandlers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._eufloripediaKey
  commentId: P:Clay.Game.Mod.Entities.Entity._eufloripediaKey
  id: _eufloripediaKey
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _eufloripediaKey
  nameWithType: Entity._eufloripediaKey
  fullName: Clay.Game.Mod.Entities.Entity._eufloripediaKey
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _eufloripediaKey
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 325
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _eufloripediaKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _eufloripediaKey As String
  overload: Clay.Game.Mod.Entities.Entity._eufloripediaKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._worldObjectAvatar
  commentId: P:Clay.Game.Mod.Entities.Entity._worldObjectAvatar
  id: _worldObjectAvatar
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _worldObjectAvatar
  nameWithType: Entity._worldObjectAvatar
  fullName: Clay.Game.Mod.Entities.Entity._worldObjectAvatar
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _worldObjectAvatar
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 328
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string _worldObjectAvatar { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property _worldObjectAvatar As String
  overload: Clay.Game.Mod.Entities.Entity._worldObjectAvatar*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._useSpriteWithAvatar
  commentId: P:Clay.Game.Mod.Entities.Entity._useSpriteWithAvatar
  id: _useSpriteWithAvatar
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _useSpriteWithAvatar
  nameWithType: Entity._useSpriteWithAvatar
  fullName: Clay.Game.Mod.Entities.Entity._useSpriteWithAvatar
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _useSpriteWithAvatar
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 331
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool _useSpriteWithAvatar { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property _useSpriteWithAvatar As Boolean
  overload: Clay.Game.Mod.Entities.Entity._useSpriteWithAvatar*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.TargetablePosition
  commentId: P:Clay.Game.Mod.Entities.Entity.TargetablePosition
  id: TargetablePosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: TargetablePosition
  nameWithType: Entity.TargetablePosition
  fullName: Clay.Game.Mod.Entities.Entity.TargetablePosition
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: TargetablePosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 334
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual Vector2 TargetablePosition { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Overridable ReadOnly Property TargetablePosition As Vector2
  overload: Clay.Game.Mod.Entities.Entity.TargetablePosition*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.TargetableRect
  commentId: P:Clay.Game.Mod.Entities.Entity.TargetableRect
  id: TargetableRect
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: TargetableRect
  nameWithType: Entity.TargetableRect
  fullName: Clay.Game.Mod.Entities.Entity.TargetableRect
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: TargetableRect
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 339
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual Rect? TargetableRect { get; }
    parameters: []
    return:
      type: System.Nullable{UnityEngine.Rect}
    content.vb: Public Overridable ReadOnly Property TargetableRect As Rect?
  overload: Clay.Game.Mod.Entities.Entity.TargetableRect*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.sInvokeBuffer
  commentId: F:Clay.Game.Mod.Entities.Entity.sInvokeBuffer
  id: sInvokeBuffer
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: sInvokeBuffer
  nameWithType: Entity.sInvokeBuffer
  fullName: Clay.Game.Mod.Entities.Entity.sInvokeBuffer
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: sInvokeBuffer
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 350
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected static object[] sInvokeBuffer
    return:
      type: System.Object[]
    content.vb: Protected Shared sInvokeBuffer As Object()
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.sInvokeBuffer2
  commentId: F:Clay.Game.Mod.Entities.Entity.sInvokeBuffer2
  id: sInvokeBuffer2
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: sInvokeBuffer2
  nameWithType: Entity.sInvokeBuffer2
  fullName: Clay.Game.Mod.Entities.Entity.sInvokeBuffer2
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: sInvokeBuffer2
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 351
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected static object[] sInvokeBuffer2
    return:
      type: System.Object[]
    content.vb: Protected Shared sInvokeBuffer2 As Object()
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.sInvokeBuffer3
  commentId: F:Clay.Game.Mod.Entities.Entity.sInvokeBuffer3
  id: sInvokeBuffer3
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: sInvokeBuffer3
  nameWithType: Entity.sInvokeBuffer3
  fullName: Clay.Game.Mod.Entities.Entity.sInvokeBuffer3
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: sInvokeBuffer3
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 352
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected static object[] sInvokeBuffer3
    return:
      type: System.Object[]
    content.vb: Protected Shared sInvokeBuffer3 As Object()
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.mAttributes
  commentId: F:Clay.Game.Mod.Entities.Entity.mAttributes
  id: mAttributes
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: mAttributes
  nameWithType: Entity.mAttributes
  fullName: Clay.Game.Mod.Entities.Entity.mAttributes
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: mAttributes
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 373
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected Attributes mAttributes
    return:
      type: Attributes
    content.vb: Protected mAttributes As Attributes
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.mCustomisedSpawnAttributes
  commentId: F:Clay.Game.Mod.Entities.Entity.mCustomisedSpawnAttributes
  id: mCustomisedSpawnAttributes
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: mCustomisedSpawnAttributes
  nameWithType: Entity.mCustomisedSpawnAttributes
  fullName: Clay.Game.Mod.Entities.Entity.mCustomisedSpawnAttributes
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: mCustomisedSpawnAttributes
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 379
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected bool mCustomisedSpawnAttributes
    return:
      type: System.Boolean
    content.vb: Protected mCustomisedSpawnAttributes As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.mPosition
  commentId: F:Clay.Game.Mod.Entities.Entity.mPosition
  id: mPosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: mPosition
  nameWithType: Entity.mPosition
  fullName: Clay.Game.Mod.Entities.Entity.mPosition
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: mPosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 409
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected Vector2 mPosition
    return:
      type: UnityEngine.Vector2
    content.vb: Protected mPosition As Vector2
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.mHomePosition
  commentId: F:Clay.Game.Mod.Entities.Entity.mHomePosition
  id: mHomePosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: mHomePosition
  nameWithType: Entity.mHomePosition
  fullName: Clay.Game.Mod.Entities.Entity.mHomePosition
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: mHomePosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 410
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected Vector2 mHomePosition
    return:
      type: UnityEngine.Vector2
    content.vb: Protected mHomePosition As Vector2
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.mLastPosition
  commentId: F:Clay.Game.Mod.Entities.Entity.mLastPosition
  id: mLastPosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: mLastPosition
  nameWithType: Entity.mLastPosition
  fullName: Clay.Game.Mod.Entities.Entity.mLastPosition
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: mLastPosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 411
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected Vector2 mLastPosition
    return:
      type: UnityEngine.Vector2
    content.vb: Protected mLastPosition As Vector2
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.mVelocity
  commentId: F:Clay.Game.Mod.Entities.Entity.mVelocity
  id: mVelocity
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: mVelocity
  nameWithType: Entity.mVelocity
  fullName: Clay.Game.Mod.Entities.Entity.mVelocity
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: mVelocity
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 412
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected Vector2 mVelocity
    return:
      type: UnityEngine.Vector2
    content.vb: Protected mVelocity As Vector2
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.mRotation
  commentId: F:Clay.Game.Mod.Entities.Entity.mRotation
  id: mRotation
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: mRotation
  nameWithType: Entity.mRotation
  fullName: Clay.Game.Mod.Entities.Entity.mRotation
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: mRotation
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 413
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected float mRotation
    return:
      type: System.Single
    content.vb: Protected mRotation As Single
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.mMaxSpeed
  commentId: F:Clay.Game.Mod.Entities.Entity.mMaxSpeed
  id: mMaxSpeed
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: mMaxSpeed
  nameWithType: Entity.mMaxSpeed
  fullName: Clay.Game.Mod.Entities.Entity.mMaxSpeed
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: mMaxSpeed
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 417
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float mMaxSpeed
    return:
      type: System.Single
    content.vb: Public mMaxSpeed As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.mAutoSpawnedPosition
  commentId: F:Clay.Game.Mod.Entities.Entity.mAutoSpawnedPosition
  id: mAutoSpawnedPosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: mAutoSpawnedPosition
  nameWithType: Entity.mAutoSpawnedPosition
  fullName: Clay.Game.Mod.Entities.Entity.mAutoSpawnedPosition
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: mAutoSpawnedPosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 419
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected bool mAutoSpawnedPosition
    return:
      type: System.Boolean
    content.vb: Protected mAutoSpawnedPosition As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity._entityWorldObject
  commentId: F:Clay.Game.Mod.Entities.Entity._entityWorldObject
  id: _entityWorldObject
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _entityWorldObject
  nameWithType: Entity._entityWorldObject
  fullName: Clay.Game.Mod.Entities.Entity._entityWorldObject
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _entityWorldObject
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 509
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected WorldObject _entityWorldObject
    return:
      type: Clay.Game.WorldObjectSystem.WorldObject
    content.vb: Protected _entityWorldObject As WorldObject
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity._entityAvatar
  commentId: F:Clay.Game.Mod.Entities.Entity._entityAvatar
  id: _entityAvatar
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _entityAvatar
  nameWithType: Entity._entityAvatar
  fullName: Clay.Game.Mod.Entities.Entity._entityAvatar
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _entityAvatar
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 510
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected EntityAvatar _entityAvatar
    return:
      type: Clay.Game.Components.EntityAvatar
    content.vb: Protected _entityAvatar As EntityAvatar
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.mOnUpdateHandlers
  commentId: F:Clay.Game.Mod.Entities.Entity.mOnUpdateHandlers
  id: mOnUpdateHandlers
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: mOnUpdateHandlers
  nameWithType: Entity.mOnUpdateHandlers
  fullName: Clay.Game.Mod.Entities.Entity.mOnUpdateHandlers
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: mOnUpdateHandlers
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 524
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected List<ScriptHandler> mOnUpdateHandlers
    return:
      type: System.Collections.Generic.List{Tuna.ScriptHandler}
    content.vb: Protected mOnUpdateHandlers As List(Of ScriptHandler)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.HARDPOINT_COUNT
  commentId: F:Clay.Game.Mod.Entities.Entity.HARDPOINT_COUNT
  id: HARDPOINT_COUNT
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: HARDPOINT_COUNT
  nameWithType: Entity.HARDPOINT_COUNT
  fullName: Clay.Game.Mod.Entities.Entity.HARDPOINT_COUNT
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: HARDPOINT_COUNT
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 544
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public const int HARDPOINT_COUNT = 7
    return:
      type: System.Int32
    content.vb: Public Const HARDPOINT_COUNT As Integer = 7
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Clay.Game.Mod.Entities.Entity.DAMAGE_FLASH_DURATION
  commentId: F:Clay.Game.Mod.Entities.Entity.DAMAGE_FLASH_DURATION
  id: DAMAGE_FLASH_DURATION
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: DAMAGE_FLASH_DURATION
  nameWithType: Entity.DAMAGE_FLASH_DURATION
  fullName: Clay.Game.Mod.Entities.Entity.DAMAGE_FLASH_DURATION
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: DAMAGE_FLASH_DURATION
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 545
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public const float DAMAGE_FLASH_DURATION = 0.3F
    return:
      type: System.Single
    content.vb: Public Const DAMAGE_FLASH_DURATION As Single = 0.3F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Clay.Game.Mod.Entities.Entity.DAMAGE_FLASH_ALPHA
  commentId: F:Clay.Game.Mod.Entities.Entity.DAMAGE_FLASH_ALPHA
  id: DAMAGE_FLASH_ALPHA
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: DAMAGE_FLASH_ALPHA
  nameWithType: Entity.DAMAGE_FLASH_ALPHA
  fullName: Clay.Game.Mod.Entities.Entity.DAMAGE_FLASH_ALPHA
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: DAMAGE_FLASH_ALPHA
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 546
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public const float DAMAGE_FLASH_ALPHA = 0.9F
    return:
      type: System.Single
    content.vb: Public Const DAMAGE_FLASH_ALPHA As Single = 0.9F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Clay.Game.Mod.Entities.Entity.normalizedFreeze
  commentId: P:Clay.Game.Mod.Entities.Entity.normalizedFreeze
  id: normalizedFreeze
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: normalizedFreeze
  nameWithType: Entity.normalizedFreeze
  fullName: Clay.Game.Mod.Entities.Entity.normalizedFreeze
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: normalizedFreeze
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 548
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float normalizedFreeze { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property normalizedFreeze As Single
  overload: Clay.Game.Mod.Entities.Entity.normalizedFreeze*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.entityRenderCount
  commentId: P:Clay.Game.Mod.Entities.Entity.entityRenderCount
  id: entityRenderCount
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: entityRenderCount
  nameWithType: Entity.entityRenderCount
  fullName: Clay.Game.Mod.Entities.Entity.entityRenderCount
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: entityRenderCount
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 553
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static float entityRenderCount { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly Property entityRenderCount As Single
  overload: Clay.Game.Mod.Entities.Entity.entityRenderCount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.useSpawnEntityCommand
  commentId: P:Clay.Game.Mod.Entities.Entity.useSpawnEntityCommand
  id: useSpawnEntityCommand
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: useSpawnEntityCommand
  nameWithType: Entity.useSpawnEntityCommand
  fullName: Clay.Game.Mod.Entities.Entity.useSpawnEntityCommand
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: useSpawnEntityCommand
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 558
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool useSpawnEntityCommand { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property useSpawnEntityCommand As Boolean
  overload: Clay.Game.Mod.Entities.Entity.useSpawnEntityCommand*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.otherRepawnParams
  commentId: P:Clay.Game.Mod.Entities.Entity.otherRepawnParams
  id: otherRepawnParams
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: otherRepawnParams
  nameWithType: Entity.otherRepawnParams
  fullName: Clay.Game.Mod.Entities.Entity.otherRepawnParams
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: otherRepawnParams
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 564
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public List<string> otherRepawnParams { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property otherRepawnParams As List(Of String)
  overload: Clay.Game.Mod.Entities.Entity.otherRepawnParams*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.canResurrect
  commentId: P:Clay.Game.Mod.Entities.Entity.canResurrect
  id: canResurrect
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: canResurrect
  nameWithType: Entity.canResurrect
  fullName: Clay.Game.Mod.Entities.Entity.canResurrect
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: canResurrect
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 566
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool canResurrect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property canResurrect As Boolean
  overload: Clay.Game.Mod.Entities.Entity.canResurrect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isResurrected
  commentId: P:Clay.Game.Mod.Entities.Entity.isResurrected
  id: isResurrected
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isResurrected
  nameWithType: Entity.isResurrected
  fullName: Clay.Game.Mod.Entities.Entity.isResurrected
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isResurrected
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 572
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isResurrected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isResurrected As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isResurrected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isSpawnedByLevel
  commentId: P:Clay.Game.Mod.Entities.Entity.isSpawnedByLevel
  id: isSpawnedByLevel
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isSpawnedByLevel
  nameWithType: Entity.isSpawnedByLevel
  fullName: Clay.Game.Mod.Entities.Entity.isSpawnedByLevel
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isSpawnedByLevel
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 577
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isSpawnedByLevel { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isSpawnedByLevel As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isSpawnedByLevel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.spawnHash
  commentId: P:Clay.Game.Mod.Entities.Entity.spawnHash
  id: spawnHash
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: spawnHash
  nameWithType: Entity.spawnHash
  fullName: Clay.Game.Mod.Entities.Entity.spawnHash
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: spawnHash
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 582
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string spawnHash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property spawnHash As String
  overload: Clay.Game.Mod.Entities.Entity.spawnHash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.team
  commentId: P:Clay.Game.Mod.Entities.Entity.team
  id: team
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: team
  nameWithType: Entity.team
  fullName: Clay.Game.Mod.Entities.Entity.team
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: team
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 588
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Team team { get; }
    parameters: []
    return:
      type: Team
    content.vb: Public ReadOnly Property team As Team
  overload: Clay.Game.Mod.Entities.Entity.team*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.palette
  commentId: P:Clay.Game.Mod.Entities.Entity.palette
  id: palette
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: palette
  nameWithType: Entity.palette
  fullName: Clay.Game.Mod.Entities.Entity.palette
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: palette
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 593
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Palette palette { get; }
    parameters: []
    return:
      type: Tuna.Palette
    content.vb: Public ReadOnly Property palette As Palette
  overload: Clay.Game.Mod.Entities.Entity.palette*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.colours
  commentId: P:Clay.Game.Mod.Entities.Entity.colours
  id: colours
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: colours
  nameWithType: Entity.colours
  fullName: Clay.Game.Mod.Entities.Entity.colours
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: colours
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 598
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Color[] colours { get; }
    parameters: []
    return:
      type: UnityEngine.Color[]
    content.vb: Public ReadOnly Property colours As Color()
  overload: Clay.Game.Mod.Entities.Entity.colours*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.attributes
  commentId: P:Clay.Game.Mod.Entities.Entity.attributes
  id: attributes
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: attributes
  nameWithType: Entity.attributes
  fullName: Clay.Game.Mod.Entities.Entity.attributes
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: attributes
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 603
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Attributes attributes { get; }
    parameters: []
    return:
      type: Attributes
    content.vb: Public ReadOnly Property attributes As Attributes
  overload: Clay.Game.Mod.Entities.Entity.attributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isMorphingAttributes
  commentId: P:Clay.Game.Mod.Entities.Entity.isMorphingAttributes
  id: isMorphingAttributes
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isMorphingAttributes
  nameWithType: Entity.isMorphingAttributes
  fullName: Clay.Game.Mod.Entities.Entity.isMorphingAttributes
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isMorphingAttributes
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 608
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isMorphingAttributes { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isMorphingAttributes As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isMorphingAttributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.customisedAttributes
  commentId: P:Clay.Game.Mod.Entities.Entity.customisedAttributes
  id: customisedAttributes
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: customisedAttributes
  nameWithType: Entity.customisedAttributes
  fullName: Clay.Game.Mod.Entities.Entity.customisedAttributes
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: customisedAttributes
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 613
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool customisedAttributes { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property customisedAttributes As Boolean
  overload: Clay.Game.Mod.Entities.Entity.customisedAttributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.respawnRule
  commentId: P:Clay.Game.Mod.Entities.Entity.respawnRule
  id: respawnRule
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: respawnRule
  nameWithType: Entity.respawnRule
  fullName: Clay.Game.Mod.Entities.Entity.respawnRule
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: respawnRule
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 618
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public RespawnRules respawnRule { get; set; }
    parameters: []
    return:
      type: Clay.Game.Mod.Entities.RespawnRules
    content.vb: Public Property respawnRule As RespawnRules
  overload: Clay.Game.Mod.Entities.Entity.respawnRule*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.parentFlora
  commentId: P:Clay.Game.Mod.Entities.Entity.parentFlora
  id: parentFlora
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: parentFlora
  nameWithType: Entity.parentFlora
  fullName: Clay.Game.Mod.Entities.Entity.parentFlora
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: parentFlora
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 624
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Flora parentFlora { get; }
    parameters: []
    return:
      type: Clay.Game.Mod.Entities.Flora
    content.vb: Public ReadOnly Property parentFlora As Flora
  overload: Clay.Game.Mod.Entities.Entity.parentFlora*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.parentColony
  commentId: P:Clay.Game.Mod.Entities.Entity.parentColony
  id: parentColony
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: parentColony
  nameWithType: Entity.parentColony
  fullName: Clay.Game.Mod.Entities.Entity.parentColony
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: parentColony
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 629
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Colony parentColony { get; }
    parameters: []
    return:
      type: Colony
    content.vb: Public ReadOnly Property parentColony As Colony
  overload: Clay.Game.Mod.Entities.Entity.parentColony*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.aiGroup
  commentId: P:Clay.Game.Mod.Entities.Entity.aiGroup
  id: aiGroup
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: aiGroup
  nameWithType: Entity.aiGroup
  fullName: Clay.Game.Mod.Entities.Entity.aiGroup
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: aiGroup
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 634
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public AIGroup aiGroup { get; }
    parameters: []
    return:
      type: AIGroup
    content.vb: Public ReadOnly Property aiGroup As AIGroup
  overload: Clay.Game.Mod.Entities.Entity.aiGroup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.spriteName
  commentId: P:Clay.Game.Mod.Entities.Entity.spriteName
  id: spriteName
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: spriteName
  nameWithType: Entity.spriteName
  fullName: Clay.Game.Mod.Entities.Entity.spriteName
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: spriteName
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 639
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string spriteName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property spriteName As String
  overload: Clay.Game.Mod.Entities.Entity.spriteName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.spriteDef
  commentId: P:Clay.Game.Mod.Entities.Entity.spriteDef
  id: spriteDef
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: spriteDef
  nameWithType: Entity.spriteDef
  fullName: Clay.Game.Mod.Entities.Entity.spriteDef
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: spriteDef
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 644
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public SpriteDef spriteDef { get; set; }
    parameters: []
    return:
      type: Tuna.SpriteDef
    content.vb: Public Property spriteDef As SpriteDef
  overload: Clay.Game.Mod.Entities.Entity.spriteDef*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.spriteInstance
  commentId: P:Clay.Game.Mod.Entities.Entity.spriteInstance
  id: spriteInstance
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: spriteInstance
  nameWithType: Entity.spriteInstance
  fullName: Clay.Game.Mod.Entities.Entity.spriteInstance
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: spriteInstance
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 650
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public SpriteInstance spriteInstance { get; set; }
    parameters: []
    return:
      type: Tuna.SpriteInstance
    content.vb: Public Property spriteInstance As SpriteInstance
  overload: Clay.Game.Mod.Entities.Entity.spriteInstance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.alpha
  commentId: P:Clay.Game.Mod.Entities.Entity.alpha
  id: alpha
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: alpha
  nameWithType: Entity.alpha
  fullName: Clay.Game.Mod.Entities.Entity.alpha
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: alpha
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 656
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float alpha { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property alpha As Single
  overload: Clay.Game.Mod.Entities.Entity.alpha*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.spriteInstanceDirty
  commentId: P:Clay.Game.Mod.Entities.Entity.spriteInstanceDirty
  id: spriteInstanceDirty
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: spriteInstanceDirty
  nameWithType: Entity.spriteInstanceDirty
  fullName: Clay.Game.Mod.Entities.Entity.spriteInstanceDirty
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: spriteInstanceDirty
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 658
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool spriteInstanceDirty { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property spriteInstanceDirty As Boolean
  overload: Clay.Game.Mod.Entities.Entity.spriteInstanceDirty*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.boundingRegionDirty
  commentId: P:Clay.Game.Mod.Entities.Entity.boundingRegionDirty
  id: boundingRegionDirty
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: boundingRegionDirty
  nameWithType: Entity.boundingRegionDirty
  fullName: Clay.Game.Mod.Entities.Entity.boundingRegionDirty
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: boundingRegionDirty
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 664
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool boundingRegionDirty { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property boundingRegionDirty As Boolean
  overload: Clay.Game.Mod.Entities.Entity.boundingRegionDirty*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.radarTarget
  commentId: P:Clay.Game.Mod.Entities.Entity.radarTarget
  id: radarTarget
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: radarTarget
  nameWithType: Entity.radarTarget
  fullName: Clay.Game.Mod.Entities.Entity.radarTarget
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: radarTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 670
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public RadarTarget radarTarget { get; }
    parameters: []
    return:
      type: RadarTarget
    content.vb: Public ReadOnly Property radarTarget As RadarTarget
  overload: Clay.Game.Mod.Entities.Entity.radarTarget*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.maxSpeed
  commentId: P:Clay.Game.Mod.Entities.Entity.maxSpeed
  id: maxSpeed
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: maxSpeed
  nameWithType: Entity.maxSpeed
  fullName: Clay.Game.Mod.Entities.Entity.maxSpeed
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: maxSpeed
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 675
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float maxSpeed { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property maxSpeed As Single
  overload: Clay.Game.Mod.Entities.Entity.maxSpeed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.position
  commentId: P:Clay.Game.Mod.Entities.Entity.position
  id: position
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: position
  nameWithType: Entity.position
  fullName: Clay.Game.Mod.Entities.Entity.position
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: position
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 681
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Vector2 position { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property position As Vector2
  overload: Clay.Game.Mod.Entities.Entity.position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.sensibleAiPosition
  commentId: P:Clay.Game.Mod.Entities.Entity.sensibleAiPosition
  id: sensibleAiPosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: sensibleAiPosition
  nameWithType: Entity.sensibleAiPosition
  fullName: Clay.Game.Mod.Entities.Entity.sensibleAiPosition
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: sensibleAiPosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 686
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual Vector2 sensibleAiPosition { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Overridable ReadOnly Property sensibleAiPosition As Vector2
  overload: Clay.Game.Mod.Entities.Entity.sensibleAiPosition*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.velocity
  commentId: P:Clay.Game.Mod.Entities.Entity.velocity
  id: velocity
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: velocity
  nameWithType: Entity.velocity
  fullName: Clay.Game.Mod.Entities.Entity.velocity
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: velocity
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 692
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Vector2 velocity { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property velocity As Vector2
  overload: Clay.Game.Mod.Entities.Entity.velocity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.rotation
  commentId: P:Clay.Game.Mod.Entities.Entity.rotation
  id: rotation
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: rotation
  nameWithType: Entity.rotation
  fullName: Clay.Game.Mod.Entities.Entity.rotation
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: rotation
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 697
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float rotation { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property rotation As Single
  overload: Clay.Game.Mod.Entities.Entity.rotation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.scale
  commentId: P:Clay.Game.Mod.Entities.Entity.scale
  id: scale
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: scale
  nameWithType: Entity.scale
  fullName: Clay.Game.Mod.Entities.Entity.scale
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: scale
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 702
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float scale { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property scale As Single
  overload: Clay.Game.Mod.Entities.Entity.scale*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.lastPosition
  commentId: P:Clay.Game.Mod.Entities.Entity.lastPosition
  id: lastPosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: lastPosition
  nameWithType: Entity.lastPosition
  fullName: Clay.Game.Mod.Entities.Entity.lastPosition
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: lastPosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 708
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Vector2 lastPosition { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property lastPosition As Vector2
  overload: Clay.Game.Mod.Entities.Entity.lastPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.speed
  commentId: P:Clay.Game.Mod.Entities.Entity.speed
  id: speed
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: speed
  nameWithType: Entity.speed
  fullName: Clay.Game.Mod.Entities.Entity.speed
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: speed
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 713
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual float speed { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overridable ReadOnly Property speed As Single
  overload: Clay.Game.Mod.Entities.Entity.speed*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.px
  commentId: P:Clay.Game.Mod.Entities.Entity.px
  id: px
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: px
  nameWithType: Entity.px
  fullName: Clay.Game.Mod.Entities.Entity.px
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: px
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 718
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float px { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property px As Single
  overload: Clay.Game.Mod.Entities.Entity.px*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.py
  commentId: P:Clay.Game.Mod.Entities.Entity.py
  id: py
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: py
  nameWithType: Entity.py
  fullName: Clay.Game.Mod.Entities.Entity.py
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: py
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 723
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float py { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property py As Single
  overload: Clay.Game.Mod.Entities.Entity.py*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.vx
  commentId: P:Clay.Game.Mod.Entities.Entity.vx
  id: vx
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: vx
  nameWithType: Entity.vx
  fullName: Clay.Game.Mod.Entities.Entity.vx
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: vx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 728
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float vx { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property vx As Single
  overload: Clay.Game.Mod.Entities.Entity.vx*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.vy
  commentId: P:Clay.Game.Mod.Entities.Entity.vy
  id: vy
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: vy
  nameWithType: Entity.vy
  fullName: Clay.Game.Mod.Entities.Entity.vy
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: vy
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 733
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float vy { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property vy As Single
  overload: Clay.Game.Mod.Entities.Entity.vy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.viewRange
  commentId: P:Clay.Game.Mod.Entities.Entity.viewRange
  id: viewRange
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: viewRange
  nameWithType: Entity.viewRange
  fullName: Clay.Game.Mod.Entities.Entity.viewRange
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: viewRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 738
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float viewRange { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property viewRange As Single
  overload: Clay.Game.Mod.Entities.Entity.viewRange*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.hasFieldOfView
  commentId: P:Clay.Game.Mod.Entities.Entity.hasFieldOfView
  id: hasFieldOfView
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: hasFieldOfView
  nameWithType: Entity.hasFieldOfView
  fullName: Clay.Game.Mod.Entities.Entity.hasFieldOfView
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: hasFieldOfView
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 743
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool hasFieldOfView { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property hasFieldOfView As Boolean
  overload: Clay.Game.Mod.Entities.Entity.hasFieldOfView*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.cosHalfFieldOfView
  commentId: P:Clay.Game.Mod.Entities.Entity.cosHalfFieldOfView
  id: cosHalfFieldOfView
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: cosHalfFieldOfView
  nameWithType: Entity.cosHalfFieldOfView
  fullName: Clay.Game.Mod.Entities.Entity.cosHalfFieldOfView
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: cosHalfFieldOfView
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 748
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float cosHalfFieldOfView { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property cosHalfFieldOfView As Single
  overload: Clay.Game.Mod.Entities.Entity.cosHalfFieldOfView*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.radius
  commentId: P:Clay.Game.Mod.Entities.Entity.radius
  id: radius
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: radius
  nameWithType: Entity.radius
  fullName: Clay.Game.Mod.Entities.Entity.radius
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: radius
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 753
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float radius { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property radius As Single
  overload: Clay.Game.Mod.Entities.Entity.radius*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.clipRadius
  commentId: P:Clay.Game.Mod.Entities.Entity.clipRadius
  id: clipRadius
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: clipRadius
  nameWithType: Entity.clipRadius
  fullName: Clay.Game.Mod.Entities.Entity.clipRadius
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: clipRadius
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 758
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float clipRadius { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property clipRadius As Single
  overload: Clay.Game.Mod.Entities.Entity.clipRadius*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.speechBubbleRadius
  commentId: P:Clay.Game.Mod.Entities.Entity.speechBubbleRadius
  id: speechBubbleRadius
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: speechBubbleRadius
  nameWithType: Entity.speechBubbleRadius
  fullName: Clay.Game.Mod.Entities.Entity.speechBubbleRadius
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: speechBubbleRadius
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 763
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float speechBubbleRadius { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property speechBubbleRadius As Single
  overload: Clay.Game.Mod.Entities.Entity.speechBubbleRadius*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.uiRadius
  commentId: P:Clay.Game.Mod.Entities.Entity.uiRadius
  id: uiRadius
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: uiRadius
  nameWithType: Entity.uiRadius
  fullName: Clay.Game.Mod.Entities.Entity.uiRadius
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: uiRadius
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 768
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float uiRadius { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property uiRadius As Single
  overload: Clay.Game.Mod.Entities.Entity.uiRadius*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.clipRegion
  commentId: P:Clay.Game.Mod.Entities.Entity.clipRegion
  id: clipRegion
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: clipRegion
  nameWithType: Entity.clipRegion
  fullName: Clay.Game.Mod.Entities.Entity.clipRegion
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: clipRegion
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 773
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public CenteredAxisAlignedBox clipRegion { get; }
    parameters: []
    return:
      type: Tuna.CenteredAxisAlignedBox
    content.vb: Public ReadOnly Property clipRegion As CenteredAxisAlignedBox
  overload: Clay.Game.Mod.Entities.Entity.clipRegion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.collisionRegion
  commentId: P:Clay.Game.Mod.Entities.Entity.collisionRegion
  id: collisionRegion
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: collisionRegion
  nameWithType: Entity.collisionRegion
  fullName: Clay.Game.Mod.Entities.Entity.collisionRegion
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: collisionRegion
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 778
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public CenteredCircle collisionRegion { get; }
    parameters: []
    return:
      type: Tuna.CenteredCircle
    content.vb: Public ReadOnly Property collisionRegion As CenteredCircle
  overload: Clay.Game.Mod.Entities.Entity.collisionRegion*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.quadTreeNode
  commentId: P:Clay.Game.Mod.Entities.Entity.quadTreeNode
  id: quadTreeNode
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: quadTreeNode
  nameWithType: Entity.quadTreeNode
  fullName: Clay.Game.Mod.Entities.Entity.quadTreeNode
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: quadTreeNode
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 783
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public QuadTreeNode quadTreeNode { get; }
    parameters: []
    return:
      type: QuadTreeNode
    content.vb: Public ReadOnly Property quadTreeNode As QuadTreeNode
  overload: Clay.Game.Mod.Entities.Entity.quadTreeNode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.collisionQuadTreeNode
  commentId: P:Clay.Game.Mod.Entities.Entity.collisionQuadTreeNode
  id: collisionQuadTreeNode
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: collisionQuadTreeNode
  nameWithType: Entity.collisionQuadTreeNode
  fullName: Clay.Game.Mod.Entities.Entity.collisionQuadTreeNode
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: collisionQuadTreeNode
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 788
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public QuadTreeNode collisionQuadTreeNode { get; }
    parameters: []
    return:
      type: QuadTreeNode
    content.vb: Public ReadOnly Property collisionQuadTreeNode As QuadTreeNode
  overload: Clay.Game.Mod.Entities.Entity.collisionQuadTreeNode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.wasOnScreen
  commentId: P:Clay.Game.Mod.Entities.Entity.wasOnScreen
  id: wasOnScreen
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: wasOnScreen
  nameWithType: Entity.wasOnScreen
  fullName: Clay.Game.Mod.Entities.Entity.wasOnScreen
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: wasOnScreen
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 793
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool wasOnScreen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property wasOnScreen As Boolean
  overload: Clay.Game.Mod.Entities.Entity.wasOnScreen*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.pitch
  commentId: P:Clay.Game.Mod.Entities.Entity.pitch
  id: pitch
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: pitch
  nameWithType: Entity.pitch
  fullName: Clay.Game.Mod.Entities.Entity.pitch
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: pitch
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 798
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual float pitch { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overridable ReadOnly Property pitch As Single
  overload: Clay.Game.Mod.Entities.Entity.pitch*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.visiblePitch
  commentId: P:Clay.Game.Mod.Entities.Entity.visiblePitch
  id: visiblePitch
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: visiblePitch
  nameWithType: Entity.visiblePitch
  fullName: Clay.Game.Mod.Entities.Entity.visiblePitch
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: visiblePitch
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 803
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual float visiblePitch { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overridable ReadOnly Property visiblePitch As Single
  overload: Clay.Game.Mod.Entities.Entity.visiblePitch*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.autoSpawnedPosition
  commentId: P:Clay.Game.Mod.Entities.Entity.autoSpawnedPosition
  id: autoSpawnedPosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: autoSpawnedPosition
  nameWithType: Entity.autoSpawnedPosition
  fullName: Clay.Game.Mod.Entities.Entity.autoSpawnedPosition
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: autoSpawnedPosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 808
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool autoSpawnedPosition { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property autoSpawnedPosition As Boolean
  overload: Clay.Game.Mod.Entities.Entity.autoSpawnedPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.stateName
  commentId: P:Clay.Game.Mod.Entities.Entity.stateName
  id: stateName
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: stateName
  nameWithType: Entity.stateName
  fullName: Clay.Game.Mod.Entities.Entity.stateName
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: stateName
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 813
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string stateName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property stateName As String
  overload: Clay.Game.Mod.Entities.Entity.stateName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.stateMachineData
  commentId: P:Clay.Game.Mod.Entities.Entity.stateMachineData
  id: stateMachineData
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: stateMachineData
  nameWithType: Entity.stateMachineData
  fullName: Clay.Game.Mod.Entities.Entity.stateMachineData
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: stateMachineData
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 818
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public AIStateMachineData stateMachineData { get; }
    parameters: []
    return:
      type: AIStateMachineData
    content.vb: Public ReadOnly Property stateMachineData As AIStateMachineData
  overload: Clay.Game.Mod.Entities.Entity.stateMachineData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.stateMachine
  commentId: P:Clay.Game.Mod.Entities.Entity.stateMachine
  id: stateMachine
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: stateMachine
  nameWithType: Entity.stateMachine
  fullName: Clay.Game.Mod.Entities.Entity.stateMachine
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: stateMachine
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 823
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public AIStateMachine stateMachine { get; }
    parameters: []
    return:
      type: AIStateMachine
    content.vb: Public ReadOnly Property stateMachine As AIStateMachine
  overload: Clay.Game.Mod.Entities.Entity.stateMachine*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.targetsEntities
  commentId: P:Clay.Game.Mod.Entities.Entity.targetsEntities
  id: targetsEntities
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: targetsEntities
  nameWithType: Entity.targetsEntities
  fullName: Clay.Game.Mod.Entities.Entity.targetsEntities
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: targetsEntities
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 828
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool targetsEntities { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property targetsEntities As Boolean
  overload: Clay.Game.Mod.Entities.Entity.targetsEntities*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.targetsFlora
  commentId: P:Clay.Game.Mod.Entities.Entity.targetsFlora
  id: targetsFlora
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: targetsFlora
  nameWithType: Entity.targetsFlora
  fullName: Clay.Game.Mod.Entities.Entity.targetsFlora
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: targetsFlora
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 833
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool targetsFlora { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property targetsFlora As Boolean
  overload: Clay.Game.Mod.Entities.Entity.targetsFlora*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.prefersPlayerTarget
  commentId: P:Clay.Game.Mod.Entities.Entity.prefersPlayerTarget
  id: prefersPlayerTarget
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: prefersPlayerTarget
  nameWithType: Entity.prefersPlayerTarget
  fullName: Clay.Game.Mod.Entities.Entity.prefersPlayerTarget
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: prefersPlayerTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 838
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool prefersPlayerTarget { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property prefersPlayerTarget As Boolean
  overload: Clay.Game.Mod.Entities.Entity.prefersPlayerTarget*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.followingEntity
  commentId: P:Clay.Game.Mod.Entities.Entity.followingEntity
  id: followingEntity
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: followingEntity
  nameWithType: Entity.followingEntity
  fullName: Clay.Game.Mod.Entities.Entity.followingEntity
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: followingEntity
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 843
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity followingEntity { get; set; }
    parameters: []
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Property followingEntity As Entity
  overload: Clay.Game.Mod.Entities.Entity.followingEntity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.owner
  commentId: P:Clay.Game.Mod.Entities.Entity.owner
  id: owner
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: Entity.owner
  fullName: Clay.Game.Mod.Entities.Entity.owner
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: owner
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 852
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity owner { get; }
    parameters: []
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public ReadOnly Property owner As Entity
  overload: Clay.Game.Mod.Entities.Entity.owner*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.splinePath
  commentId: P:Clay.Game.Mod.Entities.Entity.splinePath
  id: splinePath
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: splinePath
  nameWithType: Entity.splinePath
  fullName: Clay.Game.Mod.Entities.Entity.splinePath
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: splinePath
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 857
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public SplinePath splinePath { get; }
    parameters: []
    return:
      type: Clay.Game.SplinePath
    content.vb: Public ReadOnly Property splinePath As SplinePath
  overload: Clay.Game.Mod.Entities.Entity.splinePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.splinePathPosition
  commentId: P:Clay.Game.Mod.Entities.Entity.splinePathPosition
  id: splinePathPosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: splinePathPosition
  nameWithType: Entity.splinePathPosition
  fullName: Clay.Game.Mod.Entities.Entity.splinePathPosition
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: splinePathPosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 862
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float splinePathPosition { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property splinePathPosition As Single
  overload: Clay.Game.Mod.Entities.Entity.splinePathPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.splinePathLength
  commentId: P:Clay.Game.Mod.Entities.Entity.splinePathLength
  id: splinePathLength
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: splinePathLength
  nameWithType: Entity.splinePathLength
  fullName: Clay.Game.Mod.Entities.Entity.splinePathLength
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: splinePathLength
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 868
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float splinePathLength { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property splinePathLength As Single
  overload: Clay.Game.Mod.Entities.Entity.splinePathLength*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.splinePathNearestVertex
  commentId: P:Clay.Game.Mod.Entities.Entity.splinePathNearestVertex
  id: splinePathNearestVertex
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: splinePathNearestVertex
  nameWithType: Entity.splinePathNearestVertex
  fullName: Clay.Game.Mod.Entities.Entity.splinePathNearestVertex
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: splinePathNearestVertex
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 873
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public int splinePathNearestVertex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property splinePathNearestVertex As Integer
  overload: Clay.Game.Mod.Entities.Entity.splinePathNearestVertex*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isSplinePathFinished
  commentId: P:Clay.Game.Mod.Entities.Entity.isSplinePathFinished
  id: isSplinePathFinished
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isSplinePathFinished
  nameWithType: Entity.isSplinePathFinished
  fullName: Clay.Game.Mod.Entities.Entity.isSplinePathFinished
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isSplinePathFinished
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 878
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isSplinePathFinished { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isSplinePathFinished As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isSplinePathFinished*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.health
  commentId: P:Clay.Game.Mod.Entities.Entity.health
  id: health
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: health
  nameWithType: Entity.health
  fullName: Clay.Game.Mod.Entities.Entity.health
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: health
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 883
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float health { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property health As Single
  overload: Clay.Game.Mod.Entities.Entity.health*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.maxHealth
  commentId: P:Clay.Game.Mod.Entities.Entity.maxHealth
  id: maxHealth
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: maxHealth
  nameWithType: Entity.maxHealth
  fullName: Clay.Game.Mod.Entities.Entity.maxHealth
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: maxHealth
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 888
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float maxHealth { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property maxHealth As Single
  overload: Clay.Game.Mod.Entities.Entity.maxHealth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.healthRatio
  commentId: P:Clay.Game.Mod.Entities.Entity.healthRatio
  id: healthRatio
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: healthRatio
  nameWithType: Entity.healthRatio
  fullName: Clay.Game.Mod.Entities.Entity.healthRatio
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: healthRatio
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 894
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float healthRatio { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property healthRatio As Single
  overload: Clay.Game.Mod.Entities.Entity.healthRatio*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.terraformEnergy
  commentId: P:Clay.Game.Mod.Entities.Entity.terraformEnergy
  id: terraformEnergy
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: terraformEnergy
  nameWithType: Entity.terraformEnergy
  fullName: Clay.Game.Mod.Entities.Entity.terraformEnergy
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: terraformEnergy
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 899
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public int terraformEnergy { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property terraformEnergy As Integer
  overload: Clay.Game.Mod.Entities.Entity.terraformEnergy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.hardPoints
  commentId: P:Clay.Game.Mod.Entities.Entity.hardPoints
  id: hardPoints
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: hardPoints
  nameWithType: Entity.hardPoints
  fullName: Clay.Game.Mod.Entities.Entity.hardPoints
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: hardPoints
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 905
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public HardPoint[] hardPoints { get; }
    parameters: []
    return:
      type: HardPoint[]
    content.vb: Public ReadOnly Property hardPoints As HardPoint()
  overload: Clay.Game.Mod.Entities.Entity.hardPoints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.weapons
  commentId: P:Clay.Game.Mod.Entities.Entity.weapons
  id: weapons
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: weapons
  nameWithType: Entity.weapons
  fullName: Clay.Game.Mod.Entities.Entity.weapons
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: weapons
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 910
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public List<Weapon> weapons { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Weapon}
    content.vb: Public ReadOnly Property weapons As List(Of Weapon)
  overload: Clay.Game.Mod.Entities.Entity.weapons*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.explodeOnDeath
  commentId: P:Clay.Game.Mod.Entities.Entity.explodeOnDeath
  id: explodeOnDeath
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: explodeOnDeath
  nameWithType: Entity.explodeOnDeath
  fullName: Clay.Game.Mod.Entities.Entity.explodeOnDeath
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: explodeOnDeath
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 915
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool explodeOnDeath { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property explodeOnDeath As Boolean
  overload: Clay.Game.Mod.Entities.Entity.explodeOnDeath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.wasAttacked
  commentId: P:Clay.Game.Mod.Entities.Entity.wasAttacked
  id: wasAttacked
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: wasAttacked
  nameWithType: Entity.wasAttacked
  fullName: Clay.Game.Mod.Entities.Entity.wasAttacked
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: wasAttacked
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 920
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool wasAttacked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property wasAttacked As Boolean
  overload: Clay.Game.Mod.Entities.Entity.wasAttacked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.wasAttackedBy
  commentId: P:Clay.Game.Mod.Entities.Entity.wasAttackedBy
  id: wasAttackedBy
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: wasAttackedBy
  nameWithType: Entity.wasAttackedBy
  fullName: Clay.Game.Mod.Entities.Entity.wasAttackedBy
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: wasAttackedBy
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 925
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity wasAttackedBy { get; }
    parameters: []
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public ReadOnly Property wasAttackedBy As Entity
  overload: Clay.Game.Mod.Entities.Entity.wasAttackedBy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.sceneryCollisionsEnabled
  commentId: P:Clay.Game.Mod.Entities.Entity.sceneryCollisionsEnabled
  id: sceneryCollisionsEnabled
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: sceneryCollisionsEnabled
  nameWithType: Entity.sceneryCollisionsEnabled
  fullName: Clay.Game.Mod.Entities.Entity.sceneryCollisionsEnabled
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: sceneryCollisionsEnabled
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 930
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool sceneryCollisionsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property sceneryCollisionsEnabled As Boolean
  overload: Clay.Game.Mod.Entities.Entity.sceneryCollisionsEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.collidedWithScenery
  commentId: P:Clay.Game.Mod.Entities.Entity.collidedWithScenery
  id: collidedWithScenery
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: collidedWithScenery
  nameWithType: Entity.collidedWithScenery
  fullName: Clay.Game.Mod.Entities.Entity.collidedWithScenery
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: collidedWithScenery
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 932
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool collidedWithScenery { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property collidedWithScenery As Boolean
  overload: Clay.Game.Mod.Entities.Entity.collidedWithScenery*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.collidedWithSceneryInfo
  commentId: P:Clay.Game.Mod.Entities.Entity.collidedWithSceneryInfo
  id: collidedWithSceneryInfo
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: collidedWithSceneryInfo
  nameWithType: Entity.collidedWithSceneryInfo
  fullName: Clay.Game.Mod.Entities.Entity.collidedWithSceneryInfo
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: collidedWithSceneryInfo
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 937
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public DistanceFieldCollisionInfo collidedWithSceneryInfo { get; }
    parameters: []
    return:
      type: DistanceFieldCollisionInfo
    content.vb: Public ReadOnly Property collidedWithSceneryInfo As DistanceFieldCollisionInfo
  overload: Clay.Game.Mod.Entities.Entity.collidedWithSceneryInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.doorCollisionsEnabled
  commentId: P:Clay.Game.Mod.Entities.Entity.doorCollisionsEnabled
  id: doorCollisionsEnabled
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: doorCollisionsEnabled
  nameWithType: Entity.doorCollisionsEnabled
  fullName: Clay.Game.Mod.Entities.Entity.doorCollisionsEnabled
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: doorCollisionsEnabled
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 942
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool doorCollisionsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property doorCollisionsEnabled As Boolean
  overload: Clay.Game.Mod.Entities.Entity.doorCollisionsEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.requireDoorCollisionTest
  commentId: P:Clay.Game.Mod.Entities.Entity.requireDoorCollisionTest
  id: requireDoorCollisionTest
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: requireDoorCollisionTest
  nameWithType: Entity.requireDoorCollisionTest
  fullName: Clay.Game.Mod.Entities.Entity.requireDoorCollisionTest
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: requireDoorCollisionTest
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 943
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool requireDoorCollisionTest { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property requireDoorCollisionTest As Boolean
  overload: Clay.Game.Mod.Entities.Entity.requireDoorCollisionTest*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.collidedWithDoor
  commentId: P:Clay.Game.Mod.Entities.Entity.collidedWithDoor
  id: collidedWithDoor
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: collidedWithDoor
  nameWithType: Entity.collidedWithDoor
  fullName: Clay.Game.Mod.Entities.Entity.collidedWithDoor
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: collidedWithDoor
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 945
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool collidedWithDoor { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property collidedWithDoor As Boolean
  overload: Clay.Game.Mod.Entities.Entity.collidedWithDoor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.collidedWithDoorInfo
  commentId: P:Clay.Game.Mod.Entities.Entity.collidedWithDoorInfo
  id: collidedWithDoorInfo
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: collidedWithDoorInfo
  nameWithType: Entity.collidedWithDoorInfo
  fullName: Clay.Game.Mod.Entities.Entity.collidedWithDoorInfo
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: collidedWithDoorInfo
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 950
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Door collidedWithDoorInfo { get; }
    parameters: []
    return:
      type: Door
    content.vb: Public ReadOnly Property collidedWithDoorInfo As Door
  overload: Clay.Game.Mod.Entities.Entity.collidedWithDoorInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.inventoryManager
  commentId: P:Clay.Game.Mod.Entities.Entity.inventoryManager
  id: inventoryManager
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: inventoryManager
  nameWithType: Entity.inventoryManager
  fullName: Clay.Game.Mod.Entities.Entity.inventoryManager
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: inventoryManager
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 955
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public InventoryManager inventoryManager { get; set; }
    parameters: []
    return:
      type: InventoryManager
    content.vb: Public Property inventoryManager As InventoryManager
  overload: Clay.Game.Mod.Entities.Entity.inventoryManager*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.audioPosition
  commentId: P:Clay.Game.Mod.Entities.Entity.audioPosition
  id: audioPosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: audioPosition
  nameWithType: Entity.audioPosition
  fullName: Clay.Game.Mod.Entities.Entity.audioPosition
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: audioPosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 962
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Vector2 audioPosition { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property audioPosition As Vector2
  overload: Clay.Game.Mod.Entities.Entity.audioPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.audioRange
  commentId: P:Clay.Game.Mod.Entities.Entity.audioRange
  id: audioRange
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: audioRange
  nameWithType: Entity.audioRange
  fullName: Clay.Game.Mod.Entities.Entity.audioRange
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: audioRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 967
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual Vector2 audioRange { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Overridable ReadOnly Property audioRange As Vector2
  overload: Clay.Game.Mod.Entities.Entity.audioRange*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isAudioCustomRange
  commentId: P:Clay.Game.Mod.Entities.Entity.isAudioCustomRange
  id: isAudioCustomRange
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isAudioCustomRange
  nameWithType: Entity.isAudioCustomRange
  fullName: Clay.Game.Mod.Entities.Entity.isAudioCustomRange
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isAudioCustomRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 972
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool isAudioCustomRange { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property isAudioCustomRange As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isAudioCustomRange*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isAudioAvailable
  commentId: P:Clay.Game.Mod.Entities.Entity.isAudioAvailable
  id: isAudioAvailable
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isAudioAvailable
  nameWithType: Entity.isAudioAvailable
  fullName: Clay.Game.Mod.Entities.Entity.isAudioAvailable
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isAudioAvailable
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 977
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isAudioAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isAudioAvailable As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isAudioAvailable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isAlive
  commentId: P:Clay.Game.Mod.Entities.Entity.isAlive
  id: isAlive
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isAlive
  nameWithType: Entity.isAlive
  fullName: Clay.Game.Mod.Entities.Entity.isAlive
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isAlive
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 982
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isAlive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isAlive As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isAlive*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isDead
  commentId: P:Clay.Game.Mod.Entities.Entity.isDead
  id: isDead
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isDead
  nameWithType: Entity.isDead
  fullName: Clay.Game.Mod.Entities.Entity.isDead
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isDead
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 987
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isDead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isDead As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isDead*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isInStasis
  commentId: P:Clay.Game.Mod.Entities.Entity.isInStasis
  id: isInStasis
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isInStasis
  nameWithType: Entity.isInStasis
  fullName: Clay.Game.Mod.Entities.Entity.isInStasis
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isInStasis
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 992
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isInStasis { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isInStasis As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isInStasis*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isSick
  commentId: P:Clay.Game.Mod.Entities.Entity.isSick
  id: isSick
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isSick
  nameWithType: Entity.isSick
  fullName: Clay.Game.Mod.Entities.Entity.isSick
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isSick
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 997
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isSick { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isSick As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isSick*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isFrozen
  commentId: P:Clay.Game.Mod.Entities.Entity.isFrozen
  id: isFrozen
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isFrozen
  nameWithType: Entity.isFrozen
  fullName: Clay.Game.Mod.Entities.Entity.isFrozen
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isFrozen
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1002
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isFrozen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isFrozen As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isFrozen*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.wasSick
  commentId: P:Clay.Game.Mod.Entities.Entity.wasSick
  id: wasSick
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: wasSick
  nameWithType: Entity.wasSick
  fullName: Clay.Game.Mod.Entities.Entity.wasSick
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: wasSick
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1007
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool wasSick { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property wasSick As Boolean
  overload: Clay.Game.Mod.Entities.Entity.wasSick*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isThinking
  commentId: P:Clay.Game.Mod.Entities.Entity.isThinking
  id: isThinking
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isThinking
  nameWithType: Entity.isThinking
  fullName: Clay.Game.Mod.Entities.Entity.isThinking
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isThinking
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1012
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isThinking { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isThinking As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isThinking*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isThinkingFixedUpdate
  commentId: P:Clay.Game.Mod.Entities.Entity.isThinkingFixedUpdate
  id: isThinkingFixedUpdate
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isThinkingFixedUpdate
  nameWithType: Entity.isThinkingFixedUpdate
  fullName: Clay.Game.Mod.Entities.Entity.isThinkingFixedUpdate
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isThinkingFixedUpdate
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1017
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isThinkingFixedUpdate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isThinkingFixedUpdate As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isThinkingFixedUpdate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isStateLocked
  commentId: P:Clay.Game.Mod.Entities.Entity.isStateLocked
  id: isStateLocked
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isStateLocked
  nameWithType: Entity.isStateLocked
  fullName: Clay.Game.Mod.Entities.Entity.isStateLocked
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isStateLocked
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1022
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isStateLocked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isStateLocked As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isStateLocked*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isPlayer
  commentId: P:Clay.Game.Mod.Entities.Entity.isPlayer
  id: isPlayer
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isPlayer
  nameWithType: Entity.isPlayer
  fullName: Clay.Game.Mod.Entities.Entity.isPlayer
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isPlayer
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1024
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool isPlayer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property isPlayer As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isPlayer*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isFlora
  commentId: P:Clay.Game.Mod.Entities.Entity.isFlora
  id: isFlora
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isFlora
  nameWithType: Entity.isFlora
  fullName: Clay.Game.Mod.Entities.Entity.isFlora
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isFlora
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1029
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool isFlora { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property isFlora As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isFlora*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isDecorativeEntity
  commentId: P:Clay.Game.Mod.Entities.Entity.isDecorativeEntity
  id: isDecorativeEntity
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isDecorativeEntity
  nameWithType: Entity.isDecorativeEntity
  fullName: Clay.Game.Mod.Entities.Entity.isDecorativeEntity
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isDecorativeEntity
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1034
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool isDecorativeEntity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property isDecorativeEntity As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isDecorativeEntity*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isEquipment
  commentId: P:Clay.Game.Mod.Entities.Entity.isEquipment
  id: isEquipment
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isEquipment
  nameWithType: Entity.isEquipment
  fullName: Clay.Game.Mod.Entities.Entity.isEquipment
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isEquipment
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1039
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool isEquipment { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property isEquipment As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isEquipment*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isTargetable
  commentId: P:Clay.Game.Mod.Entities.Entity.isTargetable
  id: isTargetable
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isTargetable
  nameWithType: Entity.isTargetable
  fullName: Clay.Game.Mod.Entities.Entity.isTargetable
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isTargetable
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1044
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool isTargetable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property isTargetable As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isTargetable*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isDamageable
  commentId: P:Clay.Game.Mod.Entities.Entity.isDamageable
  id: isDamageable
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isDamageable
  nameWithType: Entity.isDamageable
  fullName: Clay.Game.Mod.Entities.Entity.isDamageable
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isDamageable
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1049
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool isDamageable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property isDamageable As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isDamageable*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.isDetonatorActive
  commentId: P:Clay.Game.Mod.Entities.Entity.isDetonatorActive
  id: isDetonatorActive
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isDetonatorActive
  nameWithType: Entity.isDetonatorActive
  fullName: Clay.Game.Mod.Entities.Entity.isDetonatorActive
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isDetonatorActive
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1054
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isDetonatorActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isDetonatorActive As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isDetonatorActive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isAttractor
  commentId: P:Clay.Game.Mod.Entities.Entity.isAttractor
  id: isAttractor
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isAttractor
  nameWithType: Entity.isAttractor
  fullName: Clay.Game.Mod.Entities.Entity.isAttractor
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isAttractor
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1056
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isAttractor { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isAttractor As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isAttractor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isRepellant
  commentId: P:Clay.Game.Mod.Entities.Entity.isRepellant
  id: isRepellant
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isRepellant
  nameWithType: Entity.isRepellant
  fullName: Clay.Game.Mod.Entities.Entity.isRepellant
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isRepellant
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1066
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isRepellant { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isRepellant As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isRepellant*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isPreferredTarget
  commentId: P:Clay.Game.Mod.Entities.Entity.isPreferredTarget
  id: isPreferredTarget
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isPreferredTarget
  nameWithType: Entity.isPreferredTarget
  fullName: Clay.Game.Mod.Entities.Entity.isPreferredTarget
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isPreferredTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1076
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isPreferredTarget { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isPreferredTarget As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isPreferredTarget*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.seekTargets
  commentId: P:Clay.Game.Mod.Entities.Entity.seekTargets
  id: seekTargets
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: seekTargets
  nameWithType: Entity.seekTargets
  fullName: Clay.Game.Mod.Entities.Entity.seekTargets
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: seekTargets
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1086
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool seekTargets { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property seekTargets As Boolean
  overload: Clay.Game.Mod.Entities.Entity.seekTargets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.seekFriendlyPlayer
  commentId: P:Clay.Game.Mod.Entities.Entity.seekFriendlyPlayer
  id: seekFriendlyPlayer
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: seekFriendlyPlayer
  nameWithType: Entity.seekFriendlyPlayer
  fullName: Clay.Game.Mod.Entities.Entity.seekFriendlyPlayer
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: seekFriendlyPlayer
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1096
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool seekFriendlyPlayer { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property seekFriendlyPlayer As Boolean
  overload: Clay.Game.Mod.Entities.Entity.seekFriendlyPlayer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isInteractive
  commentId: P:Clay.Game.Mod.Entities.Entity.isInteractive
  id: isInteractive
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isInteractive
  nameWithType: Entity.isInteractive
  fullName: Clay.Game.Mod.Entities.Entity.isInteractive
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isInteractive
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1106
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isInteractive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isInteractive As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isInteractive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.canRotate
  commentId: P:Clay.Game.Mod.Entities.Entity.canRotate
  id: canRotate
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: canRotate
  nameWithType: Entity.canRotate
  fullName: Clay.Game.Mod.Entities.Entity.canRotate
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: canRotate
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1116
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool canRotate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property canRotate As Boolean
  overload: Clay.Game.Mod.Entities.Entity.canRotate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.requiresLineOfSight
  commentId: P:Clay.Game.Mod.Entities.Entity.requiresLineOfSight
  id: requiresLineOfSight
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: requiresLineOfSight
  nameWithType: Entity.requiresLineOfSight
  fullName: Clay.Game.Mod.Entities.Entity.requiresLineOfSight
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: requiresLineOfSight
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1126
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool requiresLineOfSight { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property requiresLineOfSight As Boolean
  overload: Clay.Game.Mod.Entities.Entity.requiresLineOfSight*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isEnergyDropper
  commentId: P:Clay.Game.Mod.Entities.Entity.isEnergyDropper
  id: isEnergyDropper
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isEnergyDropper
  nameWithType: Entity.isEnergyDropper
  fullName: Clay.Game.Mod.Entities.Entity.isEnergyDropper
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isEnergyDropper
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1136
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isEnergyDropper { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isEnergyDropper As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isEnergyDropper*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isDamagedByWeapons
  commentId: P:Clay.Game.Mod.Entities.Entity.isDamagedByWeapons
  id: isDamagedByWeapons
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isDamagedByWeapons
  nameWithType: Entity.isDamagedByWeapons
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedByWeapons
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isDamagedByWeapons
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1146
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isDamagedByWeapons { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isDamagedByWeapons As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isDamagedByWeapons*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isDamagedByExplosives
  commentId: P:Clay.Game.Mod.Entities.Entity.isDamagedByExplosives
  id: isDamagedByExplosives
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isDamagedByExplosives
  nameWithType: Entity.isDamagedByExplosives
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedByExplosives
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isDamagedByExplosives
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1156
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isDamagedByExplosives { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isDamagedByExplosives As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isDamagedByExplosives*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isDamagedByStasis
  commentId: P:Clay.Game.Mod.Entities.Entity.isDamagedByStasis
  id: isDamagedByStasis
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isDamagedByStasis
  nameWithType: Entity.isDamagedByStasis
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedByStasis
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isDamagedByStasis
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1166
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isDamagedByStasis { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isDamagedByStasis As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isDamagedByStasis*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isDamagedByFreeze
  commentId: P:Clay.Game.Mod.Entities.Entity.isDamagedByFreeze
  id: isDamagedByFreeze
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isDamagedByFreeze
  nameWithType: Entity.isDamagedByFreeze
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedByFreeze
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isDamagedByFreeze
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1176
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isDamagedByFreeze { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isDamagedByFreeze As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isDamagedByFreeze*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isDamagedBySickness
  commentId: P:Clay.Game.Mod.Entities.Entity.isDamagedBySickness
  id: isDamagedBySickness
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isDamagedBySickness
  nameWithType: Entity.isDamagedBySickness
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedBySickness
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isDamagedBySickness
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1186
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isDamagedBySickness { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isDamagedBySickness As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isDamagedBySickness*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isDamagedBySuppression
  commentId: P:Clay.Game.Mod.Entities.Entity.isDamagedBySuppression
  id: isDamagedBySuppression
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isDamagedBySuppression
  nameWithType: Entity.isDamagedBySuppression
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedBySuppression
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isDamagedBySuppression
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1196
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isDamagedBySuppression { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isDamagedBySuppression As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isDamagedBySuppression*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isColonist
  commentId: P:Clay.Game.Mod.Entities.Entity.isColonist
  id: isColonist
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isColonist
  nameWithType: Entity.isColonist
  fullName: Clay.Game.Mod.Entities.Entity.isColonist
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isColonist
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1206
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isColonist { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isColonist As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isColonist*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isMine
  commentId: P:Clay.Game.Mod.Entities.Entity.isMine
  id: isMine
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isMine
  nameWithType: Entity.isMine
  fullName: Clay.Game.Mod.Entities.Entity.isMine
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isMine
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1216
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isMine { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isMine As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isMine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isColonyAttackResponse
  commentId: P:Clay.Game.Mod.Entities.Entity.isColonyAttackResponse
  id: isColonyAttackResponse
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isColonyAttackResponse
  nameWithType: Entity.isColonyAttackResponse
  fullName: Clay.Game.Mod.Entities.Entity.isColonyAttackResponse
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isColonyAttackResponse
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1226
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isColonyAttackResponse { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isColonyAttackResponse As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isColonyAttackResponse*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isContactDamage
  commentId: P:Clay.Game.Mod.Entities.Entity.isContactDamage
  id: isContactDamage
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isContactDamage
  nameWithType: Entity.isContactDamage
  fullName: Clay.Game.Mod.Entities.Entity.isContactDamage
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isContactDamage
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1236
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isContactDamage { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isContactDamage As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isContactDamage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.isInvulnerable
  commentId: P:Clay.Game.Mod.Entities.Entity.isInvulnerable
  id: isInvulnerable
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: isInvulnerable
  nameWithType: Entity.isInvulnerable
  fullName: Clay.Game.Mod.Entities.Entity.isInvulnerable
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: isInvulnerable
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1244
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool isInvulnerable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isInvulnerable As Boolean
  overload: Clay.Game.Mod.Entities.Entity.isInvulnerable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.MovementRestricted
  commentId: P:Clay.Game.Mod.Entities.Entity.MovementRestricted
  id: MovementRestricted
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: MovementRestricted
  nameWithType: Entity.MovementRestricted
  fullName: Clay.Game.Mod.Entities.Entity.MovementRestricted
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: MovementRestricted
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1253
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool MovementRestricted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MovementRestricted As Boolean
  overload: Clay.Game.Mod.Entities.Entity.MovementRestricted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.data
  commentId: P:Clay.Game.Mod.Entities.Entity.data
  id: data
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: data
  nameWithType: Entity.data
  fullName: Clay.Game.Mod.Entities.Entity.data
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: data
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1255
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Table data { get; }
    parameters: []
    return:
      type: MoonSharp.Interpreter.Table
    content.vb: Public ReadOnly Property data As Table
  overload: Clay.Game.Mod.Entities.Entity.data*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.csdata
  commentId: P:Clay.Game.Mod.Entities.Entity.csdata
  id: csdata
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: csdata
  nameWithType: Entity.csdata
  fullName: Clay.Game.Mod.Entities.Entity.csdata
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: csdata
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1266
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public ScriptedData csdata { get; }
    parameters: []
    return:
      type: Clay.Game.ScriptedData
    content.vb: Public ReadOnly Property csdata As ScriptedData
  overload: Clay.Game.Mod.Entities.Entity.csdata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.transform
  commentId: P:Clay.Game.Mod.Entities.Entity.transform
  id: transform
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: transform
  nameWithType: Entity.transform
  fullName: Clay.Game.Mod.Entities.Entity.transform
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: transform
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1282
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected Transform transform { get; set; }
    parameters: []
    return:
      type: UnityEngine.Transform
    content.vb: Protected Property transform As Transform
  overload: Clay.Game.Mod.Entities.Entity.transform*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.editHelpers
  commentId: P:Clay.Game.Mod.Entities.Entity.editHelpers
  id: editHelpers
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: editHelpers
  nameWithType: Entity.editHelpers
  fullName: Clay.Game.Mod.Entities.Entity.editHelpers
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: editHelpers
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1284
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Dictionary<string, EditHelper> editHelpers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,EditHelper}
    content.vb: Public ReadOnly Property editHelpers As Dictionary(Of String, EditHelper)
  overload: Clay.Game.Mod.Entities.Entity.editHelpers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.teamName
  commentId: P:Clay.Game.Mod.Entities.Entity.teamName
  id: teamName
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: teamName
  nameWithType: Entity.teamName
  fullName: Clay.Game.Mod.Entities.Entity.teamName
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: teamName
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1296
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string teamName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property teamName As String
  overload: Clay.Game.Mod.Entities.Entity.teamName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.homePosition
  commentId: P:Clay.Game.Mod.Entities.Entity.homePosition
  id: homePosition
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: homePosition
  nameWithType: Entity.homePosition
  fullName: Clay.Game.Mod.Entities.Entity.homePosition
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: homePosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1308
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Vector2 homePosition { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property homePosition As Vector2
  overload: Clay.Game.Mod.Entities.Entity.homePosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.hasHome
  commentId: P:Clay.Game.Mod.Entities.Entity.hasHome
  id: hasHome
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: hasHome
  nameWithType: Entity.hasHome
  fullName: Clay.Game.Mod.Entities.Entity.hasHome
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: hasHome
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1319
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool hasHome { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property hasHome As Boolean
  overload: Clay.Game.Mod.Entities.Entity.hasHome*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Clay.Game.Mod.Entities.Entity.FollowTarget
  commentId: P:Clay.Game.Mod.Entities.Entity.FollowTarget
  id: FollowTarget
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FollowTarget
  nameWithType: Entity.FollowTarget
  fullName: Clay.Game.Mod.Entities.Entity.FollowTarget
  type: Property
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FollowTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1330
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity FollowTarget { get; set; }
    parameters: []
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Property FollowTarget As Entity
  overload: Clay.Game.Mod.Entities.Entity.FollowTarget*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity._canDie
  commentId: F:Clay.Game.Mod.Entities.Entity._canDie
  id: _canDie
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: _canDie
  nameWithType: Entity._canDie
  fullName: Clay.Game.Mod.Entities.Entity._canDie
  type: Field
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: _canDie
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1336
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected bool _canDie
    return:
      type: System.Boolean
    content.vb: Protected _canDie As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.HomeDistanceSquared(UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.HomeDistanceSquared(UnityEngine.Vector2)
  id: HomeDistanceSquared(UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: HomeDistanceSquared(Vector2)
  nameWithType: Entity.HomeDistanceSquared(Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.HomeDistanceSquared(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: HomeDistanceSquared
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1338
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float HomeDistanceSquared(Vector2 sourcePosition)
    parameters:
    - id: sourcePosition
      type: UnityEngine.Vector2
    return:
      type: System.Single
    content.vb: Public Function HomeDistanceSquared(sourcePosition As Vector2) As Single
  overload: Clay.Game.Mod.Entities.Entity.HomeDistanceSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.InitialiseApp
  commentId: M:Clay.Game.Mod.Entities.Entity.InitialiseApp
  id: InitialiseApp
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: InitialiseApp()
  nameWithType: Entity.InitialiseApp()
  fullName: Clay.Game.Mod.Entities.Entity.InitialiseApp()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: InitialiseApp
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1348
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static void InitialiseApp()
    content.vb: Public Shared Sub InitialiseApp
  overload: Clay.Game.Mod.Entities.Entity.InitialiseApp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.InitialiseLevel
  commentId: M:Clay.Game.Mod.Entities.Entity.InitialiseLevel
  id: InitialiseLevel
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: InitialiseLevel()
  nameWithType: Entity.InitialiseLevel()
  fullName: Clay.Game.Mod.Entities.Entity.InitialiseLevel()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: InitialiseLevel
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1362
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static void InitialiseLevel()
    content.vb: Public Shared Sub InitialiseLevel
  overload: Clay.Game.Mod.Entities.Entity.InitialiseLevel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.CleanUpLevel
  commentId: M:Clay.Game.Mod.Entities.Entity.CleanUpLevel
  id: CleanUpLevel
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CleanUpLevel()
  nameWithType: Entity.CleanUpLevel()
  fullName: Clay.Game.Mod.Entities.Entity.CleanUpLevel()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CleanUpLevel
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1385
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static void CleanUpLevel()
    content.vb: Public Shared Sub CleanUpLevel
  overload: Clay.Game.Mod.Entities.Entity.CleanUpLevel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.Find(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.Find(System.String)
  id: Find(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Find(String)
  nameWithType: Entity.Find(String)
  fullName: Clay.Game.Mod.Entities.Entity.Find(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Find
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1441
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static Entity Find(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Shared Function Find(name As String) As Entity
  overload: Clay.Game.Mod.Entities.Entity.Find*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.FindByUID(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindByUID(System.String)
  id: FindByUID(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindByUID(String)
  nameWithType: Entity.FindByUID(String)
  fullName: Clay.Game.Mod.Entities.Entity.FindByUID(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindByUID
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1447
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static Entity FindByUID(string uid)
    parameters:
    - id: uid
      type: System.String
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Shared Function FindByUID(uid As String) As Entity
  overload: Clay.Game.Mod.Entities.Entity.FindByUID*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.FindByInternalUID(System.Int32)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindByInternalUID(System.Int32)
  id: FindByInternalUID(System.Int32)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindByInternalUID(Int32)
  nameWithType: Entity.FindByInternalUID(Int32)
  fullName: Clay.Game.Mod.Entities.Entity.FindByInternalUID(System.Int32)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindByInternalUID
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1453
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static Entity FindByInternalUID(int uid)
    parameters:
    - id: uid
      type: System.Int32
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Shared Function FindByInternalUID(uid As Integer) As Entity
  overload: Clay.Game.Mod.Entities.Entity.FindByInternalUID*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.#ctor
  commentId: M:Clay.Game.Mod.Entities.Entity.#ctor
  id: '#ctor'
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Entity()
  nameWithType: Entity.Entity()
  fullName: Clay.Game.Mod.Entities.Entity.Entity()
  type: Constructor
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: .ctor
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1461
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity()
    content.vb: Public Sub New
  overload: Clay.Game.Mod.Entities.Entity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.CloneConfiguration(Tuna.Mob)
  commentId: M:Clay.Game.Mod.Entities.Entity.CloneConfiguration(Tuna.Mob)
  id: CloneConfiguration(Tuna.Mob)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CloneConfiguration(Mob)
  nameWithType: Entity.CloneConfiguration(Mob)
  fullName: Clay.Game.Mod.Entities.Entity.CloneConfiguration(Tuna.Mob)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CloneConfiguration
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1478
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override void CloneConfiguration(Mob mob)
    parameters:
    - id: mob
      type: Tuna.Mob
    content.vb: Public Overrides Sub CloneConfiguration(mob As Mob)
  overridden: Tuna.Mob.CloneConfiguration(Tuna.Mob)
  overload: Clay.Game.Mod.Entities.Entity.CloneConfiguration*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.RecycleConfiguration(Tuna.Mob)
  commentId: M:Clay.Game.Mod.Entities.Entity.RecycleConfiguration(Tuna.Mob)
  id: RecycleConfiguration(Tuna.Mob)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RecycleConfiguration(Mob)
  nameWithType: Entity.RecycleConfiguration(Mob)
  fullName: Clay.Game.Mod.Entities.Entity.RecycleConfiguration(Tuna.Mob)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RecycleConfiguration
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1539
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected override void RecycleConfiguration(Mob mob)
    parameters:
    - id: mob
      type: Tuna.Mob
    content.vb: Protected Overrides Sub RecycleConfiguration(mob As Mob)
  overridden: Tuna.Mob.RecycleConfiguration(Tuna.Mob)
  overload: Clay.Game.Mod.Entities.Entity.RecycleConfiguration*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.ReadProperty(System.Object,System.Reflection.PropertyInfo,Tuna.Setting)
  commentId: M:Clay.Game.Mod.Entities.Entity.ReadProperty(System.Object,System.Reflection.PropertyInfo,Tuna.Setting)
  id: ReadProperty(System.Object,System.Reflection.PropertyInfo,Tuna.Setting)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ReadProperty(Object, PropertyInfo, Setting)
  nameWithType: Entity.ReadProperty(Object, PropertyInfo, Setting)
  fullName: Clay.Game.Mod.Entities.Entity.ReadProperty(System.Object, System.Reflection.PropertyInfo, Tuna.Setting)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ReadProperty
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1571
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override bool ReadProperty(object o, PropertyInfo property, Setting setting)
    parameters:
    - id: o
      type: System.Object
    - id: property
      type: System.Reflection.PropertyInfo
    - id: setting
      type: Tuna.Setting
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ReadProperty(o As Object, property As PropertyInfo, setting As Setting) As Boolean
  overridden: Tuna.Mob.ReadProperty(System.Object,System.Reflection.PropertyInfo,Tuna.Setting)
  overload: Clay.Game.Mod.Entities.Entity.ReadProperty*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.ReadUndefinedSetting(System.Object,Tuna.Setting)
  commentId: M:Clay.Game.Mod.Entities.Entity.ReadUndefinedSetting(System.Object,Tuna.Setting)
  id: ReadUndefinedSetting(System.Object,Tuna.Setting)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ReadUndefinedSetting(Object, Setting)
  nameWithType: Entity.ReadUndefinedSetting(Object, Setting)
  fullName: Clay.Game.Mod.Entities.Entity.ReadUndefinedSetting(System.Object, Tuna.Setting)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ReadUndefinedSetting
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1582
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override bool ReadUndefinedSetting(object o, Setting setting)
    parameters:
    - id: o
      type: System.Object
    - id: setting
      type: Tuna.Setting
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ReadUndefinedSetting(o As Object, setting As Setting) As Boolean
  overridden: Tuna.Mob.ReadUndefinedSetting(System.Object,Tuna.Setting)
  overload: Clay.Game.Mod.Entities.Entity.ReadUndefinedSetting*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.Prototyped
  commentId: M:Clay.Game.Mod.Entities.Entity.Prototyped
  id: Prototyped
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Prototyped()
  nameWithType: Entity.Prototyped()
  fullName: Clay.Game.Mod.Entities.Entity.Prototyped()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Prototyped
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1611
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override void Prototyped()
    content.vb: Public Overrides Sub Prototyped
  overridden: Tuna.Mob.Prototyped
  overload: Clay.Game.Mod.Entities.Entity.Prototyped*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.Activate(UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.Activate(UnityEngine.Vector2)
  id: Activate(UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Activate(Vector2)
  nameWithType: Entity.Activate(Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.Activate(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Activate
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1620
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void Activate(Vector2 atPosition)
    parameters:
    - id: atPosition
      type: UnityEngine.Vector2
    content.vb: Public Sub Activate(atPosition As Vector2)
  overload: Clay.Game.Mod.Entities.Entity.Activate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.Activate(UnityEngine.Vector2,Colony)
  commentId: M:Clay.Game.Mod.Entities.Entity.Activate(UnityEngine.Vector2,Colony)
  id: Activate(UnityEngine.Vector2,Colony)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Activate(Vector2, Colony)
  nameWithType: Entity.Activate(Vector2, Colony)
  fullName: Clay.Game.Mod.Entities.Entity.Activate(UnityEngine.Vector2, Colony)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Activate
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1626
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void Activate(Vector2 atPosition, Colony colony)
    parameters:
    - id: atPosition
      type: UnityEngine.Vector2
    - id: colony
      type: Colony
    content.vb: Public Sub Activate(atPosition As Vector2, colony As Colony)
  overload: Clay.Game.Mod.Entities.Entity.Activate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.Activate(Attributes,UnityEngine.Vector2,System.Single,Colony,Team)
  commentId: M:Clay.Game.Mod.Entities.Entity.Activate(Attributes,UnityEngine.Vector2,System.Single,Colony,Team)
  id: Activate(Attributes,UnityEngine.Vector2,System.Single,Colony,Team)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Activate(Attributes, Vector2, Single, Colony, Team)
  nameWithType: Entity.Activate(Attributes, Vector2, Single, Colony, Team)
  fullName: Clay.Game.Mod.Entities.Entity.Activate(Attributes, UnityEngine.Vector2, System.Single, Colony, Team)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Activate
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1632
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void Activate(Attributes attr, Vector2 atPosition, float atAngle, Colony colony, Team newTeam)
    parameters:
    - id: attr
      type: Attributes
    - id: atPosition
      type: UnityEngine.Vector2
    - id: atAngle
      type: System.Single
    - id: colony
      type: Colony
    - id: newTeam
      type: Team
    content.vb: Public Overridable Sub Activate(attr As Attributes, atPosition As Vector2, atAngle As Single, colony As Colony, newTeam As Team)
  overload: Clay.Game.Mod.Entities.Entity.Activate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.Resurrect
  commentId: M:Clay.Game.Mod.Entities.Entity.Resurrect
  id: Resurrect
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Resurrect()
  nameWithType: Entity.Resurrect()
  fullName: Clay.Game.Mod.Entities.Entity.Resurrect()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Resurrect
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1775
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void Resurrect()
    content.vb: Public Overridable Sub Resurrect
  overload: Clay.Game.Mod.Entities.Entity.Resurrect*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.Spawned
  commentId: M:Clay.Game.Mod.Entities.Entity.Spawned
  id: Spawned
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Spawned()
  nameWithType: Entity.Spawned()
  fullName: Clay.Game.Mod.Entities.Entity.Spawned()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Spawned
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1783
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override void Spawned()
    content.vb: Public Overrides Sub Spawned
  overridden: Tuna.Mob.Spawned
  overload: Clay.Game.Mod.Entities.Entity.Spawned*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.Trashed
  commentId: M:Clay.Game.Mod.Entities.Entity.Trashed
  id: Trashed
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Trashed()
  nameWithType: Entity.Trashed()
  fullName: Clay.Game.Mod.Entities.Entity.Trashed()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Trashed
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1792
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override void Trashed()
    content.vb: Public Overrides Sub Trashed
  overridden: Tuna.Mob.Trashed
  overload: Clay.Game.Mod.Entities.Entity.Trashed*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.CommonCleanUp
  commentId: M:Clay.Game.Mod.Entities.Entity.CommonCleanUp
  id: CommonCleanUp
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CommonCleanUp()
  nameWithType: Entity.CommonCleanUp()
  fullName: Clay.Game.Mod.Entities.Entity.CommonCleanUp()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CommonCleanUp
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1803
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected virtual void CommonCleanUp()
    content.vb: Protected Overridable Sub CommonCleanUp
  overload: Clay.Game.Mod.Entities.Entity.CommonCleanUp*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.RebuildPrototype
  commentId: M:Clay.Game.Mod.Entities.Entity.RebuildPrototype
  id: RebuildPrototype
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RebuildPrototype()
  nameWithType: Entity.RebuildPrototype()
  fullName: Clay.Game.Mod.Entities.Entity.RebuildPrototype()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RebuildPrototype
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1921
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override void RebuildPrototype()
    content.vb: Public Overrides Sub RebuildPrototype
  overridden: Tuna.Mob.RebuildPrototype
  overload: Clay.Game.Mod.Entities.Entity.RebuildPrototype*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.RebuildAIScripts
  commentId: M:Clay.Game.Mod.Entities.Entity.RebuildAIScripts
  id: RebuildAIScripts
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RebuildAIScripts()
  nameWithType: Entity.RebuildAIScripts()
  fullName: Clay.Game.Mod.Entities.Entity.RebuildAIScripts()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RebuildAIScripts
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1957
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RebuildAIScripts()
    content.vb: Public Sub RebuildAIScripts
  overload: Clay.Game.Mod.Entities.Entity.RebuildAIScripts*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RebuildAIStateMachine
  commentId: M:Clay.Game.Mod.Entities.Entity.RebuildAIStateMachine
  id: RebuildAIStateMachine
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RebuildAIStateMachine()
  nameWithType: Entity.RebuildAIStateMachine()
  fullName: Clay.Game.Mod.Entities.Entity.RebuildAIStateMachine()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RebuildAIStateMachine
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1963
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RebuildAIStateMachine()
    content.vb: Public Sub RebuildAIStateMachine
  overload: Clay.Game.Mod.Entities.Entity.RebuildAIStateMachine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RebuildAttributes
  commentId: M:Clay.Game.Mod.Entities.Entity.RebuildAttributes
  id: RebuildAttributes
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RebuildAttributes()
  nameWithType: Entity.RebuildAttributes()
  fullName: Clay.Game.Mod.Entities.Entity.RebuildAttributes()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RebuildAttributes
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1969
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RebuildAttributes()
    content.vb: Public Sub RebuildAttributes
  overload: Clay.Game.Mod.Entities.Entity.RebuildAttributes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FixedUpdate(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.FixedUpdate(System.Single)
  id: FixedUpdate(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FixedUpdate(Single)
  nameWithType: Entity.FixedUpdate(Single)
  fullName: Clay.Game.Mod.Entities.Entity.FixedUpdate(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FixedUpdate
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 1974
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override void FixedUpdate(float time)
    parameters:
    - id: time
      type: System.Single
    content.vb: Public Overrides Sub FixedUpdate(time As Single)
  overridden: Tuna.Mob.FixedUpdate(System.Single)
  overload: Clay.Game.Mod.Entities.Entity.FixedUpdate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.EntityFixedUpdate(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.EntityFixedUpdate(System.Single)
  id: EntityFixedUpdate(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: EntityFixedUpdate(Single)
  nameWithType: Entity.EntityFixedUpdate(Single)
  fullName: Clay.Game.Mod.Entities.Entity.EntityFixedUpdate(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: EntityFixedUpdate
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2033
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void EntityFixedUpdate(float time)
    parameters:
    - id: time
      type: System.Single
    content.vb: Public Overridable Sub EntityFixedUpdate(time As Single)
  overload: Clay.Game.Mod.Entities.Entity.EntityFixedUpdate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.Update(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.Update(System.Single)
  id: Update(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Update(Single)
  nameWithType: Entity.Update(Single)
  fullName: Clay.Game.Mod.Entities.Entity.Update(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Update
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2038
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override void Update(float time)
    parameters:
    - id: time
      type: System.Single
    content.vb: Public Overrides Sub Update(time As Single)
  overridden: Tuna.Mob.Update(System.Single)
  overload: Clay.Game.Mod.Entities.Entity.Update*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.UpdatePersistentEffects(System.Single,System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.UpdatePersistentEffects(System.Single,System.Boolean)
  id: UpdatePersistentEffects(System.Single,System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: UpdatePersistentEffects(Single, Boolean)
  nameWithType: Entity.UpdatePersistentEffects(Single, Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.UpdatePersistentEffects(System.Single, System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: UpdatePersistentEffects
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2306
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void UpdatePersistentEffects(float time, bool fx)
    parameters:
    - id: time
      type: System.Single
    - id: fx
      type: System.Boolean
    content.vb: Public Overridable Sub UpdatePersistentEffects(time As Single, fx As Boolean)
  overload: Clay.Game.Mod.Entities.Entity.UpdatePersistentEffects*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.FixedUpdatePhysics(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.FixedUpdatePhysics(System.Single)
  id: FixedUpdatePhysics(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FixedUpdatePhysics(Single)
  nameWithType: Entity.FixedUpdatePhysics(Single)
  fullName: Clay.Game.Mod.Entities.Entity.FixedUpdatePhysics(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FixedUpdatePhysics
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2374
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void FixedUpdatePhysics(float time)
    parameters:
    - id: time
      type: System.Single
    content.vb: Public Sub FixedUpdatePhysics(time As Single)
  overload: Clay.Game.Mod.Entities.Entity.FixedUpdatePhysics*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.DoPhysics(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.DoPhysics(System.Single)
  id: DoPhysics(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: DoPhysics(Single)
  nameWithType: Entity.DoPhysics(Single)
  fullName: Clay.Game.Mod.Entities.Entity.DoPhysics(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: DoPhysics
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2385
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void DoPhysics(float time)
    parameters:
    - id: time
      type: System.Single
    content.vb: Public Overridable Sub DoPhysics(time As Single)
  overload: Clay.Game.Mod.Entities.Entity.DoPhysics*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.FixedUpdateAllEntityPhysics(System.Single,System.Int32,System.Int32)
  commentId: M:Clay.Game.Mod.Entities.Entity.FixedUpdateAllEntityPhysics(System.Single,System.Int32,System.Int32)
  id: FixedUpdateAllEntityPhysics(System.Single,System.Int32,System.Int32)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FixedUpdateAllEntityPhysics(Single, Int32, Int32)
  nameWithType: Entity.FixedUpdateAllEntityPhysics(Single, Int32, Int32)
  fullName: Clay.Game.Mod.Entities.Entity.FixedUpdateAllEntityPhysics(System.Single, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FixedUpdateAllEntityPhysics
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2517
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static void FixedUpdateAllEntityPhysics(float time, int thread, int threadCount)
    parameters:
    - id: time
      type: System.Single
    - id: thread
      type: System.Int32
    - id: threadCount
      type: System.Int32
    content.vb: Public Shared Sub FixedUpdateAllEntityPhysics(time As Single, thread As Integer, threadCount As Integer)
  overload: Clay.Game.Mod.Entities.Entity.FixedUpdateAllEntityPhysics*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.LogWeaponDebugInfo(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.LogWeaponDebugInfo(System.Single)
  id: LogWeaponDebugInfo(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: LogWeaponDebugInfo(Single)
  nameWithType: Entity.LogWeaponDebugInfo(Single)
  fullName: Clay.Game.Mod.Entities.Entity.LogWeaponDebugInfo(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: LogWeaponDebugInfo
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2537
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void LogWeaponDebugInfo(float time)
    parameters:
    - id: time
      type: System.Single
    content.vb: Public Sub LogWeaponDebugInfo(time As Single)
  overload: Clay.Game.Mod.Entities.Entity.LogWeaponDebugInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.EarlyRender
  commentId: M:Clay.Game.Mod.Entities.Entity.EarlyRender
  id: EarlyRender
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: EarlyRender()
  nameWithType: Entity.EarlyRender()
  fullName: Clay.Game.Mod.Entities.Entity.EarlyRender()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: EarlyRender
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2551
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override void EarlyRender()
    content.vb: Public Overrides Sub EarlyRender
  overridden: Tuna.Mob.EarlyRender
  overload: Clay.Game.Mod.Entities.Entity.EarlyRender*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.Render
  commentId: M:Clay.Game.Mod.Entities.Entity.Render
  id: Render
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Render()
  nameWithType: Entity.Render()
  fullName: Clay.Game.Mod.Entities.Entity.Render()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Render
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2557
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override void Render()
    content.vb: Public Overrides Sub Render
  overridden: Tuna.Mob.Render
  overload: Clay.Game.Mod.Entities.Entity.Render*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.RenderDebug
  commentId: M:Clay.Game.Mod.Entities.Entity.RenderDebug
  id: RenderDebug
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RenderDebug()
  nameWithType: Entity.RenderDebug()
  fullName: Clay.Game.Mod.Entities.Entity.RenderDebug()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RenderDebug
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2572
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public override void RenderDebug()
    content.vb: Public Overrides Sub RenderDebug
  overridden: Tuna.Mob.RenderDebug
  overload: Clay.Game.Mod.Entities.Entity.RenderDebug*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Clay.Game.Mod.Entities.Entity.RenderDebugStatString
  commentId: M:Clay.Game.Mod.Entities.Entity.RenderDebugStatString
  id: RenderDebugStatString
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RenderDebugStatString()
  nameWithType: Entity.RenderDebugStatString()
  fullName: Clay.Game.Mod.Entities.Entity.RenderDebugStatString()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RenderDebugStatString
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2695
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected void RenderDebugStatString()
    content.vb: Protected Sub RenderDebugStatString
  overload: Clay.Game.Mod.Entities.Entity.RenderDebugStatString*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.RenderLeaf(FloraLeaf,System.Single,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.RenderLeaf(FloraLeaf,System.Single,System.Single)
  id: RenderLeaf(FloraLeaf,System.Single,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RenderLeaf(FloraLeaf, Single, Single)
  nameWithType: Entity.RenderLeaf(FloraLeaf, Single, Single)
  fullName: Clay.Game.Mod.Entities.Entity.RenderLeaf(FloraLeaf, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RenderLeaf
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2706
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Vector2 RenderLeaf(FloraLeaf leaf, float alpha, float size)
    parameters:
    - id: leaf
      type: FloraLeaf
    - id: alpha
      type: System.Single
    - id: size
      type: System.Single
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function RenderLeaf(leaf As FloraLeaf, alpha As Single, size As Single) As Vector2
  overload: Clay.Game.Mod.Entities.Entity.RenderLeaf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RenderWeapons
  commentId: M:Clay.Game.Mod.Entities.Entity.RenderWeapons
  id: RenderWeapons
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RenderWeapons()
  nameWithType: Entity.RenderWeapons()
  fullName: Clay.Game.Mod.Entities.Entity.RenderWeapons()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RenderWeapons
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2722
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RenderWeapons()
    content.vb: Public Sub RenderWeapons
  overload: Clay.Game.Mod.Entities.Entity.RenderWeapons*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RenderDebugWeapons
  commentId: M:Clay.Game.Mod.Entities.Entity.RenderDebugWeapons
  id: RenderDebugWeapons
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RenderDebugWeapons()
  nameWithType: Entity.RenderDebugWeapons()
  fullName: Clay.Game.Mod.Entities.Entity.RenderDebugWeapons()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RenderDebugWeapons
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2737
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RenderDebugWeapons()
    content.vb: Public Sub RenderDebugWeapons
  overload: Clay.Game.Mod.Entities.Entity.RenderDebugWeapons*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.CreateRenderList
  commentId: M:Clay.Game.Mod.Entities.Entity.CreateRenderList
  id: CreateRenderList
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CreateRenderList()
  nameWithType: Entity.CreateRenderList()
  fullName: Clay.Game.Mod.Entities.Entity.CreateRenderList()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CreateRenderList
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2754
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static void CreateRenderList()
    content.vb: Public Shared Sub CreateRenderList
  overload: Clay.Game.Mod.Entities.Entity.CreateRenderList*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.IsOnScreen(System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsOnScreen(System.Boolean)
  id: IsOnScreen(System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsOnScreen(Boolean)
  nameWithType: Entity.IsOnScreen(Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.IsOnScreen(System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsOnScreen
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2789
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsOnScreen(bool recalculate = false)
    parameters:
    - id: recalculate
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function IsOnScreen(recalculate As Boolean = False) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsOnScreen*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RecalculateExtents
  commentId: M:Clay.Game.Mod.Entities.Entity.RecalculateExtents
  id: RecalculateExtents
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RecalculateExtents()
  nameWithType: Entity.RecalculateExtents()
  fullName: Clay.Game.Mod.Entities.Entity.RecalculateExtents()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RecalculateExtents
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2798
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected virtual void RecalculateExtents()
    content.vb: Protected Overridable Sub RecalculateExtents
  overload: Clay.Game.Mod.Entities.Entity.RecalculateExtents*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.RecalculateSpriteExtents
  commentId: M:Clay.Game.Mod.Entities.Entity.RecalculateSpriteExtents
  id: RecalculateSpriteExtents
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RecalculateSpriteExtents()
  nameWithType: Entity.RecalculateSpriteExtents()
  fullName: Clay.Game.Mod.Entities.Entity.RecalculateSpriteExtents()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RecalculateSpriteExtents
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2858
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RecalculateSpriteExtents()
    content.vb: Public Sub RecalculateSpriteExtents
  overload: Clay.Game.Mod.Entities.Entity.RecalculateSpriteExtents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.UpdateQuadTree
  commentId: M:Clay.Game.Mod.Entities.Entity.UpdateQuadTree
  id: UpdateQuadTree
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: UpdateQuadTree()
  nameWithType: Entity.UpdateQuadTree()
  fullName: Clay.Game.Mod.Entities.Entity.UpdateQuadTree()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: UpdateQuadTree
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2868
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void UpdateQuadTree()
    content.vb: Public Sub UpdateQuadTree
  overload: Clay.Game.Mod.Entities.Entity.UpdateQuadTree*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.ThreadedUpdateQuadTree
  commentId: M:Clay.Game.Mod.Entities.Entity.ThreadedUpdateQuadTree
  id: ThreadedUpdateQuadTree
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ThreadedUpdateQuadTree()
  nameWithType: Entity.ThreadedUpdateQuadTree()
  fullName: Clay.Game.Mod.Entities.Entity.ThreadedUpdateQuadTree()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ThreadedUpdateQuadTree
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2902
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void ThreadedUpdateQuadTree()
    content.vb: Public Sub ThreadedUpdateQuadTree
  overload: Clay.Game.Mod.Entities.Entity.ThreadedUpdateQuadTree*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FixedUpdateQuadTreeLocators
  commentId: M:Clay.Game.Mod.Entities.Entity.FixedUpdateQuadTreeLocators
  id: FixedUpdateQuadTreeLocators
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FixedUpdateQuadTreeLocators()
  nameWithType: Entity.FixedUpdateQuadTreeLocators()
  fullName: Clay.Game.Mod.Entities.Entity.FixedUpdateQuadTreeLocators()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FixedUpdateQuadTreeLocators
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 2953
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static void FixedUpdateQuadTreeLocators()
    content.vb: Public Shared Sub FixedUpdateQuadTreeLocators
  overload: Clay.Game.Mod.Entities.Entity.FixedUpdateQuadTreeLocators*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.SetSplinePath(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetSplinePath(System.String)
  id: SetSplinePath(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetSplinePath(String)
  nameWithType: Entity.SetSplinePath(String)
  fullName: Clay.Game.Mod.Entities.Entity.SetSplinePath(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetSplinePath
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3001
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetSplinePath(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub SetSplinePath(name As String)
  overload: Clay.Game.Mod.Entities.Entity.SetSplinePath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetSplinePath(Clay.Game.SplinePath)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetSplinePath(Clay.Game.SplinePath)
  id: SetSplinePath(Clay.Game.SplinePath)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetSplinePath(SplinePath)
  nameWithType: Entity.SetSplinePath(SplinePath)
  fullName: Clay.Game.Mod.Entities.Entity.SetSplinePath(Clay.Game.SplinePath)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetSplinePath
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3012
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetSplinePath(SplinePath path)
    parameters:
    - id: path
      type: Clay.Game.SplinePath
    content.vb: Public Sub SetSplinePath(path As SplinePath)
  overload: Clay.Game.Mod.Entities.Entity.SetSplinePath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveSplinePath
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveSplinePath
  id: RemoveSplinePath
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveSplinePath()
  nameWithType: Entity.RemoveSplinePath()
  fullName: Clay.Game.Mod.Entities.Entity.RemoveSplinePath()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveSplinePath
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3019
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveSplinePath()
    content.vb: Public Sub RemoveSplinePath
  overload: Clay.Game.Mod.Entities.Entity.RemoveSplinePath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetTeam(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetTeam(System.String)
  id: SetTeam(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetTeam(String)
  nameWithType: Entity.SetTeam(String)
  fullName: Clay.Game.Mod.Entities.Entity.SetTeam(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetTeam
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3027
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetTeam(string teamName)
    parameters:
    - id: teamName
      type: System.String
    content.vb: Public Sub SetTeam(teamName As String)
  overload: Clay.Game.Mod.Entities.Entity.SetTeam*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetTeam(Team)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetTeam(Team)
  id: SetTeam(Team)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetTeam(Team)
  nameWithType: Entity.SetTeam(Team)
  fullName: Clay.Game.Mod.Entities.Entity.SetTeam(Team)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetTeam
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3037
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetTeam(Team team)
    parameters:
    - id: team
      type: Team
    content.vb: Public Sub SetTeam(team As Team)
  overload: Clay.Game.Mod.Entities.Entity.SetTeam*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetPalette(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetPalette(System.String)
  id: SetPalette(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetPalette(String)
  nameWithType: Entity.SetPalette(String)
  fullName: Clay.Game.Mod.Entities.Entity.SetPalette(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetPalette
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3046
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetPalette(string paletteName)
    parameters:
    - id: paletteName
      type: System.String
    content.vb: Public Sub SetPalette(paletteName As String)
  overload: Clay.Game.Mod.Entities.Entity.SetPalette*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetPalette(Tuna.Palette)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetPalette(Tuna.Palette)
  id: SetPalette(Tuna.Palette)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetPalette(Palette)
  nameWithType: Entity.SetPalette(Palette)
  fullName: Clay.Game.Mod.Entities.Entity.SetPalette(Tuna.Palette)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetPalette
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3056
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetPalette(Palette palette)
    parameters:
    - id: palette
      type: Tuna.Palette
    content.vb: Public Sub SetPalette(palette As Palette)
  overload: Clay.Game.Mod.Entities.Entity.SetPalette*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.ResetPalette
  commentId: M:Clay.Game.Mod.Entities.Entity.ResetPalette
  id: ResetPalette
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ResetPalette()
  nameWithType: Entity.ResetPalette()
  fullName: Clay.Game.Mod.Entities.Entity.ResetPalette()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ResetPalette
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3063
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void ResetPalette()
    content.vb: Public Sub ResetPalette
  overload: Clay.Game.Mod.Entities.Entity.ResetPalette*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetAttributes(System.Single,System.Single,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetAttributes(System.Single,System.Single,System.Single)
  id: SetAttributes(System.Single,System.Single,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetAttributes(Single, Single, Single)
  nameWithType: Entity.SetAttributes(Single, Single, Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetAttributes(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetAttributes
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3072
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetAttributes(float energy, float strength, float speed)
    parameters:
    - id: energy
      type: System.Single
    - id: strength
      type: System.Single
    - id: speed
      type: System.Single
    content.vb: Public Sub SetAttributes(energy As Single, strength As Single, speed As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetAttributes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetAttributes(Attributes)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetAttributes(Attributes)
  id: SetAttributes(Attributes)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetAttributes(Attributes)
  nameWithType: Entity.SetAttributes(Attributes)
  fullName: Clay.Game.Mod.Entities.Entity.SetAttributes(Attributes)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetAttributes
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3080
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetAttributes(Attributes attr)
    parameters:
    - id: attr
      type: Attributes
    content.vb: Public Sub SetAttributes(attr As Attributes)
  overload: Clay.Game.Mod.Entities.Entity.SetAttributes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.GenerateAllCharacteristics
  commentId: M:Clay.Game.Mod.Entities.Entity.GenerateAllCharacteristics
  id: GenerateAllCharacteristics
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: GenerateAllCharacteristics()
  nameWithType: Entity.GenerateAllCharacteristics()
  fullName: Clay.Game.Mod.Entities.Entity.GenerateAllCharacteristics()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: GenerateAllCharacteristics
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3088
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void GenerateAllCharacteristics()
    content.vb: Public Sub GenerateAllCharacteristics
  overload: Clay.Game.Mod.Entities.Entity.GenerateAllCharacteristics*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.GenerateCharacteristics
  commentId: M:Clay.Game.Mod.Entities.Entity.GenerateCharacteristics
  id: GenerateCharacteristics
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: GenerateCharacteristics()
  nameWithType: Entity.GenerateCharacteristics()
  fullName: Clay.Game.Mod.Entities.Entity.GenerateCharacteristics()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: GenerateCharacteristics
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3102
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected virtual void GenerateCharacteristics()
    content.vb: Protected Overridable Sub GenerateCharacteristics
  overload: Clay.Game.Mod.Entities.Entity.GenerateCharacteristics*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.GenerateDependantCharacteristics
  commentId: M:Clay.Game.Mod.Entities.Entity.GenerateDependantCharacteristics
  id: GenerateDependantCharacteristics
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: GenerateDependantCharacteristics()
  nameWithType: Entity.GenerateDependantCharacteristics()
  fullName: Clay.Game.Mod.Entities.Entity.GenerateDependantCharacteristics()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: GenerateDependantCharacteristics
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3118
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected virtual void GenerateDependantCharacteristics()
    content.vb: Protected Overridable Sub GenerateDependantCharacteristics
  overload: Clay.Game.Mod.Entities.Entity.GenerateDependantCharacteristics*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.MutateAttribute(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.MutateAttribute(System.Single,System.Single,System.Single,System.Single)
  id: MutateAttribute(System.Single,System.Single,System.Single,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: MutateAttribute(Single, Single, Single, Single)
  nameWithType: Entity.MutateAttribute(Single, Single, Single, Single)
  fullName: Clay.Game.Mod.Entities.Entity.MutateAttribute(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: MutateAttribute
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3125
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public float MutateAttribute(float value, float modifier, float min = 0.2F, float max = 1F)
    parameters:
    - id: value
      type: System.Single
    - id: modifier
      type: System.Single
    - id: min
      type: System.Single
    - id: max
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Function MutateAttribute(value As Single, modifier As Single, min As Single = 0.2F, max As Single = 1F) As Single
  overload: Clay.Game.Mod.Entities.Entity.MutateAttribute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.InitialiseAttributeMorphing(Attributes,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.InitialiseAttributeMorphing(Attributes,System.Single)
  id: InitialiseAttributeMorphing(Attributes,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: InitialiseAttributeMorphing(Attributes, Single)
  nameWithType: Entity.InitialiseAttributeMorphing(Attributes, Single)
  fullName: Clay.Game.Mod.Entities.Entity.InitialiseAttributeMorphing(Attributes, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: InitialiseAttributeMorphing
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3161
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void InitialiseAttributeMorphing(Attributes attr, float rate)
    parameters:
    - id: attr
      type: Attributes
    - id: rate
      type: System.Single
    content.vb: Public Sub InitialiseAttributeMorphing(attr As Attributes, rate As Single)
  overload: Clay.Game.Mod.Entities.Entity.InitialiseAttributeMorphing*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetNameAndUID(System.String,System.String,System.String[])
  commentId: M:Clay.Game.Mod.Entities.Entity.SetNameAndUID(System.String,System.String,System.String[])
  id: SetNameAndUID(System.String,System.String,System.String[])
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetNameAndUID(String, String, String[])
  nameWithType: Entity.SetNameAndUID(String, String, String[])
  fullName: Clay.Game.Mod.Entities.Entity.SetNameAndUID(System.String, System.String, System.String[])
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetNameAndUID
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3216
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetNameAndUID(string name, string uid, string[] parameters)
    parameters:
    - id: name
      type: System.String
    - id: uid
      type: System.String
    - id: parameters
      type: System.String[]
    content.vb: Public Sub SetNameAndUID(name As String, uid As String, parameters As String())
  overload: Clay.Game.Mod.Entities.Entity.SetNameAndUID*
  nameWithType.vb: Entity.SetNameAndUID(String, String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Clay.Game.Mod.Entities.Entity.SetNameAndUID(System.String, System.String, System.String())
  name.vb: SetNameAndUID(String, String, String())
- uid: Clay.Game.Mod.Entities.Entity.SetPosition(UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetPosition(UnityEngine.Vector2)
  id: SetPosition(UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetPosition(Vector2)
  nameWithType: Entity.SetPosition(Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.SetPosition(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetPosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3242
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetPosition(Vector2 value)
    parameters:
    - id: value
      type: UnityEngine.Vector2
    content.vb: Public Overridable Sub SetPosition(value As Vector2)
  overload: Clay.Game.Mod.Entities.Entity.SetPosition*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetPosition(System.Single,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetPosition(System.Single,System.Single)
  id: SetPosition(System.Single,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetPosition(Single, Single)
  nameWithType: Entity.SetPosition(Single, Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetPosition(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetPosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3257
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetPosition(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    content.vb: Public Overridable Sub SetPosition(x As Single, y As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetPosition*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.MovePosition(UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.MovePosition(UnityEngine.Vector2)
  id: MovePosition(UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: MovePosition(Vector2)
  nameWithType: Entity.MovePosition(Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.MovePosition(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: MovePosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3273
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void MovePosition(Vector2 value)
    parameters:
    - id: value
      type: UnityEngine.Vector2
    content.vb: Public Overridable Sub MovePosition(value As Vector2)
  overload: Clay.Game.Mod.Entities.Entity.MovePosition*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.MovePosition(System.Single,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.MovePosition(System.Single,System.Single)
  id: MovePosition(System.Single,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: MovePosition(Single, Single)
  nameWithType: Entity.MovePosition(Single, Single)
  fullName: Clay.Game.Mod.Entities.Entity.MovePosition(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: MovePosition
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3285
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void MovePosition(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    content.vb: Public Overridable Sub MovePosition(x As Single, y As Single)
  overload: Clay.Game.Mod.Entities.Entity.MovePosition*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetVelocity(UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetVelocity(UnityEngine.Vector2)
  id: SetVelocity(UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetVelocity(Vector2)
  nameWithType: Entity.SetVelocity(Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.SetVelocity(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetVelocity
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3298
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetVelocity(Vector2 value)
    parameters:
    - id: value
      type: UnityEngine.Vector2
    content.vb: Public Overridable Sub SetVelocity(value As Vector2)
  overload: Clay.Game.Mod.Entities.Entity.SetVelocity*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetVelocity(System.Single,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetVelocity(System.Single,System.Single)
  id: SetVelocity(System.Single,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetVelocity(Single, Single)
  nameWithType: Entity.SetVelocity(Single, Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetVelocity(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetVelocity
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3307
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetVelocity(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    content.vb: Public Overridable Sub SetVelocity(x As Single, y As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetVelocity*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetRotation(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetRotation(System.Single)
  id: SetRotation(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetRotation(Single)
  nameWithType: Entity.SetRotation(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetRotation(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetRotation
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3317
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetRotation(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Overridable Sub SetRotation(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetRotation*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetPitch(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetPitch(System.Single)
  id: SetPitch(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetPitch(Single)
  nameWithType: Entity.SetPitch(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetPitch(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetPitch
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3326
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetPitch(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Overridable Sub SetPitch(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetPitch*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetVisiblePitch(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetVisiblePitch(System.Single)
  id: SetVisiblePitch(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetVisiblePitch(Single)
  nameWithType: Entity.SetVisiblePitch(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetVisiblePitch(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetVisiblePitch
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3332
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetVisiblePitch(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Overridable Sub SetVisiblePitch(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetVisiblePitch*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetVisiblePitchForcefully(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetVisiblePitchForcefully(System.Single)
  id: SetVisiblePitchForcefully(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetVisiblePitchForcefully(Single)
  nameWithType: Entity.SetVisiblePitchForcefully(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetVisiblePitchForcefully(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetVisiblePitchForcefully
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3339
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetVisiblePitchForcefully(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub SetVisiblePitchForcefully(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetVisiblePitchForcefully*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetScale(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetScale(System.Single)
  id: SetScale(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetScale(Single)
  nameWithType: Entity.SetScale(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetScale(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetScale
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3349
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetScale(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub SetScale(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetScale*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetSpeechBubbleRadius(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetSpeechBubbleRadius(System.Single)
  id: SetSpeechBubbleRadius(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetSpeechBubbleRadius(Single)
  nameWithType: Entity.SetSpeechBubbleRadius(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetSpeechBubbleRadius(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetSpeechBubbleRadius
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3362
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetSpeechBubbleRadius(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub SetSpeechBubbleRadius(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetSpeechBubbleRadius*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetUIRadius(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetUIRadius(System.Single)
  id: SetUIRadius(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetUIRadius(Single)
  nameWithType: Entity.SetUIRadius(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetUIRadius(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetUIRadius
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3368
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetUIRadius(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub SetUIRadius(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetUIRadius*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetViewRange(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetViewRange(System.Single)
  id: SetViewRange(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetViewRange(Single)
  nameWithType: Entity.SetViewRange(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetViewRange(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetViewRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3374
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetViewRange(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub SetViewRange(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetViewRange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetFieldOfView(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetFieldOfView(System.Single)
  id: SetFieldOfView(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetFieldOfView(Single)
  nameWithType: Entity.SetFieldOfView(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetFieldOfView(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetFieldOfView
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3380
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetFieldOfView(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub SetFieldOfView(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetFieldOfView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetHealthRegenRate(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetHealthRegenRate(System.Single)
  id: SetHealthRegenRate(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetHealthRegenRate(Single)
  nameWithType: Entity.SetHealthRegenRate(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetHealthRegenRate(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetHealthRegenRate
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3390
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetHealthRegenRate(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub SetHealthRegenRate(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetHealthRegenRate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.CreateInventoryManager
  commentId: M:Clay.Game.Mod.Entities.Entity.CreateInventoryManager
  id: CreateInventoryManager
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CreateInventoryManager()
  nameWithType: Entity.CreateInventoryManager()
  fullName: Clay.Game.Mod.Entities.Entity.CreateInventoryManager()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CreateInventoryManager
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3398
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void CreateInventoryManager()
    content.vb: Public Sub CreateInventoryManager
  overload: Clay.Game.Mod.Entities.Entity.CreateInventoryManager*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.CreateInventoryManager(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Clay.Game.Mod.Entities.Entity.CreateInventoryManager(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: CreateInventoryManager(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CreateInventoryManager(Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: Entity.CreateInventoryManager(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: Clay.Game.Mod.Entities.Entity.CreateInventoryManager(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CreateInventoryManager
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3404
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void CreateInventoryManager(int consumables, int accessories, int seeds, int seedUnits, int consumableUnits, int artifacts)
    parameters:
    - id: consumables
      type: System.Int32
    - id: accessories
      type: System.Int32
    - id: seeds
      type: System.Int32
    - id: seedUnits
      type: System.Int32
    - id: consumableUnits
      type: System.Int32
    - id: artifacts
      type: System.Int32
    content.vb: Public Sub CreateInventoryManager(consumables As Integer, accessories As Integer, seeds As Integer, seedUnits As Integer, consumableUnits As Integer, artifacts As Integer)
  overload: Clay.Game.Mod.Entities.Entity.CreateInventoryManager*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetParentColony(Colony)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetParentColony(Colony)
  id: SetParentColony(Colony)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetParentColony(Colony)
  nameWithType: Entity.SetParentColony(Colony)
  fullName: Clay.Game.Mod.Entities.Entity.SetParentColony(Colony)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetParentColony
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3412
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetParentColony(Colony value)
    parameters:
    - id: value
      type: Colony
    content.vb: Public Overridable Sub SetParentColony(value As Colony)
  overload: Clay.Game.Mod.Entities.Entity.SetParentColony*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetParentFlora(Clay.Game.Mod.Entities.Flora)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetParentFlora(Clay.Game.Mod.Entities.Flora)
  id: SetParentFlora(Clay.Game.Mod.Entities.Flora)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetParentFlora(Flora)
  nameWithType: Entity.SetParentFlora(Flora)
  fullName: Clay.Game.Mod.Entities.Entity.SetParentFlora(Clay.Game.Mod.Entities.Flora)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetParentFlora
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3418
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetParentFlora(Flora value)
    parameters:
    - id: value
      type: Clay.Game.Mod.Entities.Flora
    content.vb: Public Overridable Sub SetParentFlora(value As Flora)
  overload: Clay.Game.Mod.Entities.Entity.SetParentFlora*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetAIGroup(AIGroup)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetAIGroup(AIGroup)
  id: SetAIGroup(AIGroup)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetAIGroup(AIGroup)
  nameWithType: Entity.SetAIGroup(AIGroup)
  fullName: Clay.Game.Mod.Entities.Entity.SetAIGroup(AIGroup)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetAIGroup
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3424
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetAIGroup(AIGroup value)
    parameters:
    - id: value
      type: AIGroup
    content.vb: Public Overridable Sub SetAIGroup(value As AIGroup)
  overload: Clay.Game.Mod.Entities.Entity.SetAIGroup*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetOwner(Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetOwner(Clay.Game.Mod.Entities.Entity)
  id: SetOwner(Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetOwner(Entity)
  nameWithType: Entity.SetOwner(Entity)
  fullName: Clay.Game.Mod.Entities.Entity.SetOwner(Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetOwner
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3430
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetOwner(Entity newOwner)
    parameters:
    - id: newOwner
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Overridable Sub SetOwner(newOwner As Entity)
  overload: Clay.Game.Mod.Entities.Entity.SetOwner*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.IsPlayerAction
  commentId: M:Clay.Game.Mod.Entities.Entity.IsPlayerAction
  id: IsPlayerAction
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsPlayerAction()
  nameWithType: Entity.IsPlayerAction()
  fullName: Clay.Game.Mod.Entities.Entity.IsPlayerAction()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsPlayerAction
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3445
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool IsPlayerAction()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsPlayerAction As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsPlayerAction*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetPlayerAction(System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetPlayerAction(System.Boolean)
  id: SetPlayerAction(System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetPlayerAction(Boolean)
  nameWithType: Entity.SetPlayerAction(Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.SetPlayerAction(System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetPlayerAction
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3451
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SetPlayerAction(bool isPlayerAction)
    parameters:
    - id: isPlayerAction
      type: System.Boolean
    content.vb: Public Overridable Sub SetPlayerAction(isPlayerAction As Boolean)
  overload: Clay.Game.Mod.Entities.Entity.SetPlayerAction*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.CreateRadarTarget(RadarTypes,System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.CreateRadarTarget(RadarTypes,System.String)
  id: CreateRadarTarget(RadarTypes,System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CreateRadarTarget(RadarTypes, String)
  nameWithType: Entity.CreateRadarTarget(RadarTypes, String)
  fullName: Clay.Game.Mod.Entities.Entity.CreateRadarTarget(RadarTypes, System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CreateRadarTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3458
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public RadarTarget CreateRadarTarget(RadarTypes radarType = RadarTypes.None, string textureID = "")
    parameters:
    - id: radarType
      type: RadarTypes
    - id: textureID
      type: System.String
    return:
      type: RadarTarget
    content.vb: Public Function CreateRadarTarget(radarType As RadarTypes = RadarTypes.None, textureID As String = "") As RadarTarget
  overload: Clay.Game.Mod.Entities.Entity.CreateRadarTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveRadarTarget
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveRadarTarget
  id: RemoveRadarTarget
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveRadarTarget()
  nameWithType: Entity.RemoveRadarTarget()
  fullName: Clay.Game.Mod.Entities.Entity.RemoveRadarTarget()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveRadarTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3465
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveRadarTarget()
    content.vb: Public Sub RemoveRadarTarget
  overload: Clay.Game.Mod.Entities.Entity.RemoveRadarTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.StartAIStateMachine
  commentId: M:Clay.Game.Mod.Entities.Entity.StartAIStateMachine
  id: StartAIStateMachine
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: StartAIStateMachine()
  nameWithType: Entity.StartAIStateMachine()
  fullName: Clay.Game.Mod.Entities.Entity.StartAIStateMachine()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: StartAIStateMachine
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3477
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void StartAIStateMachine()
    content.vb: Public Sub StartAIStateMachine
  overload: Clay.Game.Mod.Entities.Entity.StartAIStateMachine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetAIStateMachineState(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetAIStateMachineState(System.String)
  id: SetAIStateMachineState(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetAIStateMachineState(String)
  nameWithType: Entity.SetAIStateMachineState(String)
  fullName: Clay.Game.Mod.Entities.Entity.SetAIStateMachineState(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetAIStateMachineState
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3495
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetAIStateMachineState(string state)
    parameters:
    - id: state
      type: System.String
    content.vb: Public Sub SetAIStateMachineState(state As String)
  overload: Clay.Game.Mod.Entities.Entity.SetAIStateMachineState*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.ReadAIStateConfig(AIState)
  commentId: M:Clay.Game.Mod.Entities.Entity.ReadAIStateConfig(AIState)
  id: ReadAIStateConfig(AIState)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ReadAIStateConfig(AIState)
  nameWithType: Entity.ReadAIStateConfig(AIState)
  fullName: Clay.Game.Mod.Entities.Entity.ReadAIStateConfig(AIState)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ReadAIStateConfig
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3502
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void ReadAIStateConfig(AIState state)
    parameters:
    - id: state
      type: AIState
    content.vb: Public Overridable Sub ReadAIStateConfig(state As AIState)
  overload: Clay.Game.Mod.Entities.Entity.ReadAIStateConfig*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.InitialiseScripts(System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.InitialiseScripts(System.Boolean)
  id: InitialiseScripts(System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: InitialiseScripts(Boolean)
  nameWithType: Entity.InitialiseScripts(Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.InitialiseScripts(System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: InitialiseScripts
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3511
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected virtual void InitialiseScripts(bool rebuild)
    parameters:
    - id: rebuild
      type: System.Boolean
    content.vb: Protected Overridable Sub InitialiseScripts(rebuild As Boolean)
  overload: Clay.Game.Mod.Entities.Entity.InitialiseScripts*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.CleanUpScripts
  commentId: M:Clay.Game.Mod.Entities.Entity.CleanUpScripts
  id: CleanUpScripts
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CleanUpScripts()
  nameWithType: Entity.CleanUpScripts()
  fullName: Clay.Game.Mod.Entities.Entity.CleanUpScripts()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CleanUpScripts
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3564
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected virtual void CleanUpScripts()
    content.vb: Protected Overridable Sub CleanUpScripts
  overload: Clay.Game.Mod.Entities.Entity.CleanUpScripts*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.CallHandlers(System.String[])
  commentId: M:Clay.Game.Mod.Entities.Entity.CallHandlers(System.String[])
  id: CallHandlers(System.String[])
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CallHandlers(String[])
  nameWithType: Entity.CallHandlers(String[])
  fullName: Clay.Game.Mod.Entities.Entity.CallHandlers(System.String[])
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CallHandlers
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3591
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void CallHandlers(string[] handlerNames)
    parameters:
    - id: handlerNames
      type: System.String[]
    content.vb: Public Sub CallHandlers(handlerNames As String())
  overload: Clay.Game.Mod.Entities.Entity.CallHandlers*
  nameWithType.vb: Entity.CallHandlers(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Clay.Game.Mod.Entities.Entity.CallHandlers(System.String())
  name.vb: CallHandlers(String())
- uid: Clay.Game.Mod.Entities.Entity.CallHandlers(System.String[],System.Object[])
  commentId: M:Clay.Game.Mod.Entities.Entity.CallHandlers(System.String[],System.Object[])
  id: CallHandlers(System.String[],System.Object[])
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CallHandlers(String[], Object[])
  nameWithType: Entity.CallHandlers(String[], Object[])
  fullName: Clay.Game.Mod.Entities.Entity.CallHandlers(System.String[], System.Object[])
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CallHandlers
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3597
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void CallHandlers(string[] handlerNames, object[] invokeBuffer)
    parameters:
    - id: handlerNames
      type: System.String[]
    - id: invokeBuffer
      type: System.Object[]
    content.vb: Public Sub CallHandlers(handlerNames As String(), invokeBuffer As Object())
  overload: Clay.Game.Mod.Entities.Entity.CallHandlers*
  nameWithType.vb: Entity.CallHandlers(String(), Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Clay.Game.Mod.Entities.Entity.CallHandlers(System.String(), System.Object())
  name.vb: CallHandlers(String(), Object())
- uid: Clay.Game.Mod.Entities.Entity.FindNearestTarget
  commentId: M:Clay.Game.Mod.Entities.Entity.FindNearestTarget
  id: FindNearestTarget
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindNearestTarget()
  nameWithType: Entity.FindNearestTarget()
  fullName: Clay.Game.Mod.Entities.Entity.FindNearestTarget()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindNearestTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3628
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity FindNearestTarget()
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Function FindNearestTarget As Entity
  overload: Clay.Game.Mod.Entities.Entity.FindNearestTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindNearestTarget(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindNearestTarget(System.Single)
  id: FindNearestTarget(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindNearestTarget(Single)
  nameWithType: Entity.FindNearestTarget(Single)
  fullName: Clay.Game.Mod.Entities.Entity.FindNearestTarget(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindNearestTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3633
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity FindNearestTarget(float range)
    parameters:
    - id: range
      type: System.Single
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Function FindNearestTarget(range As Single) As Entity
  overload: Clay.Game.Mod.Entities.Entity.FindNearestTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindNearestTarget(UnityEngine.Vector3,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindNearestTarget(UnityEngine.Vector3,System.Single)
  id: FindNearestTarget(UnityEngine.Vector3,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindNearestTarget(Vector3, Single)
  nameWithType: Entity.FindNearestTarget(Vector3, Single)
  fullName: Clay.Game.Mod.Entities.Entity.FindNearestTarget(UnityEngine.Vector3, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindNearestTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3639
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity FindNearestTarget(Vector3 searchPosition, float range)
    parameters:
    - id: searchPosition
      type: UnityEngine.Vector3
    - id: range
      type: System.Single
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Function FindNearestTarget(searchPosition As Vector3, range As Single) As Entity
  overload: Clay.Game.Mod.Entities.Entity.FindNearestTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindNearestTarget(System.Single,GameUtils.IsEntityTargetValidDelegate)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindNearestTarget(System.Single,GameUtils.IsEntityTargetValidDelegate)
  id: FindNearestTarget(System.Single,GameUtils.IsEntityTargetValidDelegate)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindNearestTarget(Single, GameUtils.IsEntityTargetValidDelegate)
  nameWithType: Entity.FindNearestTarget(Single, GameUtils.IsEntityTargetValidDelegate)
  fullName: Clay.Game.Mod.Entities.Entity.FindNearestTarget(System.Single, GameUtils.IsEntityTargetValidDelegate)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindNearestTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3644
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity FindNearestTarget(float range, GameUtils.IsEntityTargetValidDelegate isEntityTargetValidCB)
    parameters:
    - id: range
      type: System.Single
    - id: isEntityTargetValidCB
      type: GameUtils.IsEntityTargetValidDelegate
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Function FindNearestTarget(range As Single, isEntityTargetValidCB As GameUtils.IsEntityTargetValidDelegate) As Entity
  overload: Clay.Game.Mod.Entities.Entity.FindNearestTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindNearestTarget(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindNearestTarget(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  id: FindNearestTarget(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindNearestTarget(Vector3, Single, GameUtils.IsEntityTargetValidDelegate)
  nameWithType: Entity.FindNearestTarget(Vector3, Single, GameUtils.IsEntityTargetValidDelegate)
  fullName: Clay.Game.Mod.Entities.Entity.FindNearestTarget(UnityEngine.Vector3, System.Single, GameUtils.IsEntityTargetValidDelegate)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindNearestTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3649
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity FindNearestTarget(Vector3 searchPosition, float range, GameUtils.IsEntityTargetValidDelegate isEntityTargetValidCB)
    parameters:
    - id: searchPosition
      type: UnityEngine.Vector3
    - id: range
      type: System.Single
    - id: isEntityTargetValidCB
      type: GameUtils.IsEntityTargetValidDelegate
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Function FindNearestTarget(searchPosition As Vector3, range As Single, isEntityTargetValidCB As GameUtils.IsEntityTargetValidDelegate) As Entity
  overload: Clay.Game.Mod.Entities.Entity.FindNearestTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindNearestEntity(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindNearestEntity(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  id: FindNearestEntity(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindNearestEntity(Vector3, Single, GameUtils.IsEntityTargetValidDelegate)
  nameWithType: Entity.FindNearestEntity(Vector3, Single, GameUtils.IsEntityTargetValidDelegate)
  fullName: Clay.Game.Mod.Entities.Entity.FindNearestEntity(UnityEngine.Vector3, System.Single, GameUtils.IsEntityTargetValidDelegate)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindNearestEntity
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3671
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity FindNearestEntity(Vector3 searchPosition, float range, GameUtils.IsEntityTargetValidDelegate isEntityTargetValidCB)
    parameters:
    - id: searchPosition
      type: UnityEngine.Vector3
    - id: range
      type: System.Single
    - id: isEntityTargetValidCB
      type: GameUtils.IsEntityTargetValidDelegate
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Function FindNearestEntity(searchPosition As Vector3, range As Single, isEntityTargetValidCB As GameUtils.IsEntityTargetValidDelegate) As Entity
  overload: Clay.Game.Mod.Entities.Entity.FindNearestEntity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindNearestEntityAny(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindNearestEntityAny(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  id: FindNearestEntityAny(UnityEngine.Vector3,System.Single,GameUtils.IsEntityTargetValidDelegate)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindNearestEntityAny(Vector3, Single, GameUtils.IsEntityTargetValidDelegate)
  nameWithType: Entity.FindNearestEntityAny(Vector3, Single, GameUtils.IsEntityTargetValidDelegate)
  fullName: Clay.Game.Mod.Entities.Entity.FindNearestEntityAny(UnityEngine.Vector3, System.Single, GameUtils.IsEntityTargetValidDelegate)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindNearestEntityAny
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3676
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Entity FindNearestEntityAny(Vector3 searchPosition, float range, GameUtils.IsEntityTargetValidDelegate isEntityTargetValidCB)
    parameters:
    - id: searchPosition
      type: UnityEngine.Vector3
    - id: range
      type: System.Single
    - id: isEntityTargetValidCB
      type: GameUtils.IsEntityTargetValidDelegate
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Function FindNearestEntityAny(searchPosition As Vector3, range As Single, isEntityTargetValidCB As GameUtils.IsEntityTargetValidDelegate) As Entity
  overload: Clay.Game.Mod.Entities.Entity.FindNearestEntityAny*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FollowEntity(Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.FollowEntity(Clay.Game.Mod.Entities.Entity)
  id: FollowEntity(Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FollowEntity(Entity)
  nameWithType: Entity.FollowEntity(Entity)
  fullName: Clay.Game.Mod.Entities.Entity.FollowEntity(Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FollowEntity
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3681
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void FollowEntity(Entity entity)
    parameters:
    - id: entity
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Overridable Sub FollowEntity(entity As Entity)
  overload: Clay.Game.Mod.Entities.Entity.FollowEntity*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.IsFollowTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsFollowTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  id: IsFollowTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsFollowTargetValidCB(Entity, Vector2)
  nameWithType: Entity.IsFollowTargetValidCB(Entity, Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.IsFollowTargetValidCB(Clay.Game.Mod.Entities.Entity, UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsFollowTargetValidCB
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3689
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool IsFollowTargetValidCB(Entity target, Vector2 sourcePosition)
    parameters:
    - id: target
      type: Clay.Game.Mod.Entities.Entity
    - id: sourcePosition
      type: UnityEngine.Vector2
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsFollowTargetValidCB(target As Entity, sourcePosition As Vector2) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsFollowTargetValidCB*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.IsFloraTargetValidCB(Clay.Game.Mod.Entities.Flora)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsFloraTargetValidCB(Clay.Game.Mod.Entities.Flora)
  id: IsFloraTargetValidCB(Clay.Game.Mod.Entities.Flora)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsFloraTargetValidCB(Flora)
  nameWithType: Entity.IsFloraTargetValidCB(Flora)
  fullName: Clay.Game.Mod.Entities.Entity.IsFloraTargetValidCB(Clay.Game.Mod.Entities.Flora)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsFloraTargetValidCB
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3707
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsFloraTargetValidCB(Flora target)
    parameters:
    - id: target
      type: Clay.Game.Mod.Entities.Flora
    return:
      type: System.Boolean
    content.vb: Public Function IsFloraTargetValidCB(target As Flora) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsFloraTargetValidCB*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsFloraElementTargetValidCB(FloraElement,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsFloraElementTargetValidCB(FloraElement,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  id: IsFloraElementTargetValidCB(FloraElement,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsFloraElementTargetValidCB(FloraElement, Vector2, Vector2, Vector2, Single)
  nameWithType: Entity.IsFloraElementTargetValidCB(FloraElement, Vector2, Vector2, Vector2, Single)
  fullName: Clay.Game.Mod.Entities.Entity.IsFloraElementTargetValidCB(FloraElement, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsFloraElementTargetValidCB
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3716
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsFloraElementTargetValidCB(FloraElement target, Vector2 sourcePosition, Vector2 targetPosition, Vector2 dv, float targetDistanceSq)
    parameters:
    - id: target
      type: FloraElement
    - id: sourcePosition
      type: UnityEngine.Vector2
    - id: targetPosition
      type: UnityEngine.Vector2
    - id: dv
      type: UnityEngine.Vector2
    - id: targetDistanceSq
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function IsFloraElementTargetValidCB(target As FloraElement, sourcePosition As Vector2, targetPosition As Vector2, dv As Vector2, targetDistanceSq As Single) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsFloraElementTargetValidCB*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.InRange(Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.InRange(Clay.Game.Mod.Entities.Entity)
  id: InRange(Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: InRange(Entity)
  nameWithType: Entity.InRange(Entity)
  fullName: Clay.Game.Mod.Entities.Entity.InRange(Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: InRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3733
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool InRange(Entity entity)
    parameters:
    - id: entity
      type: Clay.Game.Mod.Entities.Entity
    return:
      type: System.Boolean
    content.vb: Public Function InRange(entity As Entity) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.InRange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.InRange(Clay.Game.Mod.Entities.Entity,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.InRange(Clay.Game.Mod.Entities.Entity,System.Single)
  id: InRange(Clay.Game.Mod.Entities.Entity,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: InRange(Entity, Single)
  nameWithType: Entity.InRange(Entity, Single)
  fullName: Clay.Game.Mod.Entities.Entity.InRange(Clay.Game.Mod.Entities.Entity, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: InRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3739
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool InRange(Entity entity, float range)
    parameters:
    - id: entity
      type: Clay.Game.Mod.Entities.Entity
    - id: range
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function InRange(entity As Entity, range As Single) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.InRange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.InRange(UnityEngine.Vector2,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.InRange(UnityEngine.Vector2,System.Single)
  id: InRange(UnityEngine.Vector2,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: InRange(Vector2, Single)
  nameWithType: Entity.InRange(Vector2, Single)
  fullName: Clay.Game.Mod.Entities.Entity.InRange(UnityEngine.Vector2, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: InRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3745
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool InRange(Vector2 position, float range)
    parameters:
    - id: position
      type: UnityEngine.Vector2
    - id: range
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function InRange(position As Vector2, range As Single) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.InRange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.InRange(System.Single,System.Single,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.InRange(System.Single,System.Single,System.Single)
  id: InRange(System.Single,System.Single,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: InRange(Single, Single, Single)
  nameWithType: Entity.InRange(Single, Single, Single)
  fullName: Clay.Game.Mod.Entities.Entity.InRange(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: InRange
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3757
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool InRange(float x, float y, float range)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: range
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function InRange(x As Single, y As Single, range As Single) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.InRange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SceneryCollisionHandler(DistanceFieldCollisionInfo)
  commentId: M:Clay.Game.Mod.Entities.Entity.SceneryCollisionHandler(DistanceFieldCollisionInfo)
  id: SceneryCollisionHandler(DistanceFieldCollisionInfo)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SceneryCollisionHandler(DistanceFieldCollisionInfo)
  nameWithType: Entity.SceneryCollisionHandler(DistanceFieldCollisionInfo)
  fullName: Clay.Game.Mod.Entities.Entity.SceneryCollisionHandler(DistanceFieldCollisionInfo)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SceneryCollisionHandler
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3765
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SceneryCollisionHandler(DistanceFieldCollisionInfo info)
    parameters:
    - id: info
      type: DistanceFieldCollisionInfo
    content.vb: Public Overridable Sub SceneryCollisionHandler(info As DistanceFieldCollisionInfo)
  overload: Clay.Game.Mod.Entities.Entity.SceneryCollisionHandler*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.DoorCollisionHandler(Door)
  commentId: M:Clay.Game.Mod.Entities.Entity.DoorCollisionHandler(Door)
  id: DoorCollisionHandler(Door)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: DoorCollisionHandler(Door)
  nameWithType: Entity.DoorCollisionHandler(Door)
  fullName: Clay.Game.Mod.Entities.Entity.DoorCollisionHandler(Door)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: DoorCollisionHandler
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3771
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void DoorCollisionHandler(Door door)
    parameters:
    - id: door
      type: Door
    content.vb: Public Overridable Sub DoorCollisionHandler(door As Door)
  overload: Clay.Game.Mod.Entities.Entity.DoorCollisionHandler*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetSpriteDef(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetSpriteDef(System.String)
  id: SetSpriteDef(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetSpriteDef(String)
  nameWithType: Entity.SetSpriteDef(String)
  fullName: Clay.Game.Mod.Entities.Entity.SetSpriteDef(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetSpriteDef
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3779
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetSpriteDef(string spriteName)
    parameters:
    - id: spriteName
      type: System.String
    content.vb: Public Sub SetSpriteDef(spriteName As String)
  overload: Clay.Game.Mod.Entities.Entity.SetSpriteDef*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetSpriteDefDelayed(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetSpriteDefDelayed(System.String)
  id: SetSpriteDefDelayed(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetSpriteDefDelayed(String)
  nameWithType: Entity.SetSpriteDefDelayed(String)
  fullName: Clay.Game.Mod.Entities.Entity.SetSpriteDefDelayed(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetSpriteDefDelayed
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3787
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetSpriteDefDelayed(string spriteName)
    parameters:
    - id: spriteName
      type: System.String
    content.vb: Public Sub SetSpriteDefDelayed(spriteName As String)
  overload: Clay.Game.Mod.Entities.Entity.SetSpriteDefDelayed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.ClearSpriteDef
  commentId: M:Clay.Game.Mod.Entities.Entity.ClearSpriteDef
  id: ClearSpriteDef
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ClearSpriteDef()
  nameWithType: Entity.ClearSpriteDef()
  fullName: Clay.Game.Mod.Entities.Entity.ClearSpriteDef()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ClearSpriteDef
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3809
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void ClearSpriteDef()
    content.vb: Public Sub ClearSpriteDef
  overload: Clay.Game.Mod.Entities.Entity.ClearSpriteDef*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.ProcessSprites
  commentId: M:Clay.Game.Mod.Entities.Entity.ProcessSprites
  id: ProcessSprites
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ProcessSprites()
  nameWithType: Entity.ProcessSprites()
  fullName: Clay.Game.Mod.Entities.Entity.ProcessSprites()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ProcessSprites
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3820
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void ProcessSprites()
    content.vb: Public Sub ProcessSprites
  overload: Clay.Game.Mod.Entities.Entity.ProcessSprites*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.EditorSpriteNameChanged
  commentId: M:Clay.Game.Mod.Entities.Entity.EditorSpriteNameChanged
  id: EditorSpriteNameChanged
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: EditorSpriteNameChanged()
  nameWithType: Entity.EditorSpriteNameChanged()
  fullName: Clay.Game.Mod.Entities.Entity.EditorSpriteNameChanged()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: EditorSpriteNameChanged
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3849
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void EditorSpriteNameChanged()
    content.vb: Public Sub EditorSpriteNameChanged
  overload: Clay.Game.Mod.Entities.Entity.EditorSpriteNameChanged*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.EditorHealthChanged
  commentId: M:Clay.Game.Mod.Entities.Entity.EditorHealthChanged
  id: EditorHealthChanged
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: EditorHealthChanged()
  nameWithType: Entity.EditorHealthChanged()
  fullName: Clay.Game.Mod.Entities.Entity.EditorHealthChanged()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: EditorHealthChanged
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3855
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void EditorHealthChanged()
    content.vb: Public Sub EditorHealthChanged
  overload: Clay.Game.Mod.Entities.Entity.EditorHealthChanged*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RebuildSprite
  commentId: M:Clay.Game.Mod.Entities.Entity.RebuildSprite
  id: RebuildSprite
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RebuildSprite()
  nameWithType: Entity.RebuildSprite()
  fullName: Clay.Game.Mod.Entities.Entity.RebuildSprite()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RebuildSprite
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3861
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RebuildSprite()
    content.vb: Public Sub RebuildSprite
  overload: Clay.Game.Mod.Entities.Entity.RebuildSprite*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.AddOverlay(System.String,System.Int32)
  commentId: M:Clay.Game.Mod.Entities.Entity.AddOverlay(System.String,System.Int32)
  id: AddOverlay(System.String,System.Int32)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: AddOverlay(String, Int32)
  nameWithType: Entity.AddOverlay(String, Int32)
  fullName: Clay.Game.Mod.Entities.Entity.AddOverlay(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: AddOverlay
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3875
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Overlay AddOverlay(string spriteName, int layerModifier)
    parameters:
    - id: spriteName
      type: System.String
    - id: layerModifier
      type: System.Int32
    return:
      type: Overlay
    content.vb: Public Function AddOverlay(spriteName As String, layerModifier As Integer) As Overlay
  overload: Clay.Game.Mod.Entities.Entity.AddOverlay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveOverlay(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveOverlay(System.String)
  id: RemoveOverlay(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveOverlay(String)
  nameWithType: Entity.RemoveOverlay(String)
  fullName: Clay.Game.Mod.Entities.Entity.RemoveOverlay(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveOverlay
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3892
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveOverlay(string spriteName)
    parameters:
    - id: spriteName
      type: System.String
    content.vb: Public Sub RemoveOverlay(spriteName As String)
  overload: Clay.Game.Mod.Entities.Entity.RemoveOverlay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveOverlay(Overlay)
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveOverlay(Overlay)
  id: RemoveOverlay(Overlay)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveOverlay(Overlay)
  nameWithType: Entity.RemoveOverlay(Overlay)
  fullName: Clay.Game.Mod.Entities.Entity.RemoveOverlay(Overlay)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveOverlay
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3911
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveOverlay(Overlay overlay)
    parameters:
    - id: overlay
      type: Overlay
    content.vb: Public Sub RemoveOverlay(overlay As Overlay)
  overload: Clay.Game.Mod.Entities.Entity.RemoveOverlay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.ModifyHealth(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.ModifyHealth(System.Single)
  id: ModifyHealth(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ModifyHealth(Single)
  nameWithType: Entity.ModifyHealth(Single)
  fullName: Clay.Game.Mod.Entities.Entity.ModifyHealth(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ModifyHealth
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3924
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool ModifyHealth(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function ModifyHealth(value As Single) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.ModifyHealth*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetHealth(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetHealth(System.Single)
  id: SetHealth(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetHealth(Single)
  nameWithType: Entity.SetHealth(Single)
  fullName: Clay.Game.Mod.Entities.Entity.SetHealth(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetHealth
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3961
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetHealth(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub SetHealth(value As Single)
  overload: Clay.Game.Mod.Entities.Entity.SetHealth*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.Heal
  commentId: M:Clay.Game.Mod.Entities.Entity.Heal
  id: Heal
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Heal()
  nameWithType: Entity.Heal()
  fullName: Clay.Game.Mod.Entities.Entity.Heal()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Heal
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 3968
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void Heal()
    content.vb: Public Sub Heal
  overload: Clay.Game.Mod.Entities.Entity.Heal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindHardPoint(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindHardPoint(System.String)
  id: FindHardPoint(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindHardPoint(String)
  nameWithType: Entity.FindHardPoint(String)
  fullName: Clay.Game.Mod.Entities.Entity.FindHardPoint(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindHardPoint
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4123
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public HardPoint FindHardPoint(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: HardPoint
    content.vb: Public Function FindHardPoint(name As String) As HardPoint
  overload: Clay.Game.Mod.Entities.Entity.FindHardPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindHardPointByIndex(System.Int32)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindHardPointByIndex(System.Int32)
  id: FindHardPointByIndex(System.Int32)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindHardPointByIndex(Int32)
  nameWithType: Entity.FindHardPointByIndex(Int32)
  fullName: Clay.Game.Mod.Entities.Entity.FindHardPointByIndex(System.Int32)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindHardPointByIndex
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4135
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public HardPoint FindHardPointByIndex(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: HardPoint
    content.vb: Public Function FindHardPointByIndex(index As Integer) As HardPoint
  overload: Clay.Game.Mod.Entities.Entity.FindHardPointByIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindWeapon(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindWeapon(System.String)
  id: FindWeapon(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindWeapon(String)
  nameWithType: Entity.FindWeapon(String)
  fullName: Clay.Game.Mod.Entities.Entity.FindWeapon(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindWeapon
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4141
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Weapon FindWeapon(string type)
    parameters:
    - id: type
      type: System.String
    return:
      type: Weapon
    content.vb: Public Function FindWeapon(type As String) As Weapon
  overload: Clay.Game.Mod.Entities.Entity.FindWeapon*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPointIndex(System.Int32)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPointIndex(System.Int32)
  id: FindWeaponAtHardPointIndex(System.Int32)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindWeaponAtHardPointIndex(Int32)
  nameWithType: Entity.FindWeaponAtHardPointIndex(Int32)
  fullName: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPointIndex(System.Int32)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindWeaponAtHardPointIndex
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4156
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Weapon FindWeaponAtHardPointIndex(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Weapon
    content.vb: Public Function FindWeaponAtHardPointIndex(index As Integer) As Weapon
  overload: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPointIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint(HardPoint)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint(HardPoint)
  id: FindWeaponAtHardPoint(HardPoint)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindWeaponAtHardPoint(HardPoint)
  nameWithType: Entity.FindWeaponAtHardPoint(HardPoint)
  fullName: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint(HardPoint)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindWeaponAtHardPoint
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4162
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Weapon FindWeaponAtHardPoint(HardPoint hardPoint)
    parameters:
    - id: hardPoint
      type: HardPoint
    return:
      type: Weapon
    content.vb: Public Function FindWeaponAtHardPoint(hardPoint As HardPoint) As Weapon
  overload: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint(System.String)
  id: FindWeaponAtHardPoint(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FindWeaponAtHardPoint(String)
  nameWithType: Entity.FindWeaponAtHardPoint(String)
  fullName: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FindWeaponAtHardPoint
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4180
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Weapon FindWeaponAtHardPoint(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Weapon
    content.vb: Public Function FindWeaponAtHardPoint(name As String) As Weapon
  overload: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.AddWeaponToIndex(System.String,System.Int32)
  commentId: M:Clay.Game.Mod.Entities.Entity.AddWeaponToIndex(System.String,System.Int32)
  id: AddWeaponToIndex(System.String,System.Int32)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: AddWeaponToIndex(String, Int32)
  nameWithType: Entity.AddWeaponToIndex(String, Int32)
  fullName: Clay.Game.Mod.Entities.Entity.AddWeaponToIndex(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: AddWeaponToIndex
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4204
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Weapon AddWeaponToIndex(string weaponType, int index)
    parameters:
    - id: weaponType
      type: System.String
    - id: index
      type: System.Int32
    return:
      type: Weapon
    content.vb: Public Function AddWeaponToIndex(weaponType As String, index As Integer) As Weapon
  overload: Clay.Game.Mod.Entities.Entity.AddWeaponToIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.AddWeapon(HardPoint)
  commentId: M:Clay.Game.Mod.Entities.Entity.AddWeapon(HardPoint)
  id: AddWeapon(HardPoint)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: AddWeapon(HardPoint)
  nameWithType: Entity.AddWeapon(HardPoint)
  fullName: Clay.Game.Mod.Entities.Entity.AddWeapon(HardPoint)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: AddWeapon
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4210
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Weapon AddWeapon(HardPoint hardPoint)
    parameters:
    - id: hardPoint
      type: HardPoint
    return:
      type: Weapon
    content.vb: Public Function AddWeapon(hardPoint As HardPoint) As Weapon
  overload: Clay.Game.Mod.Entities.Entity.AddWeapon*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.AddWeapon(System.String,System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.AddWeapon(System.String,System.String)
  id: AddWeapon(System.String,System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: AddWeapon(String, String)
  nameWithType: Entity.AddWeapon(String, String)
  fullName: Clay.Game.Mod.Entities.Entity.AddWeapon(System.String, System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: AddWeapon
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4219
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public Weapon AddWeapon(string weaponType, string hardPointName)
    parameters:
    - id: weaponType
      type: System.String
    - id: hardPointName
      type: System.String
    return:
      type: Weapon
    content.vb: Public Function AddWeapon(weaponType As String, hardPointName As String) As Weapon
  overload: Clay.Game.Mod.Entities.Entity.AddWeapon*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.AddWeapon(System.String,HardPoint)
  commentId: M:Clay.Game.Mod.Entities.Entity.AddWeapon(System.String,HardPoint)
  id: AddWeapon(System.String,HardPoint)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: AddWeapon(String, HardPoint)
  nameWithType: Entity.AddWeapon(String, HardPoint)
  fullName: Clay.Game.Mod.Entities.Entity.AddWeapon(System.String, HardPoint)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: AddWeapon
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4230
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual Weapon AddWeapon(string weaponType, HardPoint hardPoint)
    parameters:
    - id: weaponType
      type: System.String
    - id: hardPoint
      type: HardPoint
    return:
      type: Weapon
    content.vb: Public Overridable Function AddWeapon(weaponType As String, hardPoint As HardPoint) As Weapon
  overload: Clay.Game.Mod.Entities.Entity.AddWeapon*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeapon(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveWeapon(System.String)
  id: RemoveWeapon(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveWeapon(String)
  nameWithType: Entity.RemoveWeapon(String)
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeapon(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveWeapon
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4259
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveWeapon(string weaponType)
    parameters:
    - id: weaponType
      type: System.String
    content.vb: Public Sub RemoveWeapon(weaponType As String)
  overload: Clay.Game.Mod.Entities.Entity.RemoveWeapon*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeapon(Weapon)
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveWeapon(Weapon)
  id: RemoveWeapon(Weapon)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveWeapon(Weapon)
  nameWithType: Entity.RemoveWeapon(Weapon)
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeapon(Weapon)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveWeapon
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4265
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveWeapon(Weapon weapon)
    parameters:
    - id: weapon
      type: Weapon
    content.vb: Public Sub RemoveWeapon(weapon As Weapon)
  overload: Clay.Game.Mod.Entities.Entity.RemoveWeapon*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String)
  id: RemoveWeaponAtHardPoint(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveWeaponAtHardPoint(String)
  nameWithType: Entity.RemoveWeaponAtHardPoint(String)
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveWeaponAtHardPoint
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4278
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveWeaponAtHardPoint(string hardPointName)
    parameters:
    - id: hardPointName
      type: System.String
    content.vb: Public Sub RemoveWeaponAtHardPoint(hardPointName As String)
  overload: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String,System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String,System.String)
  id: RemoveWeaponAtHardPoint(System.String,System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveWeaponAtHardPoint(String, String)
  nameWithType: Entity.RemoveWeaponAtHardPoint(String, String)
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String, System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveWeaponAtHardPoint
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4284
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveWeaponAtHardPoint(string weaponType, string hardPointName)
    parameters:
    - id: weaponType
      type: System.String
    - id: hardPointName
      type: System.String
    content.vb: Public Sub RemoveWeaponAtHardPoint(weaponType As String, hardPointName As String)
  overload: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex(System.Int32)
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex(System.Int32)
  id: RemoveWeaponAtHardPointIndex(System.Int32)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveWeaponAtHardPointIndex(Int32)
  nameWithType: Entity.RemoveWeaponAtHardPointIndex(Int32)
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex(System.Int32)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveWeaponAtHardPointIndex
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4291
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveWeaponAtHardPointIndex(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveWeaponAtHardPointIndex(index As Integer)
  overload: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex(System.String,System.Int32)
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex(System.String,System.Int32)
  id: RemoveWeaponAtHardPointIndex(System.String,System.Int32)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveWeaponAtHardPointIndex(String, Int32)
  nameWithType: Entity.RemoveWeaponAtHardPointIndex(String, Int32)
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveWeaponAtHardPointIndex
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4297
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveWeaponAtHardPointIndex(string weaponType, int index)
    parameters:
    - id: weaponType
      type: System.String
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveWeaponAtHardPointIndex(weaponType As String, index As Integer)
  overload: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(HardPoint)
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(HardPoint)
  id: RemoveWeaponAtHardPoint(HardPoint)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveWeaponAtHardPoint(HardPoint)
  nameWithType: Entity.RemoveWeaponAtHardPoint(HardPoint)
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(HardPoint)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveWeaponAtHardPoint
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4303
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveWeaponAtHardPoint(HardPoint hardPoint)
    parameters:
    - id: hardPoint
      type: HardPoint
    content.vb: Public Sub RemoveWeaponAtHardPoint(hardPoint As HardPoint)
  overload: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String,HardPoint)
  commentId: M:Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String,HardPoint)
  id: RemoveWeaponAtHardPoint(System.String,HardPoint)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: RemoveWeaponAtHardPoint(String, HardPoint)
  nameWithType: Entity.RemoveWeaponAtHardPoint(String, HardPoint)
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint(System.String, HardPoint)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: RemoveWeaponAtHardPoint
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4309
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void RemoveWeaponAtHardPoint(string weaponType, HardPoint hardPoint)
    parameters:
    - id: weaponType
      type: System.String
    - id: hardPoint
      type: HardPoint
    content.vb: Public Sub RemoveWeaponAtHardPoint(weaponType As String, hardPoint As HardPoint)
  overload: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.GenerateWeaponCharacteristics
  commentId: M:Clay.Game.Mod.Entities.Entity.GenerateWeaponCharacteristics
  id: GenerateWeaponCharacteristics
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: GenerateWeaponCharacteristics()
  nameWithType: Entity.GenerateWeaponCharacteristics()
  fullName: Clay.Game.Mod.Entities.Entity.GenerateWeaponCharacteristics()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: GenerateWeaponCharacteristics
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4323
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void GenerateWeaponCharacteristics()
    content.vb: Public Sub GenerateWeaponCharacteristics
  overload: Clay.Game.Mod.Entities.Entity.GenerateWeaponCharacteristics*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.TryAttack(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.TryAttack(System.Single)
  id: TryAttack(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: TryAttack(Single)
  nameWithType: Entity.TryAttack(Single)
  fullName: Clay.Game.Mod.Entities.Entity.TryAttack(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: TryAttack
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4335
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void TryAttack(float time)
    parameters:
    - id: time
      type: System.Single
    content.vb: Public Overridable Sub TryAttack(time As Single)
  overload: Clay.Game.Mod.Entities.Entity.TryAttack*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.CanAttack
  commentId: M:Clay.Game.Mod.Entities.Entity.CanAttack
  id: CanAttack
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: CanAttack()
  nameWithType: Entity.CanAttack()
  fullName: Clay.Game.Mod.Entities.Entity.CanAttack()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: CanAttack
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4355
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual bool CanAttack()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function CanAttack As Boolean
  overload: Clay.Game.Mod.Entities.Entity.CanAttack*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.IsEntityVisible(Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsEntityVisible(Clay.Game.Mod.Entities.Entity)
  id: IsEntityVisible(Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsEntityVisible(Entity)
  nameWithType: Entity.IsEntityVisible(Entity)
  fullName: Clay.Game.Mod.Entities.Entity.IsEntityVisible(Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsEntityVisible
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4375
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsEntityVisible(Entity entity)
    parameters:
    - id: entity
      type: Clay.Game.Mod.Entities.Entity
    return:
      type: System.Boolean
    content.vb: Public Function IsEntityVisible(entity As Entity) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsEntityVisible*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInFieldOfView(Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInFieldOfView(Clay.Game.Mod.Entities.Entity)
  id: IsInFieldOfView(Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInFieldOfView(Entity)
  nameWithType: Entity.IsInFieldOfView(Entity)
  fullName: Clay.Game.Mod.Entities.Entity.IsInFieldOfView(Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInFieldOfView
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4387
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInFieldOfView(Entity entity)
    parameters:
    - id: entity
      type: Clay.Game.Mod.Entities.Entity
    return:
      type: System.Boolean
    content.vb: Public Function IsInFieldOfView(entity As Entity) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInFieldOfView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInFieldOfView(System.Single,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInFieldOfView(System.Single,System.Single)
  id: IsInFieldOfView(System.Single,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInFieldOfView(Single, Single)
  nameWithType: Entity.IsInFieldOfView(Single, Single)
  fullName: Clay.Game.Mod.Entities.Entity.IsInFieldOfView(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInFieldOfView
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4393
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInFieldOfView(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function IsInFieldOfView(x As Single, y As Single) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInFieldOfView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Vector2)
  id: IsInFieldOfView(UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInFieldOfView(Vector2)
  nameWithType: Entity.IsInFieldOfView(Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInFieldOfView
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4398
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInFieldOfView(Vector2 targetPosition)
    parameters:
    - id: targetPosition
      type: UnityEngine.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function IsInFieldOfView(targetPosition As Vector2) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInFieldOfView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Vector2,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Vector2,System.Single)
  id: IsInFieldOfView(UnityEngine.Vector2,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInFieldOfView(Vector2, Single)
  nameWithType: Entity.IsInFieldOfView(Vector2, Single)
  fullName: Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Vector2, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInFieldOfView
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4411
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInFieldOfView(Vector2 dv, float targetDistanceSq)
    parameters:
    - id: dv
      type: UnityEngine.Vector2
    - id: targetDistanceSq
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function IsInFieldOfView(dv As Vector2, targetDistanceSq As Single) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInFieldOfView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Rect)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Rect)
  id: IsInFieldOfView(UnityEngine.Rect)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInFieldOfView(Rect)
  nameWithType: Entity.IsInFieldOfView(Rect)
  fullName: Clay.Game.Mod.Entities.Entity.IsInFieldOfView(UnityEngine.Rect)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInFieldOfView
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4419
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInFieldOfView(Rect bounds)
    parameters:
    - id: bounds
      type: UnityEngine.Rect
    return:
      type: System.Boolean
    content.vb: Public Function IsInFieldOfView(bounds As Rect) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInFieldOfView*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInLineOfSight(Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInLineOfSight(Clay.Game.Mod.Entities.Entity)
  id: IsInLineOfSight(Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInLineOfSight(Entity)
  nameWithType: Entity.IsInLineOfSight(Entity)
  fullName: Clay.Game.Mod.Entities.Entity.IsInLineOfSight(Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInLineOfSight
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4436
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInLineOfSight(Entity entity)
    parameters:
    - id: entity
      type: Clay.Game.Mod.Entities.Entity
    return:
      type: System.Boolean
    content.vb: Public Function IsInLineOfSight(entity As Entity) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInLineOfSight*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSight(System.Single,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSight(System.Single,System.Single)
  id: IsInFieldOfViewIsInLineOfSight(System.Single,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInFieldOfViewIsInLineOfSight(Single, Single)
  nameWithType: Entity.IsInFieldOfViewIsInLineOfSight(Single, Single)
  fullName: Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSight(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInFieldOfViewIsInLineOfSight
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4442
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInFieldOfViewIsInLineOfSight(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function IsInFieldOfViewIsInLineOfSight(x As Single, y As Single) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSight*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors(System.Single,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors(System.Single,System.Single)
  id: IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors(System.Single,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors(Single, Single)
  nameWithType: Entity.IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors(Single, Single)
  fullName: Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4448
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors(x As Single, y As Single) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInLineOfSightIgnoreUnlockedDoors(UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInLineOfSightIgnoreUnlockedDoors(UnityEngine.Vector2)
  id: IsInLineOfSightIgnoreUnlockedDoors(UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInLineOfSightIgnoreUnlockedDoors(Vector2)
  nameWithType: Entity.IsInLineOfSightIgnoreUnlockedDoors(Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.IsInLineOfSightIgnoreUnlockedDoors(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInLineOfSightIgnoreUnlockedDoors
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4454
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInLineOfSightIgnoreUnlockedDoors(Vector2 targetPosition)
    parameters:
    - id: targetPosition
      type: UnityEngine.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function IsInLineOfSightIgnoreUnlockedDoors(targetPosition As Vector2) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInLineOfSightIgnoreUnlockedDoors*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInLineOfSight(UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInLineOfSight(UnityEngine.Vector2)
  id: IsInLineOfSight(UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInLineOfSight(Vector2)
  nameWithType: Entity.IsInLineOfSight(Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.IsInLineOfSight(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInLineOfSight
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4462
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInLineOfSight(Vector2 targetPosition)
    parameters:
    - id: targetPosition
      type: UnityEngine.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function IsInLineOfSight(targetPosition As Vector2) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInLineOfSight*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsInLineOfSight(UnityEngine.Rect)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsInLineOfSight(UnityEngine.Rect)
  id: IsInLineOfSight(UnityEngine.Rect)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsInLineOfSight(Rect)
  nameWithType: Entity.IsInLineOfSight(Rect)
  fullName: Clay.Game.Mod.Entities.Entity.IsInLineOfSight(UnityEngine.Rect)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsInLineOfSight
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4470
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsInLineOfSight(Rect bounds)
    parameters:
    - id: bounds
      type: UnityEngine.Rect
    return:
      type: System.Boolean
    content.vb: Public Function IsInLineOfSight(bounds As Rect) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsInLineOfSight*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.Explode
  commentId: M:Clay.Game.Mod.Entities.Entity.Explode
  id: Explode
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Explode()
  nameWithType: Entity.Explode()
  fullName: Clay.Game.Mod.Entities.Entity.Explode()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Explode
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4491
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void Explode()
    content.vb: Public Overridable Sub Explode
  overload: Clay.Game.Mod.Entities.Entity.Explode*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.ExplodeOnTarget(Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.ExplodeOnTarget(Clay.Game.Mod.Entities.Entity)
  id: ExplodeOnTarget(Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ExplodeOnTarget(Entity)
  nameWithType: Entity.ExplodeOnTarget(Entity)
  fullName: Clay.Game.Mod.Entities.Entity.ExplodeOnTarget(Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ExplodeOnTarget
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4512
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void ExplodeOnTarget(Entity entity)
    parameters:
    - id: entity
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Sub ExplodeOnTarget(entity As Entity)
  overload: Clay.Game.Mod.Entities.Entity.ExplodeOnTarget*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.ExplodeOnTargetBranch(FloraBranch,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.ExplodeOnTargetBranch(FloraBranch,UnityEngine.Vector2,UnityEngine.Vector2)
  id: ExplodeOnTargetBranch(FloraBranch,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ExplodeOnTargetBranch(FloraBranch, Vector2, Vector2)
  nameWithType: Entity.ExplodeOnTargetBranch(FloraBranch, Vector2, Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.ExplodeOnTargetBranch(FloraBranch, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ExplodeOnTargetBranch
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4526
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void ExplodeOnTargetBranch(FloraBranch branch, Vector2 hitPosition, Vector2 hitDirection)
    parameters:
    - id: branch
      type: FloraBranch
    - id: hitPosition
      type: UnityEngine.Vector2
    - id: hitDirection
      type: UnityEngine.Vector2
    content.vb: Public Sub ExplodeOnTargetBranch(branch As FloraBranch, hitPosition As Vector2, hitDirection As Vector2)
  overload: Clay.Game.Mod.Entities.Entity.ExplodeOnTargetBranch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.DamagedBy(Clay.Game.Mod.Entities.Entity,System.Single,Weapon,System.Boolean,System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.DamagedBy(Clay.Game.Mod.Entities.Entity,System.Single,Weapon,System.Boolean,System.Boolean)
  id: DamagedBy(Clay.Game.Mod.Entities.Entity,System.Single,Weapon,System.Boolean,System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: DamagedBy(Entity, Single, Weapon, Boolean, Boolean)
  nameWithType: Entity.DamagedBy(Entity, Single, Weapon, Boolean, Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.DamagedBy(Clay.Game.Mod.Entities.Entity, System.Single, Weapon, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: DamagedBy
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4551
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  summary: "\nCall to inflict damage on this entity.\n"
  example: []
  syntax:
    content: public virtual bool DamagedBy(Entity attacker, float damage, Weapon weapon, bool effectHandled = false, bool fxHandled = false)
    parameters:
    - id: attacker
      type: Clay.Game.Mod.Entities.Entity
      description: The instigator of this damage
    - id: damage
      type: System.Single
      description: How much damage to apply
    - id: weapon
      type: Weapon
      description: The weapon that belongs to the attacker dealing this damage.
    - id: effectHandled
      type: System.Boolean
      description: If you are performing manual Effects, you should pass true to this method
    - id: fxHandled
      type: System.Boolean
      description: If you are performing manual FX, you should pass true to this method
    return:
      type: System.Boolean
      description: True if this method inflicts damage, False otherwise
    content.vb: Public Overridable Function DamagedBy(attacker As Entity, damage As Single, weapon As Weapon, effectHandled As Boolean = False, fxHandled As Boolean = False) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.DamagedBy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.WeakenedBy(Clay.Game.Mod.Entities.Entity,System.Single,Weapon,System.Boolean,System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.WeakenedBy(Clay.Game.Mod.Entities.Entity,System.Single,Weapon,System.Boolean,System.Boolean)
  id: WeakenedBy(Clay.Game.Mod.Entities.Entity,System.Single,Weapon,System.Boolean,System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: WeakenedBy(Entity, Single, Weapon, Boolean, Boolean)
  nameWithType: Entity.WeakenedBy(Entity, Single, Weapon, Boolean, Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.WeakenedBy(Clay.Game.Mod.Entities.Entity, System.Single, Weapon, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: WeakenedBy
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4612
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void WeakenedBy(Entity attacker, float amount, Weapon weapon, bool effectHandled = false, bool fxHandled = false)
    parameters:
    - id: attacker
      type: Clay.Game.Mod.Entities.Entity
    - id: amount
      type: System.Single
    - id: weapon
      type: Weapon
    - id: effectHandled
      type: System.Boolean
    - id: fxHandled
      type: System.Boolean
    content.vb: Public Overridable Sub WeakenedBy(attacker As Entity, amount As Single, weapon As Weapon, effectHandled As Boolean = False, fxHandled As Boolean = False)
  overload: Clay.Game.Mod.Entities.Entity.WeakenedBy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SuppressedBy(Clay.Game.Mod.Entities.Entity,System.Single,System.Boolean,System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.SuppressedBy(Clay.Game.Mod.Entities.Entity,System.Single,System.Boolean,System.Boolean)
  id: SuppressedBy(Clay.Game.Mod.Entities.Entity,System.Single,System.Boolean,System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SuppressedBy(Entity, Single, Boolean, Boolean)
  nameWithType: Entity.SuppressedBy(Entity, Single, Boolean, Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.SuppressedBy(Clay.Game.Mod.Entities.Entity, System.Single, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SuppressedBy
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4675
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void SuppressedBy(Entity attacker, float time, bool effectHandled = false, bool fxHandled = false)
    parameters:
    - id: attacker
      type: Clay.Game.Mod.Entities.Entity
    - id: time
      type: System.Single
    - id: effectHandled
      type: System.Boolean
    - id: fxHandled
      type: System.Boolean
    content.vb: Public Overridable Sub SuppressedBy(attacker As Entity, time As Single, effectHandled As Boolean = False, fxHandled As Boolean = False)
  overload: Clay.Game.Mod.Entities.Entity.SuppressedBy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.FrozenBy(Clay.Game.Mod.Entities.Entity,System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.FrozenBy(Clay.Game.Mod.Entities.Entity,System.Single)
  id: FrozenBy(Clay.Game.Mod.Entities.Entity,System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FrozenBy(Entity, Single)
  nameWithType: Entity.FrozenBy(Entity, Single)
  fullName: Clay.Game.Mod.Entities.Entity.FrozenBy(Clay.Game.Mod.Entities.Entity, System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FrozenBy
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4684
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void FrozenBy(Entity attacker, float damage)
    parameters:
    - id: attacker
      type: Clay.Game.Mod.Entities.Entity
    - id: damage
      type: System.Single
    content.vb: Public Sub FrozenBy(attacker As Entity, damage As Single)
  overload: Clay.Game.Mod.Entities.Entity.FrozenBy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.AttackedBy(Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.AttackedBy(Clay.Game.Mod.Entities.Entity)
  id: AttackedBy(Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: AttackedBy(Entity)
  nameWithType: Entity.AttackedBy(Entity)
  fullName: Clay.Game.Mod.Entities.Entity.AttackedBy(Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: AttackedBy
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4701
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void AttackedBy(Entity attacker)
    parameters:
    - id: attacker
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Sub AttackedBy(attacker As Entity)
  overload: Clay.Game.Mod.Entities.Entity.AttackedBy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.FloraAttackedBy(Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.FloraAttackedBy(Clay.Game.Mod.Entities.Entity)
  id: FloraAttackedBy(Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: FloraAttackedBy(Entity)
  nameWithType: Entity.FloraAttackedBy(Entity)
  fullName: Clay.Game.Mod.Entities.Entity.FloraAttackedBy(Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: FloraAttackedBy
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4727
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void FloraAttackedBy(Entity attacker)
    parameters:
    - id: attacker
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Sub FloraAttackedBy(attacker As Entity)
  overload: Clay.Game.Mod.Entities.Entity.FloraAttackedBy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.DieQuietly
  commentId: M:Clay.Game.Mod.Entities.Entity.DieQuietly
  id: DieQuietly
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: DieQuietly()
  nameWithType: Entity.DieQuietly()
  fullName: Clay.Game.Mod.Entities.Entity.DieQuietly()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: DieQuietly
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4736
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void DieQuietly()
    content.vb: Public Overridable Sub DieQuietly
  overload: Clay.Game.Mod.Entities.Entity.DieQuietly*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.OutOfHealth
  commentId: M:Clay.Game.Mod.Entities.Entity.OutOfHealth
  id: OutOfHealth
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: OutOfHealth()
  nameWithType: Entity.OutOfHealth()
  fullName: Clay.Game.Mod.Entities.Entity.OutOfHealth()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: OutOfHealth
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4741
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void OutOfHealth()
    content.vb: Public Overridable Sub OutOfHealth
  overload: Clay.Game.Mod.Entities.Entity.OutOfHealth*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.TimedDeath(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.TimedDeath(System.Single)
  id: TimedDeath(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: TimedDeath(Single)
  nameWithType: Entity.TimedDeath(Single)
  fullName: Clay.Game.Mod.Entities.Entity.TimedDeath(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: TimedDeath
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4746
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void TimedDeath(float delay)
    parameters:
    - id: delay
      type: System.Single
    content.vb: Public Sub TimedDeath(delay As Single)
  overload: Clay.Game.Mod.Entities.Entity.TimedDeath*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.Die(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.Die(System.Boolean,System.Boolean,System.Boolean)
  id: Die(System.Boolean,System.Boolean,System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: Die(Boolean, Boolean, Boolean)
  nameWithType: Entity.Die(Boolean, Boolean, Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.Die(System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: Die
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4755
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void Die(bool exploded = false, bool trash = true, bool quietly = false)
    parameters:
    - id: exploded
      type: System.Boolean
    - id: trash
      type: System.Boolean
    - id: quietly
      type: System.Boolean
    content.vb: Public Overridable Sub Die(exploded As Boolean = False, trash As Boolean = True, quietly As Boolean = False)
  overload: Clay.Game.Mod.Entities.Entity.Die*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.EnterStasis(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.EnterStasis(System.Single)
  id: EnterStasis(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: EnterStasis(Single)
  nameWithType: Entity.EnterStasis(Single)
  fullName: Clay.Game.Mod.Entities.Entity.EnterStasis(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: EnterStasis
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4831
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void EnterStasis(float time)
    parameters:
    - id: time
      type: System.Single
    content.vb: Public Sub EnterStasis(time As Single)
  overload: Clay.Game.Mod.Entities.Entity.EnterStasis*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.EnterSickness(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.EnterSickness(System.Single)
  id: EnterSickness(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: EnterSickness(Single)
  nameWithType: Entity.EnterSickness(Single)
  fullName: Clay.Game.Mod.Entities.Entity.EnterSickness(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: EnterSickness
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4837
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void EnterSickness(float time)
    parameters:
    - id: time
      type: System.Single
    content.vb: Public Sub EnterSickness(time As Single)
  overload: Clay.Game.Mod.Entities.Entity.EnterSickness*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.EnterFreeze(System.Single)
  commentId: M:Clay.Game.Mod.Entities.Entity.EnterFreeze(System.Single)
  id: EnterFreeze(System.Single)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: EnterFreeze(Single)
  nameWithType: Entity.EnterFreeze(Single)
  fullName: Clay.Game.Mod.Entities.Entity.EnterFreeze(System.Single)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: EnterFreeze
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4852
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void EnterFreeze(float time)
    parameters:
    - id: time
      type: System.Single
    content.vb: Public Sub EnterFreeze(time As Single)
  overload: Clay.Game.Mod.Entities.Entity.EnterFreeze*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SpreadSickness(Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.SpreadSickness(Clay.Game.Mod.Entities.Entity)
  id: SpreadSickness(Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SpreadSickness(Entity)
  nameWithType: Entity.SpreadSickness(Entity)
  fullName: Clay.Game.Mod.Entities.Entity.SpreadSickness(Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SpreadSickness
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4857
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SpreadSickness(Entity entity)
    parameters:
    - id: entity
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Sub SpreadSickness(entity As Entity)
  overload: Clay.Game.Mod.Entities.Entity.SpreadSickness*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsSicknessTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsSicknessTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  id: IsSicknessTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsSicknessTargetValidCB(Entity, Vector2)
  nameWithType: Entity.IsSicknessTargetValidCB(Entity, Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.IsSicknessTargetValidCB(Clay.Game.Mod.Entities.Entity, UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsSicknessTargetValidCB
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4862
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsSicknessTargetValidCB(Entity target, Vector2 sourcePosition)
    parameters:
    - id: target
      type: Clay.Game.Mod.Entities.Entity
    - id: sourcePosition
      type: UnityEngine.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function IsSicknessTargetValidCB(target As Entity, sourcePosition As Vector2) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsSicknessTargetValidCB*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsContactDamageTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  commentId: M:Clay.Game.Mod.Entities.Entity.IsContactDamageTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  id: IsContactDamageTargetValidCB(Clay.Game.Mod.Entities.Entity,UnityEngine.Vector2)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsContactDamageTargetValidCB(Entity, Vector2)
  nameWithType: Entity.IsContactDamageTargetValidCB(Entity, Vector2)
  fullName: Clay.Game.Mod.Entities.Entity.IsContactDamageTargetValidCB(Clay.Game.Mod.Entities.Entity, UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsContactDamageTargetValidCB
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4888
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsContactDamageTargetValidCB(Entity target, Vector2 sourcePosition)
    parameters:
    - id: target
      type: Clay.Game.Mod.Entities.Entity
    - id: sourcePosition
      type: UnityEngine.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function IsContactDamageTargetValidCB(target As Entity, sourcePosition As Vector2) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsContactDamageTargetValidCB*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.ParentFloraDied(System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.ParentFloraDied(System.Boolean)
  id: ParentFloraDied(System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ParentFloraDied(Boolean)
  nameWithType: Entity.ParentFloraDied(Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.ParentFloraDied(System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ParentFloraDied
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4893
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void ParentFloraDied(bool quietly = false)
    parameters:
    - id: quietly
      type: System.Boolean
    content.vb: Public Overridable Sub ParentFloraDied(quietly As Boolean = False)
  overload: Clay.Game.Mod.Entities.Entity.ParentFloraDied*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.ParentColonised
  commentId: M:Clay.Game.Mod.Entities.Entity.ParentColonised
  id: ParentColonised
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ParentColonised()
  nameWithType: Entity.ParentColonised()
  fullName: Clay.Game.Mod.Entities.Entity.ParentColonised()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ParentColonised
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4907
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void ParentColonised()
    content.vb: Public Overridable Sub ParentColonised
  overload: Clay.Game.Mod.Entities.Entity.ParentColonised*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.SetColony(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetColony(System.String)
  id: SetColony(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetColony(String)
  nameWithType: Entity.SetColony(String)
  fullName: Clay.Game.Mod.Entities.Entity.SetColony(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetColony
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4920
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetColony(string colonyName)
    parameters:
    - id: colonyName
      type: System.String
    content.vb: Public Sub SetColony(colonyName As String)
  overload: Clay.Game.Mod.Entities.Entity.SetColony*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SetColony(Colony)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetColony(Colony)
  id: SetColony(Colony)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetColony(Colony)
  nameWithType: Entity.SetColony(Colony)
  fullName: Clay.Game.Mod.Entities.Entity.SetColony(Colony)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetColony
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4929
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetColony(Colony colony)
    parameters:
    - id: colony
      type: Colony
    content.vb: Public Sub SetColony(colony As Colony)
  overload: Clay.Game.Mod.Entities.Entity.SetColony*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.OnEntityDiedOrTrashedListener(System.String,System.Object,System.Object,System.Object)
  commentId: M:Clay.Game.Mod.Entities.Entity.OnEntityDiedOrTrashedListener(System.String,System.Object,System.Object,System.Object)
  id: OnEntityDiedOrTrashedListener(System.String,System.Object,System.Object,System.Object)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: OnEntityDiedOrTrashedListener(String, Object, Object, Object)
  nameWithType: Entity.OnEntityDiedOrTrashedListener(String, Object, Object, Object)
  fullName: Clay.Game.Mod.Entities.Entity.OnEntityDiedOrTrashedListener(System.String, System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: OnEntityDiedOrTrashedListener
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4936
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected virtual void OnEntityDiedOrTrashedListener(string ev, object sender, object param1, object param2)
    parameters:
    - id: ev
      type: System.String
    - id: sender
      type: System.Object
    - id: param1
      type: System.Object
    - id: param2
      type: System.Object
    content.vb: Protected Overridable Sub OnEntityDiedOrTrashedListener(ev As String, sender As Object, param1 As Object, param2 As Object)
  overload: Clay.Game.Mod.Entities.Entity.OnEntityDiedOrTrashedListener*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.DropDeathEnergy
  commentId: M:Clay.Game.Mod.Entities.Entity.DropDeathEnergy
  id: DropDeathEnergy
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: DropDeathEnergy()
  nameWithType: Entity.DropDeathEnergy()
  fullName: Clay.Game.Mod.Entities.Entity.DropDeathEnergy()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: DropDeathEnergy
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4949
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: protected void DropDeathEnergy()
    content.vb: Protected Sub DropDeathEnergy
  overload: Clay.Game.Mod.Entities.Entity.DropDeathEnergy*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Clay.Game.Mod.Entities.Entity.PlaySfx(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.PlaySfx(System.String)
  id: PlaySfx(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: PlaySfx(String)
  nameWithType: Entity.PlaySfx(String)
  fullName: Clay.Game.Mod.Entities.Entity.PlaySfx(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: PlaySfx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4967
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public SoundVoice PlaySfx(string sfxName)
    parameters:
    - id: sfxName
      type: System.String
    return:
      type: Tuna.SoundVoice
    content.vb: Public Function PlaySfx(sfxName As String) As SoundVoice
  overload: Clay.Game.Mod.Entities.Entity.PlaySfx*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.PlayOrRetrySfx(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.PlayOrRetrySfx(System.String)
  id: PlayOrRetrySfx(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: PlayOrRetrySfx(String)
  nameWithType: Entity.PlayOrRetrySfx(String)
  fullName: Clay.Game.Mod.Entities.Entity.PlayOrRetrySfx(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: PlayOrRetrySfx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4973
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public SoundVoice PlayOrRetrySfx(string sfxName)
    parameters:
    - id: sfxName
      type: System.String
    return:
      type: Tuna.SoundVoice
    content.vb: Public Function PlayOrRetrySfx(sfxName As String) As SoundVoice
  overload: Clay.Game.Mod.Entities.Entity.PlayOrRetrySfx*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.StopSfx(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.StopSfx(System.String)
  id: StopSfx(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: StopSfx(String)
  nameWithType: Entity.StopSfx(String)
  fullName: Clay.Game.Mod.Entities.Entity.StopSfx(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: StopSfx
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4979
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void StopSfx(string sfxName)
    parameters:
    - id: sfxName
      type: System.String
    content.vb: Public Sub StopSfx(sfxName As String)
  overload: Clay.Game.Mod.Entities.Entity.StopSfx*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.StatRecord(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.StatRecord(System.String)
  id: StatRecord(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: StatRecord(String)
  nameWithType: Entity.StatRecord(String)
  fullName: Clay.Game.Mod.Entities.Entity.StatRecord(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: StatRecord
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4987
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void StatRecord(string s)
    parameters:
    - id: s
      type: System.String
    content.vb: Public Sub StatRecord(s As String)
  overload: Clay.Game.Mod.Entities.Entity.StatRecord*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.StatRecordLine(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.StatRecordLine(System.String)
  id: StatRecordLine(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: StatRecordLine(String)
  nameWithType: Entity.StatRecordLine(String)
  fullName: Clay.Game.Mod.Entities.Entity.StatRecordLine(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: StatRecordLine
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 4996
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void StatRecordLine(string s)
    parameters:
    - id: s
      type: System.String
    content.vb: Public Sub StatRecordLine(s As String)
  overload: Clay.Game.Mod.Entities.Entity.StatRecordLine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.StatRecordLine
  commentId: M:Clay.Game.Mod.Entities.Entity.StatRecordLine
  id: StatRecordLine
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: StatRecordLine()
  nameWithType: Entity.StatRecordLine()
  fullName: Clay.Game.Mod.Entities.Entity.StatRecordLine()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: StatRecordLine
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5005
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void StatRecordLine()
    content.vb: Public Sub StatRecordLine
  overload: Clay.Game.Mod.Entities.Entity.StatRecordLine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.StatRecord(System.String,System.Object[])
  commentId: M:Clay.Game.Mod.Entities.Entity.StatRecord(System.String,System.Object[])
  id: StatRecord(System.String,System.Object[])
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: StatRecord(String, Object[])
  nameWithType: Entity.StatRecord(String, Object[])
  fullName: Clay.Game.Mod.Entities.Entity.StatRecord(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: StatRecord
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5013
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void StatRecord(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub StatRecord(format As String, ParamArray args As Object())
  overload: Clay.Game.Mod.Entities.Entity.StatRecord*
  nameWithType.vb: Entity.StatRecord(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Clay.Game.Mod.Entities.Entity.StatRecord(System.String, System.Object())
  name.vb: StatRecord(String, Object())
- uid: Clay.Game.Mod.Entities.Entity.StatRecordLine(System.String,System.Object[])
  commentId: M:Clay.Game.Mod.Entities.Entity.StatRecordLine(System.String,System.Object[])
  id: StatRecordLine(System.String,System.Object[])
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: StatRecordLine(String, Object[])
  nameWithType: Entity.StatRecordLine(String, Object[])
  fullName: Clay.Game.Mod.Entities.Entity.StatRecordLine(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: StatRecordLine
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5022
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void StatRecordLine(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub StatRecordLine(format As String, ParamArray args As Object())
  overload: Clay.Game.Mod.Entities.Entity.StatRecordLine*
  nameWithType.vb: Entity.StatRecordLine(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Clay.Game.Mod.Entities.Entity.StatRecordLine(System.String, System.Object())
  name.vb: StatRecordLine(String, Object())
- uid: Clay.Game.Mod.Entities.Entity.StatsGetString
  commentId: M:Clay.Game.Mod.Entities.Entity.StatsGetString
  id: StatsGetString
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: StatsGetString()
  nameWithType: Entity.StatsGetString()
  fullName: Clay.Game.Mod.Entities.Entity.StatsGetString()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: StatsGetString
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5031
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public string StatsGetString()
    return:
      type: System.String
    content.vb: Public Function StatsGetString As String
  overload: Clay.Game.Mod.Entities.Entity.StatsGetString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.StatsClear
  commentId: M:Clay.Game.Mod.Entities.Entity.StatsClear
  id: StatsClear
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: StatsClear()
  nameWithType: Entity.StatsClear()
  fullName: Clay.Game.Mod.Entities.Entity.StatsClear()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: StatsClear
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5039
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void StatsClear()
    content.vb: Public Sub StatsClear
  overload: Clay.Game.Mod.Entities.Entity.StatsClear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IsSaveable
  commentId: M:Clay.Game.Mod.Entities.Entity.IsSaveable
  id: IsSaveable
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IsSaveable()
  nameWithType: Entity.IsSaveable()
  fullName: Clay.Game.Mod.Entities.Entity.IsSaveable()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IsSaveable
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5049
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public bool IsSaveable()
    return:
      type: System.Boolean
    content.vb: Public Function IsSaveable As Boolean
  overload: Clay.Game.Mod.Entities.Entity.IsSaveable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.SpawnEntityLua(System.String)
  commentId: M:Clay.Game.Mod.Entities.Entity.SpawnEntityLua(System.String)
  id: SpawnEntityLua(System.String)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SpawnEntityLua(String)
  nameWithType: Entity.SpawnEntityLua(String)
  fullName: Clay.Game.Mod.Entities.Entity.SpawnEntityLua(System.String)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SpawnEntityLua
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5060
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static Entity SpawnEntityLua(string parameters)
    parameters:
    - id: parameters
      type: System.String
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Shared Function SpawnEntityLua(parameters As String) As Entity
  overload: Clay.Game.Mod.Entities.Entity.SpawnEntityLua*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Clay.Game.Mod.Entities.Entity.SpawnEntity(System.String[],System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.SpawnEntity(System.String[],System.Boolean)
  id: SpawnEntity(System.String[],System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SpawnEntity(String[], Boolean)
  nameWithType: Entity.SpawnEntity(String[], Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.SpawnEntity(System.String[], System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SpawnEntity
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5068
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static Entity SpawnEntity(string[] parameters, bool internalCall = false)
    parameters:
    - id: parameters
      type: System.String[]
    - id: internalCall
      type: System.Boolean
    return:
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Shared Function SpawnEntity(parameters As String(), internalCall As Boolean = False) As Entity
  overload: Clay.Game.Mod.Entities.Entity.SpawnEntity*
  nameWithType.vb: Entity.SpawnEntity(String(), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Clay.Game.Mod.Entities.Entity.SpawnEntity(System.String(), System.Boolean)
  name.vb: SpawnEntity(String(), Boolean)
- uid: Clay.Game.Mod.Entities.Entity.ValidateSpawn(System.String[],System.String,Colony,Team,System.Boolean,System.String@,Clay.Game.Mod.Entities.RespawnRules)
  commentId: M:Clay.Game.Mod.Entities.Entity.ValidateSpawn(System.String[],System.String,Colony,Team,System.Boolean,System.String@,Clay.Game.Mod.Entities.RespawnRules)
  id: ValidateSpawn(System.String[],System.String,Colony,Team,System.Boolean,System.String@,Clay.Game.Mod.Entities.RespawnRules)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ValidateSpawn(String[], String, Colony, Team, Boolean, ref String, RespawnRules)
  nameWithType: Entity.ValidateSpawn(String[], String, Colony, Team, Boolean, ref String, RespawnRules)
  fullName: Clay.Game.Mod.Entities.Entity.ValidateSpawn(System.String[], System.String, Colony, Team, System.Boolean, ref System.String, Clay.Game.Mod.Entities.RespawnRules)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ValidateSpawn
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5344
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public static bool ValidateSpawn(string[] parameters, string type, Colony colony, Team team, bool colonyPosition, ref string spawnHash, RespawnRules respawnRule)
    parameters:
    - id: parameters
      type: System.String[]
    - id: type
      type: System.String
    - id: colony
      type: Colony
    - id: team
      type: Team
    - id: colonyPosition
      type: System.Boolean
    - id: spawnHash
      type: System.String
    - id: respawnRule
      type: Clay.Game.Mod.Entities.RespawnRules
    return:
      type: System.Boolean
    content.vb: Public Shared Function ValidateSpawn(parameters As String(), type As String, colony As Colony, team As Team, colonyPosition As Boolean, ByRef spawnHash As String, respawnRule As RespawnRules) As Boolean
  overload: Clay.Game.Mod.Entities.Entity.ValidateSpawn*
  nameWithType.vb: Entity.ValidateSpawn(String(), String, Colony, Team, Boolean, ByRef String, RespawnRules)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Clay.Game.Mod.Entities.Entity.ValidateSpawn(System.String(), System.String, Colony, Team, System.Boolean, ByRef System.String, Clay.Game.Mod.Entities.RespawnRules)
  name.vb: ValidateSpawn(String(), String, Colony, Team, Boolean, ByRef String, RespawnRules)
- uid: Clay.Game.Mod.Entities.Entity.SetAction(PreferredAiAction,UnityEngine.Vector2,System.Boolean,Clay.Game.Mod.Entities.Entity)
  commentId: M:Clay.Game.Mod.Entities.Entity.SetAction(PreferredAiAction,UnityEngine.Vector2,System.Boolean,Clay.Game.Mod.Entities.Entity)
  id: SetAction(PreferredAiAction,UnityEngine.Vector2,System.Boolean,Clay.Game.Mod.Entities.Entity)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: SetAction(PreferredAiAction, Vector2, Boolean, Entity)
  nameWithType: Entity.SetAction(PreferredAiAction, Vector2, Boolean, Entity)
  fullName: Clay.Game.Mod.Entities.Entity.SetAction(PreferredAiAction, UnityEngine.Vector2, System.Boolean, Clay.Game.Mod.Entities.Entity)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: SetAction
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5394
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void SetAction(PreferredAiAction action, Vector2 fromPosition, bool quietly, Entity target = null)
    parameters:
    - id: action
      type: PreferredAiAction
    - id: fromPosition
      type: UnityEngine.Vector2
    - id: quietly
      type: System.Boolean
    - id: target
      type: Clay.Game.Mod.Entities.Entity
    content.vb: Public Sub SetAction(action As PreferredAiAction, fromPosition As Vector2, quietly As Boolean, target As Entity = Nothing)
  overload: Clay.Game.Mod.Entities.Entity.SetAction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.PingFollowVisual
  commentId: M:Clay.Game.Mod.Entities.Entity.PingFollowVisual
  id: PingFollowVisual
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: PingFollowVisual()
  nameWithType: Entity.PingFollowVisual()
  fullName: Clay.Game.Mod.Entities.Entity.PingFollowVisual()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: PingFollowVisual
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5427
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void PingFollowVisual()
    content.vb: Public Sub PingFollowVisual
  overload: Clay.Game.Mod.Entities.Entity.PingFollowVisual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.IssueCommand(Clay.Game.CommandTypes,UnityEngine.Vector2,System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.IssueCommand(Clay.Game.CommandTypes,UnityEngine.Vector2,System.Boolean)
  id: IssueCommand(Clay.Game.CommandTypes,UnityEngine.Vector2,System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: IssueCommand(CommandTypes, Vector2, Boolean)
  nameWithType: Entity.IssueCommand(CommandTypes, Vector2, Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.IssueCommand(Clay.Game.CommandTypes, UnityEngine.Vector2, System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: IssueCommand
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5451
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public void IssueCommand(CommandTypes commandType, Vector2 fromPosition, bool quietly)
    parameters:
    - id: commandType
      type: Clay.Game.CommandTypes
    - id: fromPosition
      type: UnityEngine.Vector2
    - id: quietly
      type: System.Boolean
    content.vb: Public Sub IssueCommand(commandType As CommandTypes, fromPosition As Vector2, quietly As Boolean)
  overload: Clay.Game.Mod.Entities.Entity.IssueCommand*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Clay.Game.Mod.Entities.Entity.GetRespawnString
  commentId: M:Clay.Game.Mod.Entities.Entity.GetRespawnString
  id: GetRespawnString
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: GetRespawnString()
  nameWithType: Entity.GetRespawnString()
  fullName: Clay.Game.Mod.Entities.Entity.GetRespawnString()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: GetRespawnString
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5459
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual string GetRespawnString()
    return:
      type: System.String
    content.vb: Public Overridable Function GetRespawnString As String
  overload: Clay.Game.Mod.Entities.Entity.GetRespawnString*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.GetCommandLine(System.Boolean)
  commentId: M:Clay.Game.Mod.Entities.Entity.GetCommandLine(System.Boolean)
  id: GetCommandLine(System.Boolean)
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: GetCommandLine(Boolean)
  nameWithType: Entity.GetCommandLine(Boolean)
  fullName: Clay.Game.Mod.Entities.Entity.GetCommandLine(System.Boolean)
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: GetCommandLine
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5499
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual string GetCommandLine(bool multiLine)
    parameters:
    - id: multiLine
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Overridable Function GetCommandLine(multiLine As Boolean) As String
  overload: Clay.Game.Mod.Entities.Entity.GetCommandLine*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Clay.Game.Mod.Entities.Entity.ParentAwakened
  commentId: M:Clay.Game.Mod.Entities.Entity.ParentAwakened
  id: ParentAwakened
  parent: Clay.Game.Mod.Entities.Entity
  langs:
  - csharp
  - vb
  name: ParentAwakened()
  nameWithType: Entity.ParentAwakened()
  fullName: Clay.Game.Mod.Entities.Entity.ParentAwakened()
  type: Method
  source:
    remote:
      path: Solution/Clay.Game/Mod/Entities/Entity.cs
      branch: develop
      repo: git@github.com:sillytuna/eufloriarpg.git
    id: ParentAwakened
    path: ../../eufloriarpg/Solution/Clay.Game/Mod/Entities/Entity.cs
    startLine: 5538
  assemblies:
  - Clay.Game
  namespace: Clay.Game.Mod.Entities
  syntax:
    content: public virtual void ParentAwakened()
    content.vb: Public Overridable Sub ParentAwakened
  overload: Clay.Game.Mod.Entities.Entity.ParentAwakened*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Clay.Game.Mod.Entities
  commentId: N:Clay.Game.Mod.Entities
  name: Clay.Game.Mod.Entities
  nameWithType: Clay.Game.Mod.Entities
  fullName: Clay.Game.Mod.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Tuna.Mob
  commentId: T:Tuna.Mob
  parent: Tuna
  name: Mob
  nameWithType: Mob
  fullName: Tuna.Mob
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tuna
  commentId: N:Tuna
  name: Tuna
  nameWithType: Tuna
  fullName: Tuna
- uid: Clay.Game.Mod.Entities.Entity.terraformEnergyDropRange*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.terraformEnergyDropRange
  name: terraformEnergyDropRange
  nameWithType: Entity.terraformEnergyDropRange
  fullName: Clay.Game.Mod.Entities.Entity.terraformEnergyDropRange
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Clay.Game.Mod.Entities.Entity.attributeRecoveryRate*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.attributeRecoveryRate
  name: attributeRecoveryRate
  nameWithType: Entity.attributeRecoveryRate
  fullName: Clay.Game.Mod.Entities.Entity.attributeRecoveryRate
- uid: Clay.Game.Mod.Entities.Entity.collisionResponseMinSpeed*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.collisionResponseMinSpeed
  name: collisionResponseMinSpeed
  nameWithType: Entity.collisionResponseMinSpeed
  fullName: Clay.Game.Mod.Entities.Entity.collisionResponseMinSpeed
- uid: Clay.Game.Mod.Entities.Entity.collisionResponseSpeedMultiplier*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.collisionResponseSpeedMultiplier
  name: collisionResponseSpeedMultiplier
  nameWithType: Entity.collisionResponseSpeedMultiplier
  fullName: Clay.Game.Mod.Entities.Entity.collisionResponseSpeedMultiplier
- uid: Clay.Game.Mod.Entities.Entity.damageProportionForMaxParticles*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.damageProportionForMaxParticles
  name: damageProportionForMaxParticles
  nameWithType: Entity.damageProportionForMaxParticles
  fullName: Clay.Game.Mod.Entities.Entity.damageProportionForMaxParticles
- uid: Clay.Game.Mod.Entities.Entity.damageParticleCountMultiRange*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.damageParticleCountMultiRange
  name: damageParticleCountMultiRange
  nameWithType: Entity.damageParticleCountMultiRange
  fullName: Clay.Game.Mod.Entities.Entity.damageParticleCountMultiRange
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Clay.Game.Mod.Entities.Entity.beamParticleProbability*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.beamParticleProbability
  name: beamParticleProbability
  nameWithType: Entity.beamParticleProbability
  fullName: Clay.Game.Mod.Entities.Entity.beamParticleProbability
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Clay.Game.Mod.Entities.Entity.sicknessRange*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.sicknessRange
  name: sicknessRange
  nameWithType: Entity.sicknessRange
  fullName: Clay.Game.Mod.Entities.Entity.sicknessRange
- uid: Clay.Game.Mod.Entities.Entity.sicknessSpeedMultiplier*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.sicknessSpeedMultiplier
  name: sicknessSpeedMultiplier
  nameWithType: Entity.sicknessSpeedMultiplier
  fullName: Clay.Game.Mod.Entities.Entity.sicknessSpeedMultiplier
- uid: Clay.Game.Mod.Entities.Entity.offScreenAITimerMultiplier*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.offScreenAITimerMultiplier
  name: offScreenAITimerMultiplier
  nameWithType: Entity.offScreenAITimerMultiplier
  fullName: Clay.Game.Mod.Entities.Entity.offScreenAITimerMultiplier
- uid: Clay.Game.Mod.Entities.Entity._entityFlags*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._entityFlags
  name: _entityFlags
  nameWithType: Entity._entityFlags
  fullName: Clay.Game.Mod.Entities.Entity._entityFlags
- uid: Clay.Game.Mod.Entities.EntityFlags
  commentId: T:Clay.Game.Mod.Entities.EntityFlags
  parent: Clay.Game.Mod.Entities
  name: EntityFlags
  nameWithType: EntityFlags
  fullName: Clay.Game.Mod.Entities.EntityFlags
- uid: Clay.Game.Mod.Entities.Entity._sprite*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._sprite
  name: _sprite
  nameWithType: Entity._sprite
  fullName: Clay.Game.Mod.Entities.Entity._sprite
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Clay.Game.Mod.Entities.Entity._speedPowerRule*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._speedPowerRule
  name: _speedPowerRule
  nameWithType: Entity._speedPowerRule
  fullName: Clay.Game.Mod.Entities.Entity._speedPowerRule
- uid: Framework.Utils.PowerRule
  commentId: T:Framework.Utils.PowerRule
  parent: Framework.Utils
  name: PowerRule
  nameWithType: PowerRule
  fullName: Framework.Utils.PowerRule
- uid: Framework.Utils
  commentId: N:Framework.Utils
  name: Framework.Utils
  nameWithType: Framework.Utils
  fullName: Framework.Utils
- uid: Clay.Game.Mod.Entities.Entity._viewRangePowerRule*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._viewRangePowerRule
  name: _viewRangePowerRule
  nameWithType: Entity._viewRangePowerRule
  fullName: Clay.Game.Mod.Entities.Entity._viewRangePowerRule
- uid: Clay.Game.Mod.Entities.Entity._fieldOfView*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._fieldOfView
  name: _fieldOfView
  nameWithType: Entity._fieldOfView
  fullName: Clay.Game.Mod.Entities.Entity._fieldOfView
- uid: Clay.Game.Mod.Entities.Entity._scale*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._scale
  name: _scale
  nameWithType: Entity._scale
  fullName: Clay.Game.Mod.Entities.Entity._scale
- uid: Clay.Game.Mod.Entities.Entity._collisionRadius*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._collisionRadius
  name: _collisionRadius
  nameWithType: Entity._collisionRadius
  fullName: Clay.Game.Mod.Entities.Entity._collisionRadius
- uid: Clay.Game.Mod.Entities.Entity._speechBubblePreScaleRadius*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._speechBubblePreScaleRadius
  name: _speechBubblePreScaleRadius
  nameWithType: Entity._speechBubblePreScaleRadius
  fullName: Clay.Game.Mod.Entities.Entity._speechBubblePreScaleRadius
- uid: Clay.Game.Mod.Entities.Entity._uiPreScaleRadius*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._uiPreScaleRadius
  name: _uiPreScaleRadius
  nameWithType: Entity._uiPreScaleRadius
  fullName: Clay.Game.Mod.Entities.Entity._uiPreScaleRadius
- uid: Clay.Game.Mod.Entities.Entity._stateMachine*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._stateMachine
  name: _stateMachine
  nameWithType: Entity._stateMachine
  fullName: Clay.Game.Mod.Entities.Entity._stateMachine
- uid: Clay.Game.Mod.Entities.Entity._thinkTimer*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._thinkTimer
  name: _thinkTimer
  nameWithType: Entity._thinkTimer
  fullName: Clay.Game.Mod.Entities.Entity._thinkTimer
- uid: Clay.Game.Mod.Entities.Entity._targets*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._targets
  name: _targets
  nameWithType: Entity._targets
  fullName: Clay.Game.Mod.Entities.Entity._targets
- uid: Targets
  commentId: T:Targets
  name: Targets
  nameWithType: Targets
  fullName: Targets
- uid: Clay.Game.Mod.Entities.Entity._maxGroupSize*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._maxGroupSize
  name: _maxGroupSize
  nameWithType: Entity._maxGroupSize
  fullName: Clay.Game.Mod.Entities.Entity._maxGroupSize
- uid: Clay.Game.Mod.Entities.Entity._healthRegenRate*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._healthRegenRate
  name: _healthRegenRate
  nameWithType: Entity._healthRegenRate
  fullName: Clay.Game.Mod.Entities.Entity._healthRegenRate
- uid: Clay.Game.Mod.Entities.Entity._healthPowerRule*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._healthPowerRule
  name: _healthPowerRule
  nameWithType: Entity._healthPowerRule
  fullName: Clay.Game.Mod.Entities.Entity._healthPowerRule
- uid: Clay.Game.Mod.Entities.Entity._terraformEnergyPowerRule*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._terraformEnergyPowerRule
  name: _terraformEnergyPowerRule
  nameWithType: Entity._terraformEnergyPowerRule
  fullName: Clay.Game.Mod.Entities.Entity._terraformEnergyPowerRule
- uid: Clay.Game.Mod.Entities.Entity._contactDamageAmount*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._contactDamageAmount
  name: _contactDamageAmount
  nameWithType: Entity._contactDamageAmount
  fullName: Clay.Game.Mod.Entities.Entity._contactDamageAmount
- uid: Clay.Game.Mod.Entities.Entity.PreferredAiAction*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.PreferredAiAction
  name: PreferredAiAction
  nameWithType: Entity.PreferredAiAction
  fullName: Clay.Game.Mod.Entities.Entity.PreferredAiAction
- uid: PreferredAiAction
  commentId: T:PreferredAiAction
  name: PreferredAiAction
  nameWithType: PreferredAiAction
  fullName: PreferredAiAction
- uid: Clay.Game.Mod.Entities.Entity._explosive*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._explosive
  name: _explosive
  nameWithType: Entity._explosive
  fullName: Clay.Game.Mod.Entities.Entity._explosive
- uid: Explosive
  commentId: T:Explosive
  name: Explosive
  nameWithType: Explosive
  fullName: Explosive
- uid: Clay.Game.Mod.Entities.Entity._hardPoint1*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._hardPoint1
  name: _hardPoint1
  nameWithType: Entity._hardPoint1
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint1
- uid: HardPoint
  commentId: T:HardPoint
  name: HardPoint
  nameWithType: HardPoint
  fullName: HardPoint
- uid: Clay.Game.Mod.Entities.Entity._hardPoint2*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._hardPoint2
  name: _hardPoint2
  nameWithType: Entity._hardPoint2
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint2
- uid: Clay.Game.Mod.Entities.Entity._hardPoint3*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._hardPoint3
  name: _hardPoint3
  nameWithType: Entity._hardPoint3
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint3
- uid: Clay.Game.Mod.Entities.Entity._hardPoint4*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._hardPoint4
  name: _hardPoint4
  nameWithType: Entity._hardPoint4
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint4
- uid: Clay.Game.Mod.Entities.Entity._hardPoint5*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._hardPoint5
  name: _hardPoint5
  nameWithType: Entity._hardPoint5
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint5
- uid: Clay.Game.Mod.Entities.Entity._hardPoint6*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._hardPoint6
  name: _hardPoint6
  nameWithType: Entity._hardPoint6
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint6
- uid: Clay.Game.Mod.Entities.Entity._hardPoint7*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._hardPoint7
  name: _hardPoint7
  nameWithType: Entity._hardPoint7
  fullName: Clay.Game.Mod.Entities.Entity._hardPoint7
- uid: Clay.Game.Mod.Entities.Entity._maxSpeedInterpolator*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._maxSpeedInterpolator
  name: _maxSpeedInterpolator
  nameWithType: Entity._maxSpeedInterpolator
  fullName: Clay.Game.Mod.Entities.Entity._maxSpeedInterpolator
- uid: SpeedInterpolator
  commentId: T:SpeedInterpolator
  name: SpeedInterpolator
  nameWithType: SpeedInterpolator
  fullName: SpeedInterpolator
- uid: Clay.Game.Mod.Entities.Entity._detonator*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._detonator
  name: _detonator
  nameWithType: Entity._detonator
  fullName: Clay.Game.Mod.Entities.Entity._detonator
- uid: Detonator
  commentId: T:Detonator
  name: Detonator
  nameWithType: Detonator
  fullName: Detonator
- uid: Clay.Game.Mod.Entities.Entity._damagedFx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._damagedFx
  name: _damagedFx
  nameWithType: Entity._damagedFx
  fullName: Clay.Game.Mod.Entities.Entity._damagedFx
- uid: Clay.Game.Mod.Entities.Entity._weakenedFx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._weakenedFx
  name: _weakenedFx
  nameWithType: Entity._weakenedFx
  fullName: Clay.Game.Mod.Entities.Entity._weakenedFx
- uid: Clay.Game.Mod.Entities.Entity._stasisFx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._stasisFx
  name: _stasisFx
  nameWithType: Entity._stasisFx
  fullName: Clay.Game.Mod.Entities.Entity._stasisFx
- uid: Clay.Game.Mod.Entities.Entity._freezeFx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._freezeFx
  name: _freezeFx
  nameWithType: Entity._freezeFx
  fullName: Clay.Game.Mod.Entities.Entity._freezeFx
- uid: Clay.Game.Mod.Entities.Entity._sicknessFx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._sicknessFx
  name: _sicknessFx
  nameWithType: Entity._sicknessFx
  fullName: Clay.Game.Mod.Entities.Entity._sicknessFx
- uid: Clay.Game.Mod.Entities.Entity._destroyedFx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._destroyedFx
  name: _destroyedFx
  nameWithType: Entity._destroyedFx
  fullName: Clay.Game.Mod.Entities.Entity._destroyedFx
- uid: Clay.Game.Mod.Entities.Entity._deathSfx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._deathSfx
  name: _deathSfx
  nameWithType: Entity._deathSfx
  fullName: Clay.Game.Mod.Entities.Entity._deathSfx
- uid: Clay.Game.Mod.Entities.Entity._onActivateHandlers*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._onActivateHandlers
  name: _onActivateHandlers
  nameWithType: Entity._onActivateHandlers
  fullName: Clay.Game.Mod.Entities.Entity._onActivateHandlers
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Clay.Game.Mod.Entities.Entity._onUpdateHandlers*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._onUpdateHandlers
  name: _onUpdateHandlers
  nameWithType: Entity._onUpdateHandlers
  fullName: Clay.Game.Mod.Entities.Entity._onUpdateHandlers
- uid: Clay.Game.Mod.Entities.Entity._onAnimateHandlers*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._onAnimateHandlers
  name: _onAnimateHandlers
  nameWithType: Entity._onAnimateHandlers
  fullName: Clay.Game.Mod.Entities.Entity._onAnimateHandlers
- uid: Clay.Game.Mod.Entities.Entity._onDeathHandlers*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._onDeathHandlers
  name: _onDeathHandlers
  nameWithType: Entity._onDeathHandlers
  fullName: Clay.Game.Mod.Entities.Entity._onDeathHandlers
- uid: Clay.Game.Mod.Entities.Entity._onCleanUpHandlers*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._onCleanUpHandlers
  name: _onCleanUpHandlers
  nameWithType: Entity._onCleanUpHandlers
  fullName: Clay.Game.Mod.Entities.Entity._onCleanUpHandlers
- uid: Clay.Game.Mod.Entities.Entity._eufloripediaKey*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._eufloripediaKey
  name: _eufloripediaKey
  nameWithType: Entity._eufloripediaKey
  fullName: Clay.Game.Mod.Entities.Entity._eufloripediaKey
- uid: Clay.Game.Mod.Entities.Entity._worldObjectAvatar*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._worldObjectAvatar
  name: _worldObjectAvatar
  nameWithType: Entity._worldObjectAvatar
  fullName: Clay.Game.Mod.Entities.Entity._worldObjectAvatar
- uid: Clay.Game.Mod.Entities.Entity._useSpriteWithAvatar*
  commentId: Overload:Clay.Game.Mod.Entities.Entity._useSpriteWithAvatar
  name: _useSpriteWithAvatar
  nameWithType: Entity._useSpriteWithAvatar
  fullName: Clay.Game.Mod.Entities.Entity._useSpriteWithAvatar
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Clay.Game.Mod.Entities.Entity.TargetablePosition*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.TargetablePosition
  name: TargetablePosition
  nameWithType: Entity.TargetablePosition
  fullName: Clay.Game.Mod.Entities.Entity.TargetablePosition
- uid: Clay.Game.Mod.Entities.Entity.TargetableRect*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.TargetableRect
  name: TargetableRect
  nameWithType: Entity.TargetableRect
  fullName: Clay.Game.Mod.Entities.Entity.TargetableRect
- uid: System.Nullable{UnityEngine.Rect}
  commentId: T:System.Nullable{UnityEngine.Rect}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Rect>
  nameWithType: Nullable<Rect>
  fullName: System.Nullable<UnityEngine.Rect>
  nameWithType.vb: Nullable(Of Rect)
  fullName.vb: System.Nullable(Of UnityEngine.Rect)
  name.vb: Nullable(Of Rect)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Rect
    name: Rect
    nameWithType: Rect
    fullName: UnityEngine.Rect
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Rect
    name: Rect
    nameWithType: Rect
    fullName: UnityEngine.Rect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Attributes
  commentId: T:Attributes
  name: Attributes
  nameWithType: Attributes
  fullName: Attributes
- uid: Clay.Game.WorldObjectSystem.WorldObject
  commentId: T:Clay.Game.WorldObjectSystem.WorldObject
  parent: Clay.Game.WorldObjectSystem
  name: WorldObject
  nameWithType: WorldObject
  fullName: Clay.Game.WorldObjectSystem.WorldObject
- uid: Clay.Game.WorldObjectSystem
  commentId: N:Clay.Game.WorldObjectSystem
  name: Clay.Game.WorldObjectSystem
  nameWithType: Clay.Game.WorldObjectSystem
  fullName: Clay.Game.WorldObjectSystem
- uid: Clay.Game.Components.EntityAvatar
  commentId: T:Clay.Game.Components.EntityAvatar
  parent: Clay.Game.Components
  name: EntityAvatar
  nameWithType: EntityAvatar
  fullName: Clay.Game.Components.EntityAvatar
- uid: Clay.Game.Components
  commentId: N:Clay.Game.Components
  name: Clay.Game.Components
  nameWithType: Clay.Game.Components
  fullName: Clay.Game.Components
- uid: System.Collections.Generic.List{Tuna.ScriptHandler}
  commentId: T:System.Collections.Generic.List{Tuna.ScriptHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ScriptHandler>
  nameWithType: List<ScriptHandler>
  fullName: System.Collections.Generic.List<Tuna.ScriptHandler>
  nameWithType.vb: List(Of ScriptHandler)
  fullName.vb: System.Collections.Generic.List(Of Tuna.ScriptHandler)
  name.vb: List(Of ScriptHandler)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tuna.ScriptHandler
    name: ScriptHandler
    nameWithType: ScriptHandler
    fullName: Tuna.ScriptHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tuna.ScriptHandler
    name: ScriptHandler
    nameWithType: ScriptHandler
    fullName: Tuna.ScriptHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Clay.Game.Mod.Entities.Entity.normalizedFreeze*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.normalizedFreeze
  name: normalizedFreeze
  nameWithType: Entity.normalizedFreeze
  fullName: Clay.Game.Mod.Entities.Entity.normalizedFreeze
- uid: Clay.Game.Mod.Entities.Entity.entityRenderCount*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.entityRenderCount
  name: entityRenderCount
  nameWithType: Entity.entityRenderCount
  fullName: Clay.Game.Mod.Entities.Entity.entityRenderCount
- uid: Clay.Game.Mod.Entities.Entity.useSpawnEntityCommand*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.useSpawnEntityCommand
  name: useSpawnEntityCommand
  nameWithType: Entity.useSpawnEntityCommand
  fullName: Clay.Game.Mod.Entities.Entity.useSpawnEntityCommand
- uid: Clay.Game.Mod.Entities.Entity.otherRepawnParams*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.otherRepawnParams
  name: otherRepawnParams
  nameWithType: Entity.otherRepawnParams
  fullName: Clay.Game.Mod.Entities.Entity.otherRepawnParams
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.canResurrect*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.canResurrect
  name: canResurrect
  nameWithType: Entity.canResurrect
  fullName: Clay.Game.Mod.Entities.Entity.canResurrect
- uid: Clay.Game.Mod.Entities.Entity.isResurrected*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isResurrected
  name: isResurrected
  nameWithType: Entity.isResurrected
  fullName: Clay.Game.Mod.Entities.Entity.isResurrected
- uid: Clay.Game.Mod.Entities.Entity.isSpawnedByLevel*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isSpawnedByLevel
  name: isSpawnedByLevel
  nameWithType: Entity.isSpawnedByLevel
  fullName: Clay.Game.Mod.Entities.Entity.isSpawnedByLevel
- uid: Clay.Game.Mod.Entities.Entity.spawnHash*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.spawnHash
  name: spawnHash
  nameWithType: Entity.spawnHash
  fullName: Clay.Game.Mod.Entities.Entity.spawnHash
- uid: Clay.Game.Mod.Entities.Entity.team*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.team
  name: team
  nameWithType: Entity.team
  fullName: Clay.Game.Mod.Entities.Entity.team
- uid: Team
  commentId: T:Team
  name: Team
  nameWithType: Team
  fullName: Team
- uid: Clay.Game.Mod.Entities.Entity.palette*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.palette
  name: palette
  nameWithType: Entity.palette
  fullName: Clay.Game.Mod.Entities.Entity.palette
- uid: Tuna.Palette
  commentId: T:Tuna.Palette
  parent: Tuna
  name: Palette
  nameWithType: Palette
  fullName: Tuna.Palette
- uid: Clay.Game.Mod.Entities.Entity.colours*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.colours
  name: colours
  nameWithType: Entity.colours
  fullName: Clay.Game.Mod.Entities.Entity.colours
- uid: UnityEngine.Color[]
  isExternal: true
  name: Color[]
  nameWithType: Color[]
  fullName: UnityEngine.Color[]
  nameWithType.vb: Color()
  fullName.vb: UnityEngine.Color()
  name.vb: Color()
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    nameWithType: Color
    fullName: UnityEngine.Color
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Clay.Game.Mod.Entities.Entity.attributes*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.attributes
  name: attributes
  nameWithType: Entity.attributes
  fullName: Clay.Game.Mod.Entities.Entity.attributes
- uid: Clay.Game.Mod.Entities.Entity.isMorphingAttributes*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isMorphingAttributes
  name: isMorphingAttributes
  nameWithType: Entity.isMorphingAttributes
  fullName: Clay.Game.Mod.Entities.Entity.isMorphingAttributes
- uid: Clay.Game.Mod.Entities.Entity.customisedAttributes*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.customisedAttributes
  name: customisedAttributes
  nameWithType: Entity.customisedAttributes
  fullName: Clay.Game.Mod.Entities.Entity.customisedAttributes
- uid: Clay.Game.Mod.Entities.Entity.respawnRule*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.respawnRule
  name: respawnRule
  nameWithType: Entity.respawnRule
  fullName: Clay.Game.Mod.Entities.Entity.respawnRule
- uid: Clay.Game.Mod.Entities.RespawnRules
  commentId: T:Clay.Game.Mod.Entities.RespawnRules
  parent: Clay.Game.Mod.Entities
  name: RespawnRules
  nameWithType: RespawnRules
  fullName: Clay.Game.Mod.Entities.RespawnRules
- uid: Clay.Game.Mod.Entities.Entity.parentFlora*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.parentFlora
  name: parentFlora
  nameWithType: Entity.parentFlora
  fullName: Clay.Game.Mod.Entities.Entity.parentFlora
- uid: Clay.Game.Mod.Entities.Flora
  commentId: T:Clay.Game.Mod.Entities.Flora
  parent: Clay.Game.Mod.Entities
  name: Flora
  nameWithType: Flora
  fullName: Clay.Game.Mod.Entities.Flora
- uid: Clay.Game.Mod.Entities.Entity.parentColony*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.parentColony
  name: parentColony
  nameWithType: Entity.parentColony
  fullName: Clay.Game.Mod.Entities.Entity.parentColony
- uid: Colony
  commentId: T:Colony
  name: Colony
  nameWithType: Colony
  fullName: Colony
- uid: Clay.Game.Mod.Entities.Entity.aiGroup*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.aiGroup
  name: aiGroup
  nameWithType: Entity.aiGroup
  fullName: Clay.Game.Mod.Entities.Entity.aiGroup
- uid: AIGroup
  commentId: T:AIGroup
  name: AIGroup
  nameWithType: AIGroup
  fullName: AIGroup
- uid: Clay.Game.Mod.Entities.Entity.spriteName*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.spriteName
  name: spriteName
  nameWithType: Entity.spriteName
  fullName: Clay.Game.Mod.Entities.Entity.spriteName
- uid: Clay.Game.Mod.Entities.Entity.spriteDef*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.spriteDef
  name: spriteDef
  nameWithType: Entity.spriteDef
  fullName: Clay.Game.Mod.Entities.Entity.spriteDef
- uid: Tuna.SpriteDef
  commentId: T:Tuna.SpriteDef
  parent: Tuna
  name: SpriteDef
  nameWithType: SpriteDef
  fullName: Tuna.SpriteDef
- uid: Clay.Game.Mod.Entities.Entity.spriteInstance*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.spriteInstance
  name: spriteInstance
  nameWithType: Entity.spriteInstance
  fullName: Clay.Game.Mod.Entities.Entity.spriteInstance
- uid: Tuna.SpriteInstance
  commentId: T:Tuna.SpriteInstance
  parent: Tuna
  name: SpriteInstance
  nameWithType: SpriteInstance
  fullName: Tuna.SpriteInstance
- uid: Clay.Game.Mod.Entities.Entity.alpha*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.alpha
  name: alpha
  nameWithType: Entity.alpha
  fullName: Clay.Game.Mod.Entities.Entity.alpha
- uid: Clay.Game.Mod.Entities.Entity.spriteInstanceDirty*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.spriteInstanceDirty
  name: spriteInstanceDirty
  nameWithType: Entity.spriteInstanceDirty
  fullName: Clay.Game.Mod.Entities.Entity.spriteInstanceDirty
- uid: Clay.Game.Mod.Entities.Entity.boundingRegionDirty*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.boundingRegionDirty
  name: boundingRegionDirty
  nameWithType: Entity.boundingRegionDirty
  fullName: Clay.Game.Mod.Entities.Entity.boundingRegionDirty
- uid: Clay.Game.Mod.Entities.Entity.radarTarget*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.radarTarget
  name: radarTarget
  nameWithType: Entity.radarTarget
  fullName: Clay.Game.Mod.Entities.Entity.radarTarget
- uid: RadarTarget
  commentId: T:RadarTarget
  name: RadarTarget
  nameWithType: RadarTarget
  fullName: RadarTarget
- uid: Clay.Game.Mod.Entities.Entity.maxSpeed*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.maxSpeed
  name: maxSpeed
  nameWithType: Entity.maxSpeed
  fullName: Clay.Game.Mod.Entities.Entity.maxSpeed
- uid: Clay.Game.Mod.Entities.Entity.position*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.position
  name: position
  nameWithType: Entity.position
  fullName: Clay.Game.Mod.Entities.Entity.position
- uid: Clay.Game.Mod.Entities.Entity.sensibleAiPosition*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.sensibleAiPosition
  name: sensibleAiPosition
  nameWithType: Entity.sensibleAiPosition
  fullName: Clay.Game.Mod.Entities.Entity.sensibleAiPosition
- uid: Clay.Game.Mod.Entities.Entity.velocity*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.velocity
  name: velocity
  nameWithType: Entity.velocity
  fullName: Clay.Game.Mod.Entities.Entity.velocity
- uid: Clay.Game.Mod.Entities.Entity.rotation*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.rotation
  name: rotation
  nameWithType: Entity.rotation
  fullName: Clay.Game.Mod.Entities.Entity.rotation
- uid: Clay.Game.Mod.Entities.Entity.scale*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.scale
  name: scale
  nameWithType: Entity.scale
  fullName: Clay.Game.Mod.Entities.Entity.scale
- uid: Clay.Game.Mod.Entities.Entity.lastPosition*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.lastPosition
  name: lastPosition
  nameWithType: Entity.lastPosition
  fullName: Clay.Game.Mod.Entities.Entity.lastPosition
- uid: Clay.Game.Mod.Entities.Entity.speed*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.speed
  name: speed
  nameWithType: Entity.speed
  fullName: Clay.Game.Mod.Entities.Entity.speed
- uid: Clay.Game.Mod.Entities.Entity.px*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.px
  name: px
  nameWithType: Entity.px
  fullName: Clay.Game.Mod.Entities.Entity.px
- uid: Clay.Game.Mod.Entities.Entity.py*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.py
  name: py
  nameWithType: Entity.py
  fullName: Clay.Game.Mod.Entities.Entity.py
- uid: Clay.Game.Mod.Entities.Entity.vx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.vx
  name: vx
  nameWithType: Entity.vx
  fullName: Clay.Game.Mod.Entities.Entity.vx
- uid: Clay.Game.Mod.Entities.Entity.vy*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.vy
  name: vy
  nameWithType: Entity.vy
  fullName: Clay.Game.Mod.Entities.Entity.vy
- uid: Clay.Game.Mod.Entities.Entity.viewRange*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.viewRange
  name: viewRange
  nameWithType: Entity.viewRange
  fullName: Clay.Game.Mod.Entities.Entity.viewRange
- uid: Clay.Game.Mod.Entities.Entity.hasFieldOfView*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.hasFieldOfView
  name: hasFieldOfView
  nameWithType: Entity.hasFieldOfView
  fullName: Clay.Game.Mod.Entities.Entity.hasFieldOfView
- uid: Clay.Game.Mod.Entities.Entity.cosHalfFieldOfView*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.cosHalfFieldOfView
  name: cosHalfFieldOfView
  nameWithType: Entity.cosHalfFieldOfView
  fullName: Clay.Game.Mod.Entities.Entity.cosHalfFieldOfView
- uid: Clay.Game.Mod.Entities.Entity.radius*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.radius
  name: radius
  nameWithType: Entity.radius
  fullName: Clay.Game.Mod.Entities.Entity.radius
- uid: Clay.Game.Mod.Entities.Entity.clipRadius*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.clipRadius
  name: clipRadius
  nameWithType: Entity.clipRadius
  fullName: Clay.Game.Mod.Entities.Entity.clipRadius
- uid: Clay.Game.Mod.Entities.Entity.speechBubbleRadius*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.speechBubbleRadius
  name: speechBubbleRadius
  nameWithType: Entity.speechBubbleRadius
  fullName: Clay.Game.Mod.Entities.Entity.speechBubbleRadius
- uid: Clay.Game.Mod.Entities.Entity.uiRadius*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.uiRadius
  name: uiRadius
  nameWithType: Entity.uiRadius
  fullName: Clay.Game.Mod.Entities.Entity.uiRadius
- uid: Clay.Game.Mod.Entities.Entity.clipRegion*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.clipRegion
  name: clipRegion
  nameWithType: Entity.clipRegion
  fullName: Clay.Game.Mod.Entities.Entity.clipRegion
- uid: Tuna.CenteredAxisAlignedBox
  commentId: T:Tuna.CenteredAxisAlignedBox
  parent: Tuna
  name: CenteredAxisAlignedBox
  nameWithType: CenteredAxisAlignedBox
  fullName: Tuna.CenteredAxisAlignedBox
- uid: Clay.Game.Mod.Entities.Entity.collisionRegion*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.collisionRegion
  name: collisionRegion
  nameWithType: Entity.collisionRegion
  fullName: Clay.Game.Mod.Entities.Entity.collisionRegion
- uid: Tuna.CenteredCircle
  commentId: T:Tuna.CenteredCircle
  parent: Tuna
  name: CenteredCircle
  nameWithType: CenteredCircle
  fullName: Tuna.CenteredCircle
- uid: Clay.Game.Mod.Entities.Entity.quadTreeNode*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.quadTreeNode
  name: quadTreeNode
  nameWithType: Entity.quadTreeNode
  fullName: Clay.Game.Mod.Entities.Entity.quadTreeNode
- uid: QuadTreeNode
  commentId: T:QuadTreeNode
  name: QuadTreeNode
  nameWithType: QuadTreeNode
  fullName: QuadTreeNode
- uid: Clay.Game.Mod.Entities.Entity.collisionQuadTreeNode*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.collisionQuadTreeNode
  name: collisionQuadTreeNode
  nameWithType: Entity.collisionQuadTreeNode
  fullName: Clay.Game.Mod.Entities.Entity.collisionQuadTreeNode
- uid: Clay.Game.Mod.Entities.Entity.wasOnScreen*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.wasOnScreen
  name: wasOnScreen
  nameWithType: Entity.wasOnScreen
  fullName: Clay.Game.Mod.Entities.Entity.wasOnScreen
- uid: Clay.Game.Mod.Entities.Entity.pitch*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.pitch
  name: pitch
  nameWithType: Entity.pitch
  fullName: Clay.Game.Mod.Entities.Entity.pitch
- uid: Clay.Game.Mod.Entities.Entity.visiblePitch*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.visiblePitch
  name: visiblePitch
  nameWithType: Entity.visiblePitch
  fullName: Clay.Game.Mod.Entities.Entity.visiblePitch
- uid: Clay.Game.Mod.Entities.Entity.autoSpawnedPosition*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.autoSpawnedPosition
  name: autoSpawnedPosition
  nameWithType: Entity.autoSpawnedPosition
  fullName: Clay.Game.Mod.Entities.Entity.autoSpawnedPosition
- uid: Clay.Game.Mod.Entities.Entity.stateName*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.stateName
  name: stateName
  nameWithType: Entity.stateName
  fullName: Clay.Game.Mod.Entities.Entity.stateName
- uid: Clay.Game.Mod.Entities.Entity.stateMachineData*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.stateMachineData
  name: stateMachineData
  nameWithType: Entity.stateMachineData
  fullName: Clay.Game.Mod.Entities.Entity.stateMachineData
- uid: AIStateMachineData
  commentId: T:AIStateMachineData
  name: AIStateMachineData
  nameWithType: AIStateMachineData
  fullName: AIStateMachineData
- uid: Clay.Game.Mod.Entities.Entity.stateMachine*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.stateMachine
  name: stateMachine
  nameWithType: Entity.stateMachine
  fullName: Clay.Game.Mod.Entities.Entity.stateMachine
- uid: AIStateMachine
  commentId: T:AIStateMachine
  name: AIStateMachine
  nameWithType: AIStateMachine
  fullName: AIStateMachine
- uid: Clay.Game.Mod.Entities.Entity.targetsEntities*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.targetsEntities
  name: targetsEntities
  nameWithType: Entity.targetsEntities
  fullName: Clay.Game.Mod.Entities.Entity.targetsEntities
- uid: Clay.Game.Mod.Entities.Entity.targetsFlora*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.targetsFlora
  name: targetsFlora
  nameWithType: Entity.targetsFlora
  fullName: Clay.Game.Mod.Entities.Entity.targetsFlora
- uid: Clay.Game.Mod.Entities.Entity.prefersPlayerTarget*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.prefersPlayerTarget
  name: prefersPlayerTarget
  nameWithType: Entity.prefersPlayerTarget
  fullName: Clay.Game.Mod.Entities.Entity.prefersPlayerTarget
- uid: Clay.Game.Mod.Entities.Entity.followingEntity*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.followingEntity
  name: followingEntity
  nameWithType: Entity.followingEntity
  fullName: Clay.Game.Mod.Entities.Entity.followingEntity
- uid: Clay.Game.Mod.Entities.Entity
  commentId: T:Clay.Game.Mod.Entities.Entity
  parent: Clay.Game.Mod.Entities
  name: Entity
  nameWithType: Entity
  fullName: Clay.Game.Mod.Entities.Entity
- uid: Clay.Game.Mod.Entities.Entity.owner*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.owner
  name: owner
  nameWithType: Entity.owner
  fullName: Clay.Game.Mod.Entities.Entity.owner
- uid: Clay.Game.Mod.Entities.Entity.splinePath*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.splinePath
  name: splinePath
  nameWithType: Entity.splinePath
  fullName: Clay.Game.Mod.Entities.Entity.splinePath
- uid: Clay.Game.SplinePath
  commentId: T:Clay.Game.SplinePath
  parent: Clay.Game
  name: SplinePath
  nameWithType: SplinePath
  fullName: Clay.Game.SplinePath
- uid: Clay.Game
  commentId: N:Clay.Game
  name: Clay.Game
  nameWithType: Clay.Game
  fullName: Clay.Game
- uid: Clay.Game.Mod.Entities.Entity.splinePathPosition*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.splinePathPosition
  name: splinePathPosition
  nameWithType: Entity.splinePathPosition
  fullName: Clay.Game.Mod.Entities.Entity.splinePathPosition
- uid: Clay.Game.Mod.Entities.Entity.splinePathLength*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.splinePathLength
  name: splinePathLength
  nameWithType: Entity.splinePathLength
  fullName: Clay.Game.Mod.Entities.Entity.splinePathLength
- uid: Clay.Game.Mod.Entities.Entity.splinePathNearestVertex*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.splinePathNearestVertex
  name: splinePathNearestVertex
  nameWithType: Entity.splinePathNearestVertex
  fullName: Clay.Game.Mod.Entities.Entity.splinePathNearestVertex
- uid: Clay.Game.Mod.Entities.Entity.isSplinePathFinished*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isSplinePathFinished
  name: isSplinePathFinished
  nameWithType: Entity.isSplinePathFinished
  fullName: Clay.Game.Mod.Entities.Entity.isSplinePathFinished
- uid: Clay.Game.Mod.Entities.Entity.health*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.health
  name: health
  nameWithType: Entity.health
  fullName: Clay.Game.Mod.Entities.Entity.health
- uid: Clay.Game.Mod.Entities.Entity.maxHealth*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.maxHealth
  name: maxHealth
  nameWithType: Entity.maxHealth
  fullName: Clay.Game.Mod.Entities.Entity.maxHealth
- uid: Clay.Game.Mod.Entities.Entity.healthRatio*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.healthRatio
  name: healthRatio
  nameWithType: Entity.healthRatio
  fullName: Clay.Game.Mod.Entities.Entity.healthRatio
- uid: Clay.Game.Mod.Entities.Entity.terraformEnergy*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.terraformEnergy
  name: terraformEnergy
  nameWithType: Entity.terraformEnergy
  fullName: Clay.Game.Mod.Entities.Entity.terraformEnergy
- uid: Clay.Game.Mod.Entities.Entity.hardPoints*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.hardPoints
  name: hardPoints
  nameWithType: Entity.hardPoints
  fullName: Clay.Game.Mod.Entities.Entity.hardPoints
- uid: HardPoint[]
  isExternal: true
  name: HardPoint[]
  nameWithType: HardPoint[]
  fullName: HardPoint[]
  nameWithType.vb: HardPoint()
  fullName.vb: HardPoint()
  name.vb: HardPoint()
  spec.csharp:
  - uid: HardPoint
    name: HardPoint
    nameWithType: HardPoint
    fullName: HardPoint
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: HardPoint
    name: HardPoint
    nameWithType: HardPoint
    fullName: HardPoint
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Clay.Game.Mod.Entities.Entity.weapons*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.weapons
  name: weapons
  nameWithType: Entity.weapons
  fullName: Clay.Game.Mod.Entities.Entity.weapons
- uid: System.Collections.Generic.List{Weapon}
  commentId: T:System.Collections.Generic.List{Weapon}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Weapon>
  nameWithType: List<Weapon>
  fullName: System.Collections.Generic.List<Weapon>
  nameWithType.vb: List(Of Weapon)
  fullName.vb: System.Collections.Generic.List(Of Weapon)
  name.vb: List(Of Weapon)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Weapon
    name: Weapon
    nameWithType: Weapon
    fullName: Weapon
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Weapon
    name: Weapon
    nameWithType: Weapon
    fullName: Weapon
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.explodeOnDeath*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.explodeOnDeath
  name: explodeOnDeath
  nameWithType: Entity.explodeOnDeath
  fullName: Clay.Game.Mod.Entities.Entity.explodeOnDeath
- uid: Clay.Game.Mod.Entities.Entity.wasAttacked*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.wasAttacked
  name: wasAttacked
  nameWithType: Entity.wasAttacked
  fullName: Clay.Game.Mod.Entities.Entity.wasAttacked
- uid: Clay.Game.Mod.Entities.Entity.wasAttackedBy*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.wasAttackedBy
  name: wasAttackedBy
  nameWithType: Entity.wasAttackedBy
  fullName: Clay.Game.Mod.Entities.Entity.wasAttackedBy
- uid: Clay.Game.Mod.Entities.Entity.sceneryCollisionsEnabled*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.sceneryCollisionsEnabled
  name: sceneryCollisionsEnabled
  nameWithType: Entity.sceneryCollisionsEnabled
  fullName: Clay.Game.Mod.Entities.Entity.sceneryCollisionsEnabled
- uid: Clay.Game.Mod.Entities.Entity.collidedWithScenery*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.collidedWithScenery
  name: collidedWithScenery
  nameWithType: Entity.collidedWithScenery
  fullName: Clay.Game.Mod.Entities.Entity.collidedWithScenery
- uid: Clay.Game.Mod.Entities.Entity.collidedWithSceneryInfo*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.collidedWithSceneryInfo
  name: collidedWithSceneryInfo
  nameWithType: Entity.collidedWithSceneryInfo
  fullName: Clay.Game.Mod.Entities.Entity.collidedWithSceneryInfo
- uid: DistanceFieldCollisionInfo
  commentId: T:DistanceFieldCollisionInfo
  name: DistanceFieldCollisionInfo
  nameWithType: DistanceFieldCollisionInfo
  fullName: DistanceFieldCollisionInfo
- uid: Clay.Game.Mod.Entities.Entity.doorCollisionsEnabled*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.doorCollisionsEnabled
  name: doorCollisionsEnabled
  nameWithType: Entity.doorCollisionsEnabled
  fullName: Clay.Game.Mod.Entities.Entity.doorCollisionsEnabled
- uid: Clay.Game.Mod.Entities.Entity.requireDoorCollisionTest*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.requireDoorCollisionTest
  name: requireDoorCollisionTest
  nameWithType: Entity.requireDoorCollisionTest
  fullName: Clay.Game.Mod.Entities.Entity.requireDoorCollisionTest
- uid: Clay.Game.Mod.Entities.Entity.collidedWithDoor*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.collidedWithDoor
  name: collidedWithDoor
  nameWithType: Entity.collidedWithDoor
  fullName: Clay.Game.Mod.Entities.Entity.collidedWithDoor
- uid: Clay.Game.Mod.Entities.Entity.collidedWithDoorInfo*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.collidedWithDoorInfo
  name: collidedWithDoorInfo
  nameWithType: Entity.collidedWithDoorInfo
  fullName: Clay.Game.Mod.Entities.Entity.collidedWithDoorInfo
- uid: Door
  commentId: T:Door
  name: Door
  nameWithType: Door
  fullName: Door
- uid: Clay.Game.Mod.Entities.Entity.inventoryManager*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.inventoryManager
  name: inventoryManager
  nameWithType: Entity.inventoryManager
  fullName: Clay.Game.Mod.Entities.Entity.inventoryManager
- uid: InventoryManager
  commentId: T:InventoryManager
  name: InventoryManager
  nameWithType: InventoryManager
  fullName: InventoryManager
- uid: Clay.Game.Mod.Entities.Entity.audioPosition*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.audioPosition
  name: audioPosition
  nameWithType: Entity.audioPosition
  fullName: Clay.Game.Mod.Entities.Entity.audioPosition
- uid: Clay.Game.Mod.Entities.Entity.audioRange*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.audioRange
  name: audioRange
  nameWithType: Entity.audioRange
  fullName: Clay.Game.Mod.Entities.Entity.audioRange
- uid: Clay.Game.Mod.Entities.Entity.isAudioCustomRange*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isAudioCustomRange
  name: isAudioCustomRange
  nameWithType: Entity.isAudioCustomRange
  fullName: Clay.Game.Mod.Entities.Entity.isAudioCustomRange
- uid: Clay.Game.Mod.Entities.Entity.isAudioAvailable*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isAudioAvailable
  name: isAudioAvailable
  nameWithType: Entity.isAudioAvailable
  fullName: Clay.Game.Mod.Entities.Entity.isAudioAvailable
- uid: Clay.Game.Mod.Entities.Entity.isAlive*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isAlive
  name: isAlive
  nameWithType: Entity.isAlive
  fullName: Clay.Game.Mod.Entities.Entity.isAlive
- uid: Clay.Game.Mod.Entities.Entity.isDead*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isDead
  name: isDead
  nameWithType: Entity.isDead
  fullName: Clay.Game.Mod.Entities.Entity.isDead
- uid: Clay.Game.Mod.Entities.Entity.isInStasis*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isInStasis
  name: isInStasis
  nameWithType: Entity.isInStasis
  fullName: Clay.Game.Mod.Entities.Entity.isInStasis
- uid: Clay.Game.Mod.Entities.Entity.isSick*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isSick
  name: isSick
  nameWithType: Entity.isSick
  fullName: Clay.Game.Mod.Entities.Entity.isSick
- uid: Clay.Game.Mod.Entities.Entity.isFrozen*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isFrozen
  name: isFrozen
  nameWithType: Entity.isFrozen
  fullName: Clay.Game.Mod.Entities.Entity.isFrozen
- uid: Clay.Game.Mod.Entities.Entity.wasSick*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.wasSick
  name: wasSick
  nameWithType: Entity.wasSick
  fullName: Clay.Game.Mod.Entities.Entity.wasSick
- uid: Clay.Game.Mod.Entities.Entity.isThinking*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isThinking
  name: isThinking
  nameWithType: Entity.isThinking
  fullName: Clay.Game.Mod.Entities.Entity.isThinking
- uid: Clay.Game.Mod.Entities.Entity.isThinkingFixedUpdate*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isThinkingFixedUpdate
  name: isThinkingFixedUpdate
  nameWithType: Entity.isThinkingFixedUpdate
  fullName: Clay.Game.Mod.Entities.Entity.isThinkingFixedUpdate
- uid: Clay.Game.Mod.Entities.Entity.isStateLocked*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isStateLocked
  name: isStateLocked
  nameWithType: Entity.isStateLocked
  fullName: Clay.Game.Mod.Entities.Entity.isStateLocked
- uid: Clay.Game.Mod.Entities.Entity.isPlayer*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isPlayer
  name: isPlayer
  nameWithType: Entity.isPlayer
  fullName: Clay.Game.Mod.Entities.Entity.isPlayer
- uid: Clay.Game.Mod.Entities.Entity.isFlora*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isFlora
  name: isFlora
  nameWithType: Entity.isFlora
  fullName: Clay.Game.Mod.Entities.Entity.isFlora
- uid: Clay.Game.Mod.Entities.Entity.isDecorativeEntity*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isDecorativeEntity
  name: isDecorativeEntity
  nameWithType: Entity.isDecorativeEntity
  fullName: Clay.Game.Mod.Entities.Entity.isDecorativeEntity
- uid: Clay.Game.Mod.Entities.Entity.isEquipment*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isEquipment
  name: isEquipment
  nameWithType: Entity.isEquipment
  fullName: Clay.Game.Mod.Entities.Entity.isEquipment
- uid: Clay.Game.Mod.Entities.Entity.isTargetable*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isTargetable
  name: isTargetable
  nameWithType: Entity.isTargetable
  fullName: Clay.Game.Mod.Entities.Entity.isTargetable
- uid: Clay.Game.Mod.Entities.Entity.isDamageable*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isDamageable
  name: isDamageable
  nameWithType: Entity.isDamageable
  fullName: Clay.Game.Mod.Entities.Entity.isDamageable
- uid: Clay.Game.Mod.Entities.Entity.isDetonatorActive*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isDetonatorActive
  name: isDetonatorActive
  nameWithType: Entity.isDetonatorActive
  fullName: Clay.Game.Mod.Entities.Entity.isDetonatorActive
- uid: Clay.Game.Mod.Entities.Entity.isAttractor*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isAttractor
  name: isAttractor
  nameWithType: Entity.isAttractor
  fullName: Clay.Game.Mod.Entities.Entity.isAttractor
- uid: Clay.Game.Mod.Entities.Entity.isRepellant*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isRepellant
  name: isRepellant
  nameWithType: Entity.isRepellant
  fullName: Clay.Game.Mod.Entities.Entity.isRepellant
- uid: Clay.Game.Mod.Entities.Entity.isPreferredTarget*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isPreferredTarget
  name: isPreferredTarget
  nameWithType: Entity.isPreferredTarget
  fullName: Clay.Game.Mod.Entities.Entity.isPreferredTarget
- uid: Clay.Game.Mod.Entities.Entity.seekTargets*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.seekTargets
  name: seekTargets
  nameWithType: Entity.seekTargets
  fullName: Clay.Game.Mod.Entities.Entity.seekTargets
- uid: Clay.Game.Mod.Entities.Entity.seekFriendlyPlayer*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.seekFriendlyPlayer
  name: seekFriendlyPlayer
  nameWithType: Entity.seekFriendlyPlayer
  fullName: Clay.Game.Mod.Entities.Entity.seekFriendlyPlayer
- uid: Clay.Game.Mod.Entities.Entity.isInteractive*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isInteractive
  name: isInteractive
  nameWithType: Entity.isInteractive
  fullName: Clay.Game.Mod.Entities.Entity.isInteractive
- uid: Clay.Game.Mod.Entities.Entity.canRotate*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.canRotate
  name: canRotate
  nameWithType: Entity.canRotate
  fullName: Clay.Game.Mod.Entities.Entity.canRotate
- uid: Clay.Game.Mod.Entities.Entity.requiresLineOfSight*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.requiresLineOfSight
  name: requiresLineOfSight
  nameWithType: Entity.requiresLineOfSight
  fullName: Clay.Game.Mod.Entities.Entity.requiresLineOfSight
- uid: Clay.Game.Mod.Entities.Entity.isEnergyDropper*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isEnergyDropper
  name: isEnergyDropper
  nameWithType: Entity.isEnergyDropper
  fullName: Clay.Game.Mod.Entities.Entity.isEnergyDropper
- uid: Clay.Game.Mod.Entities.Entity.isDamagedByWeapons*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isDamagedByWeapons
  name: isDamagedByWeapons
  nameWithType: Entity.isDamagedByWeapons
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedByWeapons
- uid: Clay.Game.Mod.Entities.Entity.isDamagedByExplosives*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isDamagedByExplosives
  name: isDamagedByExplosives
  nameWithType: Entity.isDamagedByExplosives
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedByExplosives
- uid: Clay.Game.Mod.Entities.Entity.isDamagedByStasis*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isDamagedByStasis
  name: isDamagedByStasis
  nameWithType: Entity.isDamagedByStasis
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedByStasis
- uid: Clay.Game.Mod.Entities.Entity.isDamagedByFreeze*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isDamagedByFreeze
  name: isDamagedByFreeze
  nameWithType: Entity.isDamagedByFreeze
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedByFreeze
- uid: Clay.Game.Mod.Entities.Entity.isDamagedBySickness*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isDamagedBySickness
  name: isDamagedBySickness
  nameWithType: Entity.isDamagedBySickness
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedBySickness
- uid: Clay.Game.Mod.Entities.Entity.isDamagedBySuppression*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isDamagedBySuppression
  name: isDamagedBySuppression
  nameWithType: Entity.isDamagedBySuppression
  fullName: Clay.Game.Mod.Entities.Entity.isDamagedBySuppression
- uid: Clay.Game.Mod.Entities.Entity.isColonist*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isColonist
  name: isColonist
  nameWithType: Entity.isColonist
  fullName: Clay.Game.Mod.Entities.Entity.isColonist
- uid: Clay.Game.Mod.Entities.Entity.isMine*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isMine
  name: isMine
  nameWithType: Entity.isMine
  fullName: Clay.Game.Mod.Entities.Entity.isMine
- uid: Clay.Game.Mod.Entities.Entity.isColonyAttackResponse*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isColonyAttackResponse
  name: isColonyAttackResponse
  nameWithType: Entity.isColonyAttackResponse
  fullName: Clay.Game.Mod.Entities.Entity.isColonyAttackResponse
- uid: Clay.Game.Mod.Entities.Entity.isContactDamage*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isContactDamage
  name: isContactDamage
  nameWithType: Entity.isContactDamage
  fullName: Clay.Game.Mod.Entities.Entity.isContactDamage
- uid: Clay.Game.Mod.Entities.Entity.isInvulnerable*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.isInvulnerable
  name: isInvulnerable
  nameWithType: Entity.isInvulnerable
  fullName: Clay.Game.Mod.Entities.Entity.isInvulnerable
- uid: Clay.Game.Mod.Entities.Entity.MovementRestricted*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.MovementRestricted
  name: MovementRestricted
  nameWithType: Entity.MovementRestricted
  fullName: Clay.Game.Mod.Entities.Entity.MovementRestricted
- uid: Clay.Game.Mod.Entities.Entity.data*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.data
  name: data
  nameWithType: Entity.data
  fullName: Clay.Game.Mod.Entities.Entity.data
- uid: MoonSharp.Interpreter.Table
  commentId: T:MoonSharp.Interpreter.Table
  parent: MoonSharp.Interpreter
  name: Table
  nameWithType: Table
  fullName: MoonSharp.Interpreter.Table
- uid: MoonSharp.Interpreter
  commentId: N:MoonSharp.Interpreter
  name: MoonSharp.Interpreter
  nameWithType: MoonSharp.Interpreter
  fullName: MoonSharp.Interpreter
- uid: Clay.Game.Mod.Entities.Entity.csdata*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.csdata
  name: csdata
  nameWithType: Entity.csdata
  fullName: Clay.Game.Mod.Entities.Entity.csdata
- uid: Clay.Game.ScriptedData
  commentId: T:Clay.Game.ScriptedData
  parent: Clay.Game
  name: ScriptedData
  nameWithType: ScriptedData
  fullName: Clay.Game.ScriptedData
- uid: Clay.Game.Mod.Entities.Entity.transform*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.transform
  name: transform
  nameWithType: Entity.transform
  fullName: Clay.Game.Mod.Entities.Entity.transform
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: Clay.Game.Mod.Entities.Entity.editHelpers*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.editHelpers
  name: editHelpers
  nameWithType: Entity.editHelpers
  fullName: Clay.Game.Mod.Entities.Entity.editHelpers
- uid: System.Collections.Generic.Dictionary{System.String,EditHelper}
  commentId: T:System.Collections.Generic.Dictionary{System.String,EditHelper}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, EditHelper>
  nameWithType: Dictionary<String, EditHelper>
  fullName: System.Collections.Generic.Dictionary<System.String, EditHelper>
  nameWithType.vb: Dictionary(Of String, EditHelper)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, EditHelper)
  name.vb: Dictionary(Of String, EditHelper)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EditHelper
    name: EditHelper
    nameWithType: EditHelper
    fullName: EditHelper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: EditHelper
    name: EditHelper
    nameWithType: EditHelper
    fullName: EditHelper
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.teamName*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.teamName
  name: teamName
  nameWithType: Entity.teamName
  fullName: Clay.Game.Mod.Entities.Entity.teamName
- uid: Clay.Game.Mod.Entities.Entity.homePosition*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.homePosition
  name: homePosition
  nameWithType: Entity.homePosition
  fullName: Clay.Game.Mod.Entities.Entity.homePosition
- uid: Clay.Game.Mod.Entities.Entity.hasHome*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.hasHome
  name: hasHome
  nameWithType: Entity.hasHome
  fullName: Clay.Game.Mod.Entities.Entity.hasHome
- uid: Clay.Game.Mod.Entities.Entity.FollowTarget*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FollowTarget
  name: FollowTarget
  nameWithType: Entity.FollowTarget
  fullName: Clay.Game.Mod.Entities.Entity.FollowTarget
- uid: Clay.Game.Mod.Entities.Entity.HomeDistanceSquared*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.HomeDistanceSquared
  name: HomeDistanceSquared
  nameWithType: Entity.HomeDistanceSquared
  fullName: Clay.Game.Mod.Entities.Entity.HomeDistanceSquared
- uid: Clay.Game.Mod.Entities.Entity.InitialiseApp*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.InitialiseApp
  name: InitialiseApp
  nameWithType: Entity.InitialiseApp
  fullName: Clay.Game.Mod.Entities.Entity.InitialiseApp
- uid: Clay.Game.Mod.Entities.Entity.InitialiseLevel*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.InitialiseLevel
  name: InitialiseLevel
  nameWithType: Entity.InitialiseLevel
  fullName: Clay.Game.Mod.Entities.Entity.InitialiseLevel
- uid: Clay.Game.Mod.Entities.Entity.CleanUpLevel*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.CleanUpLevel
  name: CleanUpLevel
  nameWithType: Entity.CleanUpLevel
  fullName: Clay.Game.Mod.Entities.Entity.CleanUpLevel
- uid: Clay.Game.Mod.Entities.Entity.Find*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Find
  name: Find
  nameWithType: Entity.Find
  fullName: Clay.Game.Mod.Entities.Entity.Find
- uid: Clay.Game.Mod.Entities.Entity.FindByUID*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FindByUID
  name: FindByUID
  nameWithType: Entity.FindByUID
  fullName: Clay.Game.Mod.Entities.Entity.FindByUID
- uid: Clay.Game.Mod.Entities.Entity.FindByInternalUID*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FindByInternalUID
  name: FindByInternalUID
  nameWithType: Entity.FindByInternalUID
  fullName: Clay.Game.Mod.Entities.Entity.FindByInternalUID
- uid: Clay.Game.Mod.Entities.Entity.#ctor*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.#ctor
  name: Entity
  nameWithType: Entity.Entity
  fullName: Clay.Game.Mod.Entities.Entity.Entity
- uid: Tuna.Mob.CloneConfiguration(Tuna.Mob)
  commentId: M:Tuna.Mob.CloneConfiguration(Tuna.Mob)
  parent: Tuna.Mob
  name: CloneConfiguration(Mob)
  nameWithType: Mob.CloneConfiguration(Mob)
  fullName: Tuna.Mob.CloneConfiguration(Tuna.Mob)
  spec.csharp:
  - uid: Tuna.Mob.CloneConfiguration(Tuna.Mob)
    name: CloneConfiguration
    nameWithType: Mob.CloneConfiguration
    fullName: Tuna.Mob.CloneConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tuna.Mob
    name: Mob
    nameWithType: Mob
    fullName: Tuna.Mob
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.CloneConfiguration(Tuna.Mob)
    name: CloneConfiguration
    nameWithType: Mob.CloneConfiguration
    fullName: Tuna.Mob.CloneConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tuna.Mob
    name: Mob
    nameWithType: Mob
    fullName: Tuna.Mob
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.CloneConfiguration*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.CloneConfiguration
  name: CloneConfiguration
  nameWithType: Entity.CloneConfiguration
  fullName: Clay.Game.Mod.Entities.Entity.CloneConfiguration
- uid: Tuna.Mob.RecycleConfiguration(Tuna.Mob)
  commentId: M:Tuna.Mob.RecycleConfiguration(Tuna.Mob)
  parent: Tuna.Mob
  name: RecycleConfiguration(Mob)
  nameWithType: Mob.RecycleConfiguration(Mob)
  fullName: Tuna.Mob.RecycleConfiguration(Tuna.Mob)
  spec.csharp:
  - uid: Tuna.Mob.RecycleConfiguration(Tuna.Mob)
    name: RecycleConfiguration
    nameWithType: Mob.RecycleConfiguration
    fullName: Tuna.Mob.RecycleConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tuna.Mob
    name: Mob
    nameWithType: Mob
    fullName: Tuna.Mob
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.RecycleConfiguration(Tuna.Mob)
    name: RecycleConfiguration
    nameWithType: Mob.RecycleConfiguration
    fullName: Tuna.Mob.RecycleConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Tuna.Mob
    name: Mob
    nameWithType: Mob
    fullName: Tuna.Mob
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.RecycleConfiguration*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RecycleConfiguration
  name: RecycleConfiguration
  nameWithType: Entity.RecycleConfiguration
  fullName: Clay.Game.Mod.Entities.Entity.RecycleConfiguration
- uid: Tuna.Mob.ReadProperty(System.Object,System.Reflection.PropertyInfo,Tuna.Setting)
  commentId: M:Tuna.Mob.ReadProperty(System.Object,System.Reflection.PropertyInfo,Tuna.Setting)
  parent: Tuna.Mob
  isExternal: true
  name: ReadProperty(Object, PropertyInfo, Setting)
  nameWithType: Mob.ReadProperty(Object, PropertyInfo, Setting)
  fullName: Tuna.Mob.ReadProperty(System.Object, System.Reflection.PropertyInfo, Tuna.Setting)
  spec.csharp:
  - uid: Tuna.Mob.ReadProperty(System.Object,System.Reflection.PropertyInfo,Tuna.Setting)
    name: ReadProperty
    nameWithType: Mob.ReadProperty
    fullName: Tuna.Mob.ReadProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tuna.Setting
    name: Setting
    nameWithType: Setting
    fullName: Tuna.Setting
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.ReadProperty(System.Object,System.Reflection.PropertyInfo,Tuna.Setting)
    name: ReadProperty
    nameWithType: Mob.ReadProperty
    fullName: Tuna.Mob.ReadProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tuna.Setting
    name: Setting
    nameWithType: Setting
    fullName: Tuna.Setting
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.ReadProperty*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ReadProperty
  name: ReadProperty
  nameWithType: Entity.ReadProperty
  fullName: Clay.Game.Mod.Entities.Entity.ReadProperty
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: Tuna.Setting
  commentId: T:Tuna.Setting
  parent: Tuna
  name: Setting
  nameWithType: Setting
  fullName: Tuna.Setting
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Tuna.Mob.ReadUndefinedSetting(System.Object,Tuna.Setting)
  commentId: M:Tuna.Mob.ReadUndefinedSetting(System.Object,Tuna.Setting)
  parent: Tuna.Mob
  isExternal: true
  name: ReadUndefinedSetting(Object, Setting)
  nameWithType: Mob.ReadUndefinedSetting(Object, Setting)
  fullName: Tuna.Mob.ReadUndefinedSetting(System.Object, Tuna.Setting)
  spec.csharp:
  - uid: Tuna.Mob.ReadUndefinedSetting(System.Object,Tuna.Setting)
    name: ReadUndefinedSetting
    nameWithType: Mob.ReadUndefinedSetting
    fullName: Tuna.Mob.ReadUndefinedSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tuna.Setting
    name: Setting
    nameWithType: Setting
    fullName: Tuna.Setting
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.ReadUndefinedSetting(System.Object,Tuna.Setting)
    name: ReadUndefinedSetting
    nameWithType: Mob.ReadUndefinedSetting
    fullName: Tuna.Mob.ReadUndefinedSetting
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tuna.Setting
    name: Setting
    nameWithType: Setting
    fullName: Tuna.Setting
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.ReadUndefinedSetting*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ReadUndefinedSetting
  name: ReadUndefinedSetting
  nameWithType: Entity.ReadUndefinedSetting
  fullName: Clay.Game.Mod.Entities.Entity.ReadUndefinedSetting
- uid: Tuna.Mob.Prototyped
  commentId: M:Tuna.Mob.Prototyped
  parent: Tuna.Mob
  name: Prototyped()
  nameWithType: Mob.Prototyped()
  fullName: Tuna.Mob.Prototyped()
  spec.csharp:
  - uid: Tuna.Mob.Prototyped
    name: Prototyped
    nameWithType: Mob.Prototyped
    fullName: Tuna.Mob.Prototyped
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.Prototyped
    name: Prototyped
    nameWithType: Mob.Prototyped
    fullName: Tuna.Mob.Prototyped
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.Prototyped*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Prototyped
  name: Prototyped
  nameWithType: Entity.Prototyped
  fullName: Clay.Game.Mod.Entities.Entity.Prototyped
- uid: Clay.Game.Mod.Entities.Entity.Activate*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Activate
  name: Activate
  nameWithType: Entity.Activate
  fullName: Clay.Game.Mod.Entities.Entity.Activate
- uid: Clay.Game.Mod.Entities.Entity.Resurrect*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Resurrect
  name: Resurrect
  nameWithType: Entity.Resurrect
  fullName: Clay.Game.Mod.Entities.Entity.Resurrect
- uid: Tuna.Mob.Spawned
  commentId: M:Tuna.Mob.Spawned
  parent: Tuna.Mob
  name: Spawned()
  nameWithType: Mob.Spawned()
  fullName: Tuna.Mob.Spawned()
  spec.csharp:
  - uid: Tuna.Mob.Spawned
    name: Spawned
    nameWithType: Mob.Spawned
    fullName: Tuna.Mob.Spawned
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.Spawned
    name: Spawned
    nameWithType: Mob.Spawned
    fullName: Tuna.Mob.Spawned
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.Spawned*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Spawned
  name: Spawned
  nameWithType: Entity.Spawned
  fullName: Clay.Game.Mod.Entities.Entity.Spawned
- uid: Tuna.Mob.Trashed
  commentId: M:Tuna.Mob.Trashed
  parent: Tuna.Mob
  name: Trashed()
  nameWithType: Mob.Trashed()
  fullName: Tuna.Mob.Trashed()
  spec.csharp:
  - uid: Tuna.Mob.Trashed
    name: Trashed
    nameWithType: Mob.Trashed
    fullName: Tuna.Mob.Trashed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.Trashed
    name: Trashed
    nameWithType: Mob.Trashed
    fullName: Tuna.Mob.Trashed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.Trashed*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Trashed
  name: Trashed
  nameWithType: Entity.Trashed
  fullName: Clay.Game.Mod.Entities.Entity.Trashed
- uid: Clay.Game.Mod.Entities.Entity.CommonCleanUp*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.CommonCleanUp
  name: CommonCleanUp
  nameWithType: Entity.CommonCleanUp
  fullName: Clay.Game.Mod.Entities.Entity.CommonCleanUp
- uid: Tuna.Mob.RebuildPrototype
  commentId: M:Tuna.Mob.RebuildPrototype
  parent: Tuna.Mob
  name: RebuildPrototype()
  nameWithType: Mob.RebuildPrototype()
  fullName: Tuna.Mob.RebuildPrototype()
  spec.csharp:
  - uid: Tuna.Mob.RebuildPrototype
    name: RebuildPrototype
    nameWithType: Mob.RebuildPrototype
    fullName: Tuna.Mob.RebuildPrototype
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.RebuildPrototype
    name: RebuildPrototype
    nameWithType: Mob.RebuildPrototype
    fullName: Tuna.Mob.RebuildPrototype
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.RebuildPrototype*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RebuildPrototype
  name: RebuildPrototype
  nameWithType: Entity.RebuildPrototype
  fullName: Clay.Game.Mod.Entities.Entity.RebuildPrototype
- uid: Clay.Game.Mod.Entities.Entity.RebuildAIScripts*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RebuildAIScripts
  name: RebuildAIScripts
  nameWithType: Entity.RebuildAIScripts
  fullName: Clay.Game.Mod.Entities.Entity.RebuildAIScripts
- uid: Clay.Game.Mod.Entities.Entity.RebuildAIStateMachine*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RebuildAIStateMachine
  name: RebuildAIStateMachine
  nameWithType: Entity.RebuildAIStateMachine
  fullName: Clay.Game.Mod.Entities.Entity.RebuildAIStateMachine
- uid: Clay.Game.Mod.Entities.Entity.RebuildAttributes*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RebuildAttributes
  name: RebuildAttributes
  nameWithType: Entity.RebuildAttributes
  fullName: Clay.Game.Mod.Entities.Entity.RebuildAttributes
- uid: Tuna.Mob.FixedUpdate(System.Single)
  commentId: M:Tuna.Mob.FixedUpdate(System.Single)
  parent: Tuna.Mob
  isExternal: true
  name: FixedUpdate(Single)
  nameWithType: Mob.FixedUpdate(Single)
  fullName: Tuna.Mob.FixedUpdate(System.Single)
  spec.csharp:
  - uid: Tuna.Mob.FixedUpdate(System.Single)
    name: FixedUpdate
    nameWithType: Mob.FixedUpdate
    fullName: Tuna.Mob.FixedUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.FixedUpdate(System.Single)
    name: FixedUpdate
    nameWithType: Mob.FixedUpdate
    fullName: Tuna.Mob.FixedUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.FixedUpdate*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FixedUpdate
  name: FixedUpdate
  nameWithType: Entity.FixedUpdate
  fullName: Clay.Game.Mod.Entities.Entity.FixedUpdate
- uid: Clay.Game.Mod.Entities.Entity.EntityFixedUpdate*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.EntityFixedUpdate
  name: EntityFixedUpdate
  nameWithType: Entity.EntityFixedUpdate
  fullName: Clay.Game.Mod.Entities.Entity.EntityFixedUpdate
- uid: Tuna.Mob.Update(System.Single)
  commentId: M:Tuna.Mob.Update(System.Single)
  parent: Tuna.Mob
  isExternal: true
  name: Update(Single)
  nameWithType: Mob.Update(Single)
  fullName: Tuna.Mob.Update(System.Single)
  spec.csharp:
  - uid: Tuna.Mob.Update(System.Single)
    name: Update
    nameWithType: Mob.Update
    fullName: Tuna.Mob.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.Update(System.Single)
    name: Update
    nameWithType: Mob.Update
    fullName: Tuna.Mob.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.Update*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Update
  name: Update
  nameWithType: Entity.Update
  fullName: Clay.Game.Mod.Entities.Entity.Update
- uid: Clay.Game.Mod.Entities.Entity.UpdatePersistentEffects*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.UpdatePersistentEffects
  name: UpdatePersistentEffects
  nameWithType: Entity.UpdatePersistentEffects
  fullName: Clay.Game.Mod.Entities.Entity.UpdatePersistentEffects
- uid: Clay.Game.Mod.Entities.Entity.FixedUpdatePhysics*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FixedUpdatePhysics
  name: FixedUpdatePhysics
  nameWithType: Entity.FixedUpdatePhysics
  fullName: Clay.Game.Mod.Entities.Entity.FixedUpdatePhysics
- uid: Clay.Game.Mod.Entities.Entity.DoPhysics*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.DoPhysics
  name: DoPhysics
  nameWithType: Entity.DoPhysics
  fullName: Clay.Game.Mod.Entities.Entity.DoPhysics
- uid: Clay.Game.Mod.Entities.Entity.FixedUpdateAllEntityPhysics*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FixedUpdateAllEntityPhysics
  name: FixedUpdateAllEntityPhysics
  nameWithType: Entity.FixedUpdateAllEntityPhysics
  fullName: Clay.Game.Mod.Entities.Entity.FixedUpdateAllEntityPhysics
- uid: Clay.Game.Mod.Entities.Entity.LogWeaponDebugInfo*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.LogWeaponDebugInfo
  name: LogWeaponDebugInfo
  nameWithType: Entity.LogWeaponDebugInfo
  fullName: Clay.Game.Mod.Entities.Entity.LogWeaponDebugInfo
- uid: Tuna.Mob.EarlyRender
  commentId: M:Tuna.Mob.EarlyRender
  parent: Tuna.Mob
  name: EarlyRender()
  nameWithType: Mob.EarlyRender()
  fullName: Tuna.Mob.EarlyRender()
  spec.csharp:
  - uid: Tuna.Mob.EarlyRender
    name: EarlyRender
    nameWithType: Mob.EarlyRender
    fullName: Tuna.Mob.EarlyRender
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.EarlyRender
    name: EarlyRender
    nameWithType: Mob.EarlyRender
    fullName: Tuna.Mob.EarlyRender
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.EarlyRender*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.EarlyRender
  name: EarlyRender
  nameWithType: Entity.EarlyRender
  fullName: Clay.Game.Mod.Entities.Entity.EarlyRender
- uid: Tuna.Mob.Render
  commentId: M:Tuna.Mob.Render
  parent: Tuna.Mob
  name: Render()
  nameWithType: Mob.Render()
  fullName: Tuna.Mob.Render()
  spec.csharp:
  - uid: Tuna.Mob.Render
    name: Render
    nameWithType: Mob.Render
    fullName: Tuna.Mob.Render
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.Render
    name: Render
    nameWithType: Mob.Render
    fullName: Tuna.Mob.Render
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.Render*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Render
  name: Render
  nameWithType: Entity.Render
  fullName: Clay.Game.Mod.Entities.Entity.Render
- uid: Tuna.Mob.RenderDebug
  commentId: M:Tuna.Mob.RenderDebug
  parent: Tuna.Mob
  name: RenderDebug()
  nameWithType: Mob.RenderDebug()
  fullName: Tuna.Mob.RenderDebug()
  spec.csharp:
  - uid: Tuna.Mob.RenderDebug
    name: RenderDebug
    nameWithType: Mob.RenderDebug
    fullName: Tuna.Mob.RenderDebug
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Tuna.Mob.RenderDebug
    name: RenderDebug
    nameWithType: Mob.RenderDebug
    fullName: Tuna.Mob.RenderDebug
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Clay.Game.Mod.Entities.Entity.RenderDebug*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RenderDebug
  name: RenderDebug
  nameWithType: Entity.RenderDebug
  fullName: Clay.Game.Mod.Entities.Entity.RenderDebug
- uid: Clay.Game.Mod.Entities.Entity.RenderDebugStatString*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RenderDebugStatString
  name: RenderDebugStatString
  nameWithType: Entity.RenderDebugStatString
  fullName: Clay.Game.Mod.Entities.Entity.RenderDebugStatString
- uid: Clay.Game.Mod.Entities.Entity.RenderLeaf*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RenderLeaf
  name: RenderLeaf
  nameWithType: Entity.RenderLeaf
  fullName: Clay.Game.Mod.Entities.Entity.RenderLeaf
- uid: FloraLeaf
  commentId: T:FloraLeaf
  name: FloraLeaf
  nameWithType: FloraLeaf
  fullName: FloraLeaf
- uid: Clay.Game.Mod.Entities.Entity.RenderWeapons*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RenderWeapons
  name: RenderWeapons
  nameWithType: Entity.RenderWeapons
  fullName: Clay.Game.Mod.Entities.Entity.RenderWeapons
- uid: Clay.Game.Mod.Entities.Entity.RenderDebugWeapons*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RenderDebugWeapons
  name: RenderDebugWeapons
  nameWithType: Entity.RenderDebugWeapons
  fullName: Clay.Game.Mod.Entities.Entity.RenderDebugWeapons
- uid: Clay.Game.Mod.Entities.Entity.CreateRenderList*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.CreateRenderList
  name: CreateRenderList
  nameWithType: Entity.CreateRenderList
  fullName: Clay.Game.Mod.Entities.Entity.CreateRenderList
- uid: Clay.Game.Mod.Entities.Entity.IsOnScreen*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsOnScreen
  name: IsOnScreen
  nameWithType: Entity.IsOnScreen
  fullName: Clay.Game.Mod.Entities.Entity.IsOnScreen
- uid: Clay.Game.Mod.Entities.Entity.RecalculateExtents*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RecalculateExtents
  name: RecalculateExtents
  nameWithType: Entity.RecalculateExtents
  fullName: Clay.Game.Mod.Entities.Entity.RecalculateExtents
- uid: Clay.Game.Mod.Entities.Entity.RecalculateSpriteExtents*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RecalculateSpriteExtents
  name: RecalculateSpriteExtents
  nameWithType: Entity.RecalculateSpriteExtents
  fullName: Clay.Game.Mod.Entities.Entity.RecalculateSpriteExtents
- uid: Clay.Game.Mod.Entities.Entity.UpdateQuadTree*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.UpdateQuadTree
  name: UpdateQuadTree
  nameWithType: Entity.UpdateQuadTree
  fullName: Clay.Game.Mod.Entities.Entity.UpdateQuadTree
- uid: Clay.Game.Mod.Entities.Entity.ThreadedUpdateQuadTree*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ThreadedUpdateQuadTree
  name: ThreadedUpdateQuadTree
  nameWithType: Entity.ThreadedUpdateQuadTree
  fullName: Clay.Game.Mod.Entities.Entity.ThreadedUpdateQuadTree
- uid: Clay.Game.Mod.Entities.Entity.FixedUpdateQuadTreeLocators*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FixedUpdateQuadTreeLocators
  name: FixedUpdateQuadTreeLocators
  nameWithType: Entity.FixedUpdateQuadTreeLocators
  fullName: Clay.Game.Mod.Entities.Entity.FixedUpdateQuadTreeLocators
- uid: Clay.Game.Mod.Entities.Entity.SetSplinePath*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetSplinePath
  name: SetSplinePath
  nameWithType: Entity.SetSplinePath
  fullName: Clay.Game.Mod.Entities.Entity.SetSplinePath
- uid: Clay.Game.Mod.Entities.Entity.RemoveSplinePath*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RemoveSplinePath
  name: RemoveSplinePath
  nameWithType: Entity.RemoveSplinePath
  fullName: Clay.Game.Mod.Entities.Entity.RemoveSplinePath
- uid: Clay.Game.Mod.Entities.Entity.SetTeam*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetTeam
  name: SetTeam
  nameWithType: Entity.SetTeam
  fullName: Clay.Game.Mod.Entities.Entity.SetTeam
- uid: Clay.Game.Mod.Entities.Entity.SetPalette*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetPalette
  name: SetPalette
  nameWithType: Entity.SetPalette
  fullName: Clay.Game.Mod.Entities.Entity.SetPalette
- uid: Clay.Game.Mod.Entities.Entity.ResetPalette*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ResetPalette
  name: ResetPalette
  nameWithType: Entity.ResetPalette
  fullName: Clay.Game.Mod.Entities.Entity.ResetPalette
- uid: Clay.Game.Mod.Entities.Entity.SetAttributes*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetAttributes
  name: SetAttributes
  nameWithType: Entity.SetAttributes
  fullName: Clay.Game.Mod.Entities.Entity.SetAttributes
- uid: Clay.Game.Mod.Entities.Entity.GenerateAllCharacteristics*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.GenerateAllCharacteristics
  name: GenerateAllCharacteristics
  nameWithType: Entity.GenerateAllCharacteristics
  fullName: Clay.Game.Mod.Entities.Entity.GenerateAllCharacteristics
- uid: Clay.Game.Mod.Entities.Entity.GenerateCharacteristics*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.GenerateCharacteristics
  name: GenerateCharacteristics
  nameWithType: Entity.GenerateCharacteristics
  fullName: Clay.Game.Mod.Entities.Entity.GenerateCharacteristics
- uid: Clay.Game.Mod.Entities.Entity.GenerateDependantCharacteristics*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.GenerateDependantCharacteristics
  name: GenerateDependantCharacteristics
  nameWithType: Entity.GenerateDependantCharacteristics
  fullName: Clay.Game.Mod.Entities.Entity.GenerateDependantCharacteristics
- uid: Clay.Game.Mod.Entities.Entity.MutateAttribute*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.MutateAttribute
  name: MutateAttribute
  nameWithType: Entity.MutateAttribute
  fullName: Clay.Game.Mod.Entities.Entity.MutateAttribute
- uid: Clay.Game.Mod.Entities.Entity.InitialiseAttributeMorphing*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.InitialiseAttributeMorphing
  name: InitialiseAttributeMorphing
  nameWithType: Entity.InitialiseAttributeMorphing
  fullName: Clay.Game.Mod.Entities.Entity.InitialiseAttributeMorphing
- uid: Clay.Game.Mod.Entities.Entity.SetNameAndUID*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetNameAndUID
  name: SetNameAndUID
  nameWithType: Entity.SetNameAndUID
  fullName: Clay.Game.Mod.Entities.Entity.SetNameAndUID
- uid: Clay.Game.Mod.Entities.Entity.SetPosition*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetPosition
  name: SetPosition
  nameWithType: Entity.SetPosition
  fullName: Clay.Game.Mod.Entities.Entity.SetPosition
- uid: Clay.Game.Mod.Entities.Entity.MovePosition*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.MovePosition
  name: MovePosition
  nameWithType: Entity.MovePosition
  fullName: Clay.Game.Mod.Entities.Entity.MovePosition
- uid: Clay.Game.Mod.Entities.Entity.SetVelocity*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetVelocity
  name: SetVelocity
  nameWithType: Entity.SetVelocity
  fullName: Clay.Game.Mod.Entities.Entity.SetVelocity
- uid: Clay.Game.Mod.Entities.Entity.SetRotation*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetRotation
  name: SetRotation
  nameWithType: Entity.SetRotation
  fullName: Clay.Game.Mod.Entities.Entity.SetRotation
- uid: Clay.Game.Mod.Entities.Entity.SetPitch*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetPitch
  name: SetPitch
  nameWithType: Entity.SetPitch
  fullName: Clay.Game.Mod.Entities.Entity.SetPitch
- uid: Clay.Game.Mod.Entities.Entity.SetVisiblePitch*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetVisiblePitch
  name: SetVisiblePitch
  nameWithType: Entity.SetVisiblePitch
  fullName: Clay.Game.Mod.Entities.Entity.SetVisiblePitch
- uid: Clay.Game.Mod.Entities.Entity.SetVisiblePitchForcefully*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetVisiblePitchForcefully
  name: SetVisiblePitchForcefully
  nameWithType: Entity.SetVisiblePitchForcefully
  fullName: Clay.Game.Mod.Entities.Entity.SetVisiblePitchForcefully
- uid: Clay.Game.Mod.Entities.Entity.SetScale*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetScale
  name: SetScale
  nameWithType: Entity.SetScale
  fullName: Clay.Game.Mod.Entities.Entity.SetScale
- uid: Clay.Game.Mod.Entities.Entity.SetSpeechBubbleRadius*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetSpeechBubbleRadius
  name: SetSpeechBubbleRadius
  nameWithType: Entity.SetSpeechBubbleRadius
  fullName: Clay.Game.Mod.Entities.Entity.SetSpeechBubbleRadius
- uid: Clay.Game.Mod.Entities.Entity.SetUIRadius*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetUIRadius
  name: SetUIRadius
  nameWithType: Entity.SetUIRadius
  fullName: Clay.Game.Mod.Entities.Entity.SetUIRadius
- uid: Clay.Game.Mod.Entities.Entity.SetViewRange*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetViewRange
  name: SetViewRange
  nameWithType: Entity.SetViewRange
  fullName: Clay.Game.Mod.Entities.Entity.SetViewRange
- uid: Clay.Game.Mod.Entities.Entity.SetFieldOfView*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetFieldOfView
  name: SetFieldOfView
  nameWithType: Entity.SetFieldOfView
  fullName: Clay.Game.Mod.Entities.Entity.SetFieldOfView
- uid: Clay.Game.Mod.Entities.Entity.SetHealthRegenRate*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetHealthRegenRate
  name: SetHealthRegenRate
  nameWithType: Entity.SetHealthRegenRate
  fullName: Clay.Game.Mod.Entities.Entity.SetHealthRegenRate
- uid: Clay.Game.Mod.Entities.Entity.CreateInventoryManager*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.CreateInventoryManager
  name: CreateInventoryManager
  nameWithType: Entity.CreateInventoryManager
  fullName: Clay.Game.Mod.Entities.Entity.CreateInventoryManager
- uid: Clay.Game.Mod.Entities.Entity.SetParentColony*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetParentColony
  name: SetParentColony
  nameWithType: Entity.SetParentColony
  fullName: Clay.Game.Mod.Entities.Entity.SetParentColony
- uid: Clay.Game.Mod.Entities.Entity.SetParentFlora*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetParentFlora
  name: SetParentFlora
  nameWithType: Entity.SetParentFlora
  fullName: Clay.Game.Mod.Entities.Entity.SetParentFlora
- uid: Clay.Game.Mod.Entities.Entity.SetAIGroup*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetAIGroup
  name: SetAIGroup
  nameWithType: Entity.SetAIGroup
  fullName: Clay.Game.Mod.Entities.Entity.SetAIGroup
- uid: Clay.Game.Mod.Entities.Entity.SetOwner*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetOwner
  name: SetOwner
  nameWithType: Entity.SetOwner
  fullName: Clay.Game.Mod.Entities.Entity.SetOwner
- uid: Clay.Game.Mod.Entities.Entity.IsPlayerAction*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsPlayerAction
  name: IsPlayerAction
  nameWithType: Entity.IsPlayerAction
  fullName: Clay.Game.Mod.Entities.Entity.IsPlayerAction
- uid: Clay.Game.Mod.Entities.Entity.SetPlayerAction*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetPlayerAction
  name: SetPlayerAction
  nameWithType: Entity.SetPlayerAction
  fullName: Clay.Game.Mod.Entities.Entity.SetPlayerAction
- uid: Clay.Game.Mod.Entities.Entity.CreateRadarTarget*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.CreateRadarTarget
  name: CreateRadarTarget
  nameWithType: Entity.CreateRadarTarget
  fullName: Clay.Game.Mod.Entities.Entity.CreateRadarTarget
- uid: RadarTypes
  commentId: T:RadarTypes
  name: RadarTypes
  nameWithType: RadarTypes
  fullName: RadarTypes
- uid: Clay.Game.Mod.Entities.Entity.RemoveRadarTarget*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RemoveRadarTarget
  name: RemoveRadarTarget
  nameWithType: Entity.RemoveRadarTarget
  fullName: Clay.Game.Mod.Entities.Entity.RemoveRadarTarget
- uid: Clay.Game.Mod.Entities.Entity.StartAIStateMachine*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.StartAIStateMachine
  name: StartAIStateMachine
  nameWithType: Entity.StartAIStateMachine
  fullName: Clay.Game.Mod.Entities.Entity.StartAIStateMachine
- uid: Clay.Game.Mod.Entities.Entity.SetAIStateMachineState*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetAIStateMachineState
  name: SetAIStateMachineState
  nameWithType: Entity.SetAIStateMachineState
  fullName: Clay.Game.Mod.Entities.Entity.SetAIStateMachineState
- uid: Clay.Game.Mod.Entities.Entity.ReadAIStateConfig*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ReadAIStateConfig
  name: ReadAIStateConfig
  nameWithType: Entity.ReadAIStateConfig
  fullName: Clay.Game.Mod.Entities.Entity.ReadAIStateConfig
- uid: AIState
  commentId: T:AIState
  name: AIState
  nameWithType: AIState
  fullName: AIState
- uid: Clay.Game.Mod.Entities.Entity.InitialiseScripts*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.InitialiseScripts
  name: InitialiseScripts
  nameWithType: Entity.InitialiseScripts
  fullName: Clay.Game.Mod.Entities.Entity.InitialiseScripts
- uid: Clay.Game.Mod.Entities.Entity.CleanUpScripts*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.CleanUpScripts
  name: CleanUpScripts
  nameWithType: Entity.CleanUpScripts
  fullName: Clay.Game.Mod.Entities.Entity.CleanUpScripts
- uid: Clay.Game.Mod.Entities.Entity.CallHandlers*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.CallHandlers
  name: CallHandlers
  nameWithType: Entity.CallHandlers
  fullName: Clay.Game.Mod.Entities.Entity.CallHandlers
- uid: Clay.Game.Mod.Entities.Entity.FindNearestTarget*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FindNearestTarget
  name: FindNearestTarget
  nameWithType: Entity.FindNearestTarget
  fullName: Clay.Game.Mod.Entities.Entity.FindNearestTarget
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: GameUtils.IsEntityTargetValidDelegate
  commentId: T:GameUtils.IsEntityTargetValidDelegate
  name: GameUtils.IsEntityTargetValidDelegate
  nameWithType: GameUtils.IsEntityTargetValidDelegate
  fullName: GameUtils.IsEntityTargetValidDelegate
- uid: Clay.Game.Mod.Entities.Entity.FindNearestEntity*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FindNearestEntity
  name: FindNearestEntity
  nameWithType: Entity.FindNearestEntity
  fullName: Clay.Game.Mod.Entities.Entity.FindNearestEntity
- uid: Clay.Game.Mod.Entities.Entity.FindNearestEntityAny*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FindNearestEntityAny
  name: FindNearestEntityAny
  nameWithType: Entity.FindNearestEntityAny
  fullName: Clay.Game.Mod.Entities.Entity.FindNearestEntityAny
- uid: Clay.Game.Mod.Entities.Entity.FollowEntity*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FollowEntity
  name: FollowEntity
  nameWithType: Entity.FollowEntity
  fullName: Clay.Game.Mod.Entities.Entity.FollowEntity
- uid: Clay.Game.Mod.Entities.Entity.IsFollowTargetValidCB*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsFollowTargetValidCB
  name: IsFollowTargetValidCB
  nameWithType: Entity.IsFollowTargetValidCB
  fullName: Clay.Game.Mod.Entities.Entity.IsFollowTargetValidCB
- uid: Clay.Game.Mod.Entities.Entity.IsFloraTargetValidCB*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsFloraTargetValidCB
  name: IsFloraTargetValidCB
  nameWithType: Entity.IsFloraTargetValidCB
  fullName: Clay.Game.Mod.Entities.Entity.IsFloraTargetValidCB
- uid: Clay.Game.Mod.Entities.Entity.IsFloraElementTargetValidCB*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsFloraElementTargetValidCB
  name: IsFloraElementTargetValidCB
  nameWithType: Entity.IsFloraElementTargetValidCB
  fullName: Clay.Game.Mod.Entities.Entity.IsFloraElementTargetValidCB
- uid: FloraElement
  commentId: T:FloraElement
  name: FloraElement
  nameWithType: FloraElement
  fullName: FloraElement
- uid: Clay.Game.Mod.Entities.Entity.InRange*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.InRange
  name: InRange
  nameWithType: Entity.InRange
  fullName: Clay.Game.Mod.Entities.Entity.InRange
- uid: Clay.Game.Mod.Entities.Entity.SceneryCollisionHandler*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SceneryCollisionHandler
  name: SceneryCollisionHandler
  nameWithType: Entity.SceneryCollisionHandler
  fullName: Clay.Game.Mod.Entities.Entity.SceneryCollisionHandler
- uid: Clay.Game.Mod.Entities.Entity.DoorCollisionHandler*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.DoorCollisionHandler
  name: DoorCollisionHandler
  nameWithType: Entity.DoorCollisionHandler
  fullName: Clay.Game.Mod.Entities.Entity.DoorCollisionHandler
- uid: Clay.Game.Mod.Entities.Entity.SetSpriteDef*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetSpriteDef
  name: SetSpriteDef
  nameWithType: Entity.SetSpriteDef
  fullName: Clay.Game.Mod.Entities.Entity.SetSpriteDef
- uid: Clay.Game.Mod.Entities.Entity.SetSpriteDefDelayed*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetSpriteDefDelayed
  name: SetSpriteDefDelayed
  nameWithType: Entity.SetSpriteDefDelayed
  fullName: Clay.Game.Mod.Entities.Entity.SetSpriteDefDelayed
- uid: Clay.Game.Mod.Entities.Entity.ClearSpriteDef*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ClearSpriteDef
  name: ClearSpriteDef
  nameWithType: Entity.ClearSpriteDef
  fullName: Clay.Game.Mod.Entities.Entity.ClearSpriteDef
- uid: Clay.Game.Mod.Entities.Entity.ProcessSprites*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ProcessSprites
  name: ProcessSprites
  nameWithType: Entity.ProcessSprites
  fullName: Clay.Game.Mod.Entities.Entity.ProcessSprites
- uid: Clay.Game.Mod.Entities.Entity.EditorSpriteNameChanged*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.EditorSpriteNameChanged
  name: EditorSpriteNameChanged
  nameWithType: Entity.EditorSpriteNameChanged
  fullName: Clay.Game.Mod.Entities.Entity.EditorSpriteNameChanged
- uid: Clay.Game.Mod.Entities.Entity.EditorHealthChanged*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.EditorHealthChanged
  name: EditorHealthChanged
  nameWithType: Entity.EditorHealthChanged
  fullName: Clay.Game.Mod.Entities.Entity.EditorHealthChanged
- uid: Clay.Game.Mod.Entities.Entity.RebuildSprite*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RebuildSprite
  name: RebuildSprite
  nameWithType: Entity.RebuildSprite
  fullName: Clay.Game.Mod.Entities.Entity.RebuildSprite
- uid: Clay.Game.Mod.Entities.Entity.AddOverlay*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.AddOverlay
  name: AddOverlay
  nameWithType: Entity.AddOverlay
  fullName: Clay.Game.Mod.Entities.Entity.AddOverlay
- uid: Overlay
  commentId: T:Overlay
  name: Overlay
  nameWithType: Overlay
  fullName: Overlay
- uid: Clay.Game.Mod.Entities.Entity.RemoveOverlay*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RemoveOverlay
  name: RemoveOverlay
  nameWithType: Entity.RemoveOverlay
  fullName: Clay.Game.Mod.Entities.Entity.RemoveOverlay
- uid: Clay.Game.Mod.Entities.Entity.ModifyHealth*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ModifyHealth
  name: ModifyHealth
  nameWithType: Entity.ModifyHealth
  fullName: Clay.Game.Mod.Entities.Entity.ModifyHealth
- uid: Clay.Game.Mod.Entities.Entity.SetHealth*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetHealth
  name: SetHealth
  nameWithType: Entity.SetHealth
  fullName: Clay.Game.Mod.Entities.Entity.SetHealth
- uid: Clay.Game.Mod.Entities.Entity.Heal*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Heal
  name: Heal
  nameWithType: Entity.Heal
  fullName: Clay.Game.Mod.Entities.Entity.Heal
- uid: Clay.Game.Mod.Entities.Entity.FindHardPoint*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FindHardPoint
  name: FindHardPoint
  nameWithType: Entity.FindHardPoint
  fullName: Clay.Game.Mod.Entities.Entity.FindHardPoint
- uid: Clay.Game.Mod.Entities.Entity.FindHardPointByIndex*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FindHardPointByIndex
  name: FindHardPointByIndex
  nameWithType: Entity.FindHardPointByIndex
  fullName: Clay.Game.Mod.Entities.Entity.FindHardPointByIndex
- uid: Clay.Game.Mod.Entities.Entity.FindWeapon*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FindWeapon
  name: FindWeapon
  nameWithType: Entity.FindWeapon
  fullName: Clay.Game.Mod.Entities.Entity.FindWeapon
- uid: Weapon
  commentId: T:Weapon
  name: Weapon
  nameWithType: Weapon
  fullName: Weapon
- uid: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPointIndex*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPointIndex
  name: FindWeaponAtHardPointIndex
  nameWithType: Entity.FindWeaponAtHardPointIndex
  fullName: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPointIndex
- uid: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint
  name: FindWeaponAtHardPoint
  nameWithType: Entity.FindWeaponAtHardPoint
  fullName: Clay.Game.Mod.Entities.Entity.FindWeaponAtHardPoint
- uid: Clay.Game.Mod.Entities.Entity.AddWeaponToIndex*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.AddWeaponToIndex
  name: AddWeaponToIndex
  nameWithType: Entity.AddWeaponToIndex
  fullName: Clay.Game.Mod.Entities.Entity.AddWeaponToIndex
- uid: Clay.Game.Mod.Entities.Entity.AddWeapon*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.AddWeapon
  name: AddWeapon
  nameWithType: Entity.AddWeapon
  fullName: Clay.Game.Mod.Entities.Entity.AddWeapon
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeapon*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RemoveWeapon
  name: RemoveWeapon
  nameWithType: Entity.RemoveWeapon
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeapon
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint
  name: RemoveWeaponAtHardPoint
  nameWithType: Entity.RemoveWeaponAtHardPoint
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPoint
- uid: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex
  name: RemoveWeaponAtHardPointIndex
  nameWithType: Entity.RemoveWeaponAtHardPointIndex
  fullName: Clay.Game.Mod.Entities.Entity.RemoveWeaponAtHardPointIndex
- uid: Clay.Game.Mod.Entities.Entity.GenerateWeaponCharacteristics*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.GenerateWeaponCharacteristics
  name: GenerateWeaponCharacteristics
  nameWithType: Entity.GenerateWeaponCharacteristics
  fullName: Clay.Game.Mod.Entities.Entity.GenerateWeaponCharacteristics
- uid: Clay.Game.Mod.Entities.Entity.TryAttack*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.TryAttack
  name: TryAttack
  nameWithType: Entity.TryAttack
  fullName: Clay.Game.Mod.Entities.Entity.TryAttack
- uid: Clay.Game.Mod.Entities.Entity.CanAttack*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.CanAttack
  name: CanAttack
  nameWithType: Entity.CanAttack
  fullName: Clay.Game.Mod.Entities.Entity.CanAttack
- uid: Clay.Game.Mod.Entities.Entity.IsEntityVisible*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsEntityVisible
  name: IsEntityVisible
  nameWithType: Entity.IsEntityVisible
  fullName: Clay.Game.Mod.Entities.Entity.IsEntityVisible
- uid: Clay.Game.Mod.Entities.Entity.IsInFieldOfView*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsInFieldOfView
  name: IsInFieldOfView
  nameWithType: Entity.IsInFieldOfView
  fullName: Clay.Game.Mod.Entities.Entity.IsInFieldOfView
- uid: UnityEngine.Rect
  commentId: T:UnityEngine.Rect
  parent: UnityEngine
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: Clay.Game.Mod.Entities.Entity.IsInLineOfSight*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsInLineOfSight
  name: IsInLineOfSight
  nameWithType: Entity.IsInLineOfSight
  fullName: Clay.Game.Mod.Entities.Entity.IsInLineOfSight
- uid: Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSight*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSight
  name: IsInFieldOfViewIsInLineOfSight
  nameWithType: Entity.IsInFieldOfViewIsInLineOfSight
  fullName: Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSight
- uid: Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors
  name: IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors
  nameWithType: Entity.IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors
  fullName: Clay.Game.Mod.Entities.Entity.IsInFieldOfViewIsInLineOfSightIgnoreUnlockedDoors
- uid: Clay.Game.Mod.Entities.Entity.IsInLineOfSightIgnoreUnlockedDoors*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsInLineOfSightIgnoreUnlockedDoors
  name: IsInLineOfSightIgnoreUnlockedDoors
  nameWithType: Entity.IsInLineOfSightIgnoreUnlockedDoors
  fullName: Clay.Game.Mod.Entities.Entity.IsInLineOfSightIgnoreUnlockedDoors
- uid: Clay.Game.Mod.Entities.Entity.Explode*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Explode
  name: Explode
  nameWithType: Entity.Explode
  fullName: Clay.Game.Mod.Entities.Entity.Explode
- uid: Clay.Game.Mod.Entities.Entity.ExplodeOnTarget*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ExplodeOnTarget
  name: ExplodeOnTarget
  nameWithType: Entity.ExplodeOnTarget
  fullName: Clay.Game.Mod.Entities.Entity.ExplodeOnTarget
- uid: Clay.Game.Mod.Entities.Entity.ExplodeOnTargetBranch*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ExplodeOnTargetBranch
  name: ExplodeOnTargetBranch
  nameWithType: Entity.ExplodeOnTargetBranch
  fullName: Clay.Game.Mod.Entities.Entity.ExplodeOnTargetBranch
- uid: FloraBranch
  commentId: T:FloraBranch
  name: FloraBranch
  nameWithType: FloraBranch
  fullName: FloraBranch
- uid: Clay.Game.Mod.Entities.Entity.DamagedBy*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.DamagedBy
  name: DamagedBy
  nameWithType: Entity.DamagedBy
  fullName: Clay.Game.Mod.Entities.Entity.DamagedBy
- uid: Clay.Game.Mod.Entities.Entity.WeakenedBy*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.WeakenedBy
  name: WeakenedBy
  nameWithType: Entity.WeakenedBy
  fullName: Clay.Game.Mod.Entities.Entity.WeakenedBy
- uid: Clay.Game.Mod.Entities.Entity.SuppressedBy*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SuppressedBy
  name: SuppressedBy
  nameWithType: Entity.SuppressedBy
  fullName: Clay.Game.Mod.Entities.Entity.SuppressedBy
- uid: Clay.Game.Mod.Entities.Entity.FrozenBy*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FrozenBy
  name: FrozenBy
  nameWithType: Entity.FrozenBy
  fullName: Clay.Game.Mod.Entities.Entity.FrozenBy
- uid: Clay.Game.Mod.Entities.Entity.AttackedBy*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.AttackedBy
  name: AttackedBy
  nameWithType: Entity.AttackedBy
  fullName: Clay.Game.Mod.Entities.Entity.AttackedBy
- uid: Clay.Game.Mod.Entities.Entity.FloraAttackedBy*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.FloraAttackedBy
  name: FloraAttackedBy
  nameWithType: Entity.FloraAttackedBy
  fullName: Clay.Game.Mod.Entities.Entity.FloraAttackedBy
- uid: Clay.Game.Mod.Entities.Entity.DieQuietly*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.DieQuietly
  name: DieQuietly
  nameWithType: Entity.DieQuietly
  fullName: Clay.Game.Mod.Entities.Entity.DieQuietly
- uid: Clay.Game.Mod.Entities.Entity.OutOfHealth*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.OutOfHealth
  name: OutOfHealth
  nameWithType: Entity.OutOfHealth
  fullName: Clay.Game.Mod.Entities.Entity.OutOfHealth
- uid: Clay.Game.Mod.Entities.Entity.TimedDeath*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.TimedDeath
  name: TimedDeath
  nameWithType: Entity.TimedDeath
  fullName: Clay.Game.Mod.Entities.Entity.TimedDeath
- uid: Clay.Game.Mod.Entities.Entity.Die*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.Die
  name: Die
  nameWithType: Entity.Die
  fullName: Clay.Game.Mod.Entities.Entity.Die
- uid: Clay.Game.Mod.Entities.Entity.EnterStasis*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.EnterStasis
  name: EnterStasis
  nameWithType: Entity.EnterStasis
  fullName: Clay.Game.Mod.Entities.Entity.EnterStasis
- uid: Clay.Game.Mod.Entities.Entity.EnterSickness*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.EnterSickness
  name: EnterSickness
  nameWithType: Entity.EnterSickness
  fullName: Clay.Game.Mod.Entities.Entity.EnterSickness
- uid: Clay.Game.Mod.Entities.Entity.EnterFreeze*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.EnterFreeze
  name: EnterFreeze
  nameWithType: Entity.EnterFreeze
  fullName: Clay.Game.Mod.Entities.Entity.EnterFreeze
- uid: Clay.Game.Mod.Entities.Entity.SpreadSickness*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SpreadSickness
  name: SpreadSickness
  nameWithType: Entity.SpreadSickness
  fullName: Clay.Game.Mod.Entities.Entity.SpreadSickness
- uid: Clay.Game.Mod.Entities.Entity.IsSicknessTargetValidCB*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsSicknessTargetValidCB
  name: IsSicknessTargetValidCB
  nameWithType: Entity.IsSicknessTargetValidCB
  fullName: Clay.Game.Mod.Entities.Entity.IsSicknessTargetValidCB
- uid: Clay.Game.Mod.Entities.Entity.IsContactDamageTargetValidCB*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsContactDamageTargetValidCB
  name: IsContactDamageTargetValidCB
  nameWithType: Entity.IsContactDamageTargetValidCB
  fullName: Clay.Game.Mod.Entities.Entity.IsContactDamageTargetValidCB
- uid: Clay.Game.Mod.Entities.Entity.ParentFloraDied*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ParentFloraDied
  name: ParentFloraDied
  nameWithType: Entity.ParentFloraDied
  fullName: Clay.Game.Mod.Entities.Entity.ParentFloraDied
- uid: Clay.Game.Mod.Entities.Entity.ParentColonised*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ParentColonised
  name: ParentColonised
  nameWithType: Entity.ParentColonised
  fullName: Clay.Game.Mod.Entities.Entity.ParentColonised
- uid: Clay.Game.Mod.Entities.Entity.SetColony*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetColony
  name: SetColony
  nameWithType: Entity.SetColony
  fullName: Clay.Game.Mod.Entities.Entity.SetColony
- uid: Clay.Game.Mod.Entities.Entity.OnEntityDiedOrTrashedListener*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.OnEntityDiedOrTrashedListener
  name: OnEntityDiedOrTrashedListener
  nameWithType: Entity.OnEntityDiedOrTrashedListener
  fullName: Clay.Game.Mod.Entities.Entity.OnEntityDiedOrTrashedListener
- uid: Clay.Game.Mod.Entities.Entity.DropDeathEnergy*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.DropDeathEnergy
  name: DropDeathEnergy
  nameWithType: Entity.DropDeathEnergy
  fullName: Clay.Game.Mod.Entities.Entity.DropDeathEnergy
- uid: Clay.Game.Mod.Entities.Entity.PlaySfx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.PlaySfx
  name: PlaySfx
  nameWithType: Entity.PlaySfx
  fullName: Clay.Game.Mod.Entities.Entity.PlaySfx
- uid: Tuna.SoundVoice
  commentId: T:Tuna.SoundVoice
  parent: Tuna
  name: SoundVoice
  nameWithType: SoundVoice
  fullName: Tuna.SoundVoice
- uid: Clay.Game.Mod.Entities.Entity.PlayOrRetrySfx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.PlayOrRetrySfx
  name: PlayOrRetrySfx
  nameWithType: Entity.PlayOrRetrySfx
  fullName: Clay.Game.Mod.Entities.Entity.PlayOrRetrySfx
- uid: Clay.Game.Mod.Entities.Entity.StopSfx*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.StopSfx
  name: StopSfx
  nameWithType: Entity.StopSfx
  fullName: Clay.Game.Mod.Entities.Entity.StopSfx
- uid: Clay.Game.Mod.Entities.Entity.StatRecord*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.StatRecord
  name: StatRecord
  nameWithType: Entity.StatRecord
  fullName: Clay.Game.Mod.Entities.Entity.StatRecord
- uid: Clay.Game.Mod.Entities.Entity.StatRecordLine*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.StatRecordLine
  name: StatRecordLine
  nameWithType: Entity.StatRecordLine
  fullName: Clay.Game.Mod.Entities.Entity.StatRecordLine
- uid: Clay.Game.Mod.Entities.Entity.StatsGetString*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.StatsGetString
  name: StatsGetString
  nameWithType: Entity.StatsGetString
  fullName: Clay.Game.Mod.Entities.Entity.StatsGetString
- uid: Clay.Game.Mod.Entities.Entity.StatsClear*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.StatsClear
  name: StatsClear
  nameWithType: Entity.StatsClear
  fullName: Clay.Game.Mod.Entities.Entity.StatsClear
- uid: Clay.Game.Mod.Entities.Entity.IsSaveable*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IsSaveable
  name: IsSaveable
  nameWithType: Entity.IsSaveable
  fullName: Clay.Game.Mod.Entities.Entity.IsSaveable
- uid: Clay.Game.Mod.Entities.Entity.SpawnEntityLua*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SpawnEntityLua
  name: SpawnEntityLua
  nameWithType: Entity.SpawnEntityLua
  fullName: Clay.Game.Mod.Entities.Entity.SpawnEntityLua
- uid: Clay.Game.Mod.Entities.Entity.SpawnEntity*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SpawnEntity
  name: SpawnEntity
  nameWithType: Entity.SpawnEntity
  fullName: Clay.Game.Mod.Entities.Entity.SpawnEntity
- uid: Clay.Game.Mod.Entities.Entity.ValidateSpawn*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ValidateSpawn
  name: ValidateSpawn
  nameWithType: Entity.ValidateSpawn
  fullName: Clay.Game.Mod.Entities.Entity.ValidateSpawn
- uid: Clay.Game.Mod.Entities.Entity.SetAction*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.SetAction
  name: SetAction
  nameWithType: Entity.SetAction
  fullName: Clay.Game.Mod.Entities.Entity.SetAction
- uid: Clay.Game.Mod.Entities.Entity.PingFollowVisual*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.PingFollowVisual
  name: PingFollowVisual
  nameWithType: Entity.PingFollowVisual
  fullName: Clay.Game.Mod.Entities.Entity.PingFollowVisual
- uid: Clay.Game.Mod.Entities.Entity.IssueCommand*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.IssueCommand
  name: IssueCommand
  nameWithType: Entity.IssueCommand
  fullName: Clay.Game.Mod.Entities.Entity.IssueCommand
- uid: Clay.Game.CommandTypes
  commentId: T:Clay.Game.CommandTypes
  parent: Clay.Game
  name: CommandTypes
  nameWithType: CommandTypes
  fullName: Clay.Game.CommandTypes
- uid: Clay.Game.Mod.Entities.Entity.GetRespawnString*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.GetRespawnString
  name: GetRespawnString
  nameWithType: Entity.GetRespawnString
  fullName: Clay.Game.Mod.Entities.Entity.GetRespawnString
- uid: Clay.Game.Mod.Entities.Entity.GetCommandLine*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.GetCommandLine
  name: GetCommandLine
  nameWithType: Entity.GetCommandLine
  fullName: Clay.Game.Mod.Entities.Entity.GetCommandLine
- uid: Clay.Game.Mod.Entities.Entity.ParentAwakened*
  commentId: Overload:Clay.Game.Mod.Entities.Entity.ParentAwakened
  name: ParentAwakened
  nameWithType: Entity.ParentAwakened
  fullName: Clay.Game.Mod.Entities.Entity.ParentAwakened
